df.sum.sum[,1]),
value = c(df.glob.sum[,2], df.loc.sum[,2],
df.shift.sum[,2], df.shoulder.sum[,2],
df.sum.sum[,2]),
parameters = c(rep(c("glob", "loc", "shift",
"shoulder", "sum"),
each = 5)))
}else{
df2 <- data.frame(category = c(df.loc.sum[,1], df.shift.sum[,1],
df.shoulder.sum[,1],df.sum.sum[,1]),
value = c(df.loc.sum[,2], df.shift.sum[,2],
df.shoulder.sum[,2], df.sum.sum[,2]),
parameters = c(rep(c("loc", "shift", "shoulder",
"sum"), each = 4)))
}
plot.parameters.detail[[z]] <-
ggplot(df2, aes(x = category, y = value, fill = parameters))+
geom_bar(stat = "identity", position = "dodge")+
geom_text(aes(label = value),
vjust = -0.5,
position = position_dodge(width = 1.9),
size = 2)+
labs(x = "number of parameters pro shift",
y = "number of proteins",
title = title[[z]])
print(plot.parameters.detail[[z]])
}
#library(ggplot2)
#library(ggpubr)
parameters.all <- list(parameters.mvm, parameters.zt, parameters.mms)
plot.parameters.detail <- list()
for (z in 1:3){
parameters <- parameters.all[[z]]
if(z == 3){
g <- 2
}else{g <- 3}
for (y in 1:dim(parameters)[1]){
if (parameters[y,g] == "no shift"){
parameters[y,g] <- 0
} else{parameters[y,g] <- 1}
}
parameters.m <- as.matrix(parameters)
sum_parameters <- apply(parameters.m, 1, function(x){
sum(as.numeric(x))})
df <- as.data.frame(sum_parameters)
title <- c("How many parameters support the proteins? MVM",
"How many parameters support the proteins? z-Transformation",
"How many parameters support the proteins? MMS")
if(z == 3){
c <- c(0,1,2,3)
}else{c<- c(0,1,2,3,4)}
if(z == 3){
d <- 0
}
else {d <- 1}
if (z != 3){
df.glob <- as.data.frame(parameters[,d])
df.glob.sum <- as.data.frame(c)
for (x in 0:4){
df.glob.sum[x+1,2] <- sum(df.glob[which(sum_parameters == x),])}}
df.loc <- as.data.frame(parameters[,d+1])
df.loc.sum <- as.data.frame(c)
for (x in 0:(d+3)){
df.loc.sum[x+1,2] <-
sum(as.numeric(df.loc[which(sum_parameters == x),]))}
df.shift <- as.data.frame(parameters[,d+2])
df.shift.sum <- as.data.frame(c)
for (x in 0:(d+3)){
df.shift.sum[x+1,2] <-
sum(as.numeric(df.shift[which(sum_parameters == x),]))}
df.shoulder <- as.data.frame(parameters[,d+3])
df.shoulder.sum <- as.data.frame(c)
for (x in 0:(d+3)){
df.shoulder.sum[x+1,2] <-
sum(df.shoulder[which(sum_parameters == x),])}
df.sum <- as.data.frame(sum_parameters)
df.sum.sum <- as.data.frame(c)
for (x in 0:(d+3)){
df.sum.sum[x+1,2] <- sum(sum_parameters == x)}
if (z != 3){
df2 <- data.frame(category = c(df.glob.sum[,1], df.loc.sum[,1],
df.shift.sum[,1], df.shoulder.sum[,1],
df.sum.sum[,1]),
value = c(df.glob.sum[,2], df.loc.sum[,2],
df.shift.sum[,2], df.shoulder.sum[,2],
df.sum.sum[,2]),
parameters = c(rep(c("glob", "loc", "shift",
"shoulder", "sum"),
each = 5)))
}else{
df2 <- data.frame(category = c(df.loc.sum[,1], df.shift.sum[,1],
df.shoulder.sum[,1],df.sum.sum[,1]),
value = c(df.loc.sum[,2], df.shift.sum[,2],
df.shoulder.sum[,2], df.sum.sum[,2]),
parameters = c(rep(c("loc", "shift", "shoulder",
"sum"), each = 4)))
}
plot.parameters.detail[[z]] <-
ggplot(df2, aes(x = category, y = value, fill = parameters))+
geom_bar(stat = "identity", position = position_dodge(width = 1.9))+
geom_text(aes(label = value),
vjust = -0.5,
position = position_dodge(width = 1.9),
size = 2)+
labs(x = "number of parameters pro shift",
y = "number of proteins",
title = title[[z]])
print(plot.parameters.detail[[z]])
}
plot.parameters.detail[[z]] <-
ggplot(df2, aes(x = category, y = value, fill = parameters))+
geom_bar(stat = "identity", position = position_dodge(width = 0.9))+
geom_text(aes(label = value),
vjust = -0.5,
position = position_dodge(width = 0.9),
size = 2)+
labs(x = "number of parameters pro shift",
y = "number of proteins",
title = title[[z]])
print(plot.parameters.detail[[z]])
plot.parameters.detail[[z]] <-
ggplot(df2, aes(x = category, y = value, fill = parameters))+
geom_bar(stat = "identity", position = position_dodge(width = 1.2))+
geom_text(aes(label = value),
vjust = -0.5,
position = position_dodge(width = 1.2),
size = 2)+
labs(x = "number of parameters pro shift",
y = "number of proteins",
title = title[[z]])
print(plot.parameters.detail[[z]])
#library(ggplot2)
#library(ggpubr)
parameters.all <- list(parameters.mvm, parameters.zt, parameters.mms)
plot.parameters.detail <- list()
for (z in 1:3){
parameters <- parameters.all[[z]]
if(z == 3){
g <- 2
}else{g <- 3}
for (y in 1:dim(parameters)[1]){
if (parameters[y,g] == "no shift"){
parameters[y,g] <- 0
} else{parameters[y,g] <- 1}
}
parameters.m <- as.matrix(parameters)
sum_parameters <- apply(parameters.m, 1, function(x){
sum(as.numeric(x))})
df <- as.data.frame(sum_parameters)
title <- c("How many parameters support the proteins? MVM",
"How many parameters support the proteins? z-Transformation",
"How many parameters support the proteins? MMS")
if(z == 3){
c <- c(0,1,2,3)
}else{c<- c(0,1,2,3,4)}
if(z == 3){
d <- 0
}
else {d <- 1}
if (z != 3){
df.glob <- as.data.frame(parameters[,d])
df.glob.sum <- as.data.frame(c)
for (x in 0:4){
df.glob.sum[x+1,2] <- sum(df.glob[which(sum_parameters == x),])}}
df.loc <- as.data.frame(parameters[,d+1])
df.loc.sum <- as.data.frame(c)
for (x in 0:(d+3)){
df.loc.sum[x+1,2] <-
sum(as.numeric(df.loc[which(sum_parameters == x),]))}
df.shift <- as.data.frame(parameters[,d+2])
df.shift.sum <- as.data.frame(c)
for (x in 0:(d+3)){
df.shift.sum[x+1,2] <-
sum(as.numeric(df.shift[which(sum_parameters == x),]))}
df.shoulder <- as.data.frame(parameters[,d+3])
df.shoulder.sum <- as.data.frame(c)
for (x in 0:(d+3)){
df.shoulder.sum[x+1,2] <-
sum(df.shoulder[which(sum_parameters == x),])}
df.sum <- as.data.frame(sum_parameters)
df.sum.sum <- as.data.frame(c)
for (x in 0:(d+3)){
df.sum.sum[x+1,2] <- sum(sum_parameters == x)}
if (z != 3){
df2 <- data.frame(category = c(df.glob.sum[,1], df.loc.sum[,1],
df.shift.sum[,1], df.shoulder.sum[,1],
df.sum.sum[,1]),
value = c(df.glob.sum[,2], df.loc.sum[,2],
df.shift.sum[,2], df.shoulder.sum[,2],
df.sum.sum[,2]),
parameters = c(rep(c("glob", "loc", "shift",
"shoulder", "sum"),
each = 5)))
}else{
df2 <- data.frame(category = c(df.loc.sum[,1], df.shift.sum[,1],
df.shoulder.sum[,1],df.sum.sum[,1]),
value = c(df.loc.sum[,2], df.shift.sum[,2],
df.shoulder.sum[,2], df.sum.sum[,2]),
parameters = c(rep(c("loc", "shift", "shoulder",
"sum"), each = 4)))
}
plot.parameters.detail[[z]] <-
ggplot(df2, aes(x = category, y = value, fill = parameters))+
geom_bar(stat = "identity", position = position_dodge(width = 0.8))+
geom_text(aes(label = value),
vjust = -0.5,
position = position_dodge(width = 0.8),
size = 2)+
labs(x = "number of parameters pro shift",
y = "number of proteins",
title = title[[z]])
print(plot.parameters.detail[[z]])
}
plot.parameters.detail[[z]] <-
ggplot(df2, aes(x = category, y = value, fill = parameters))+
geom_bar(stat = "identity", width = 0.5,
position = position_dodge(width = 0.9))+
geom_text(aes(label = value),
vjust = -0.5,
position = position_dodge(width = 0.9),
size = 2)+
labs(x = "number of parameters pro shift",
y = "number of proteins",
title = title[[z]])
print(plot.parameters.detail[[z]])
plot.parameters.detail[[z]] <-
ggplot(df2, aes(x = category, y = value, fill = parameters))+
geom_bar(stat = "identity", width = 0.5,
position = position_dodge(width = 1.2))+
geom_text(aes(label = value),
vjust = -0.5,
position = position_dodge(width = 1.2),
size = 2)+
labs(x = "number of parameters pro shift",
y = "number of proteins",
title = title[[z]])
print(plot.parameters.detail[[z]])
#library(ggplot2)
#library(ggpubr)
parameters.all <- list(parameters.mvm, parameters.zt, parameters.mms)
plot.parameters.detail <- list()
for (z in 1:3){
parameters <- parameters.all[[z]]
if(z == 3){
g <- 2
}else{g <- 3}
for (y in 1:dim(parameters)[1]){
if (parameters[y,g] == "no shift"){
parameters[y,g] <- 0
} else{parameters[y,g] <- 1}
}
parameters.m <- as.matrix(parameters)
sum_parameters <- apply(parameters.m, 1, function(x){
sum(as.numeric(x))})
df <- as.data.frame(sum_parameters)
title <- c("How many parameters support the proteins? MVM",
"How many parameters support the proteins? z-Transformation",
"How many parameters support the proteins? MMS")
if(z == 3){
c <- c(0,1,2,3)
}else{c<- c(0,1,2,3,4)}
if(z == 3){
d <- 0
}
else {d <- 1}
if (z != 3){
df.glob <- as.data.frame(parameters[,d])
df.glob.sum <- as.data.frame(c)
for (x in 0:4){
df.glob.sum[x+1,2] <- sum(df.glob[which(sum_parameters == x),])}}
df.loc <- as.data.frame(parameters[,d+1])
df.loc.sum <- as.data.frame(c)
for (x in 0:(d+3)){
df.loc.sum[x+1,2] <-
sum(as.numeric(df.loc[which(sum_parameters == x),]))}
df.shift <- as.data.frame(parameters[,d+2])
df.shift.sum <- as.data.frame(c)
for (x in 0:(d+3)){
df.shift.sum[x+1,2] <-
sum(as.numeric(df.shift[which(sum_parameters == x),]))}
df.shoulder <- as.data.frame(parameters[,d+3])
df.shoulder.sum <- as.data.frame(c)
for (x in 0:(d+3)){
df.shoulder.sum[x+1,2] <-
sum(df.shoulder[which(sum_parameters == x),])}
df.sum <- as.data.frame(sum_parameters)
df.sum.sum <- as.data.frame(c)
for (x in 0:(d+3)){
df.sum.sum[x+1,2] <- sum(sum_parameters == x)}
if (z != 3){
df2 <- data.frame(category = c(df.glob.sum[,1], df.loc.sum[,1],
df.shift.sum[,1], df.shoulder.sum[,1],
df.sum.sum[,1]),
value = c(df.glob.sum[,2], df.loc.sum[,2],
df.shift.sum[,2], df.shoulder.sum[,2],
df.sum.sum[,2]),
parameters = c(rep(c("glob", "loc", "shift",
"shoulder", "sum"),
each = 5)))
}else{
df2 <- data.frame(category = c(df.loc.sum[,1], df.shift.sum[,1],
df.shoulder.sum[,1],df.sum.sum[,1]),
value = c(df.loc.sum[,2], df.shift.sum[,2],
df.shoulder.sum[,2], df.sum.sum[,2]),
parameters = c(rep(c("loc", "shift", "shoulder",
"sum"), each = 4)))
}
plot.parameters.detail[[z]] <-
ggplot(df2, aes(x = category, y = value, fill = parameters))+
geom_bar(stat = "identity", position = position_dodge(width = 0.9))+
geom_text(aes(label = value),
vjust = -0.5,
position = position_dodge(width = 0.9),
size = 2)+
labs(x = "number of parameters pro shift",
y = "number of proteins",
title = title[[z]])
print(plot.parameters.detail[[z]])
}
library("ggpubr")
library("factoextra")
library("ggplot2")
df <- data.frame(cbind(shoulderregion.zt.v, shoulderregion.zt.v))
res.km <- kmeans(scale(df[, -5]), 3, nstart = 25, algorithm = "Hartigan-Wong")
g <- fviz_cluster(res.km, data = df,
geom = "point",
xlab = "Shoulderregion",
ylab = "Shoulderregion",
main = "Clusters of Shoulderregions",
ggtheme = theme_bw(),)
g + theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank())
library("ggpubr")
library("factoextra")
library("ggplot2")
df <- data.frame(cbind(precipitated.mvm.v, precipitated.mvm.v, precipitated.zt.v, precipitated.zt.v, precipitated.mms.v, precipitated.mms.v))
for (x in 1:3){
df <- df.shifts[,(2*x-1):(2*x)]
res.km <-
kmeans(scale(df[, -5]), 2, nstart = 25, algorithm = "Hartigan-Wong")
g <- fviz_cluster(res.km, data = df,
geom = "point",
xlab = "Precipitation",
ylab = "Precipitation",
main = "Clusters of Precipitation",
ggtheme = theme_bw(),)
g + theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank())
}
library("ggpubr")
library("factoextra")
library("ggplot2")
df.precipitation <- data.frame(cbind(precipitated.mvm.v, precipitated.mvm.v, precipitated.zt.v, precipitated.zt.v, precipitated.mms.v, precipitated.mms.v))
for (x in 1:3){
df <- df.precipitation[,(2*x-1):(2*x)]
res.km <-
kmeans(scale(df[, -5]), 2, nstart = 25, algorithm = "Hartigan-Wong")
g <- fviz_cluster(res.km, data = df,
geom = "point",
xlab = "Precipitation",
ylab = "Precipitation",
main = "Clusters of Precipitation",
ggtheme = theme_bw(),)
g + theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank())
}
library("ggpubr")
library("factoextra")
library("ggplot2")
df.precipitation <- data.frame(cbind(precipitated.mvm.v, precipitated.mvm.v, precipitated.zt.v, precipitated.zt.v, precipitated.mms.v, precipitated.mms.v))
plot.cluster.precipitated <- list()
for (x in 1:3){
df <- df.precipitation[,(2*x-1):(2*x)]
res.km <-
kmeans(scale(df[, -5]), 2, nstart = 25, algorithm = "Hartigan-Wong")
g <- fviz_cluster(res.km, data = df,
geom = "point",
xlab = "Precipitation",
ylab = "Precipitation",
main = "Clusters of Precipitation",
ggtheme = theme_bw(),)
plot.cluster.precipitated[[x]]<-
g + theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank())
print(plot.cluster.precipitated[[x]])
}
library("ggpubr")
library("factoextra")
library("ggplot2")
df.precipitation <- data.frame(cbind(precipitated.mvm.v, precipitated.mvm.v, precipitated.zt.v, precipitated.zt.v, precipitated.mms.v, precipitated.mms.v))
plot.cluster.precipitated <- list()
for (x in 1:3){
df <- df.precipitation[,(2*x-1):(2*x)]
res.km <-
kmeans(scale(df[, -5]), 2, nstart = 25, algorithm = "Hartigan-Wong")
title <- c("Clusters of Precipitation calculated after MVM", "Clusters of Precipitation calculated after z-Transformation", "Clusters of Precipitation calculated after MMS")
g <- fviz_cluster(res.km, data = df,
geom = "point",
xlab = "Precipitation",
ylab = "Precipitation",
main = title(x),
ggtheme = theme_bw(),)
plot.cluster.precipitated[[x]]<-
g + theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank())
print(plot.cluster.precipitated[[x]])
}
library("ggpubr")
library("factoextra")
library("ggplot2")
df.precipitation <- data.frame(cbind(precipitated.mvm.v, precipitated.mvm.v, precipitated.zt.v, precipitated.zt.v, precipitated.mms.v, precipitated.mms.v))
plot.cluster.precipitated <- list()
for (x in 1:3){
df <- df.precipitation[,(2*x-1):(2*x)]
res.km <-
kmeans(scale(df[, -5]), 2, nstart = 25, algorithm = "Hartigan-Wong")
title <- c("Clusters of Precipitation calculated after MVM",
"Clusters of Precipitation calculated after z-Transformation",
"Clusters of Precipitation calculated after MMS")
g <- fviz_cluster(res.km, data = df,
geom = "point",
xlab = "Precipitation",
ylab = "Precipitation",
main = title(x),
ggtheme = theme_bw(),)
plot.cluster.precipitated[[x]]<-
g + theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank())
print(plot.cluster.precipitated[[x]])
}
library("ggpubr")
library("factoextra")
library("ggplot2")
df.precipitation <- data.frame(cbind(precipitated.mvm.v, precipitated.mvm.v, precipitated.zt.v, precipitated.zt.v, precipitated.mms.v, precipitated.mms.v))
plot.cluster.precipitated <- list()
for (x in 1:3){
df <- df.precipitation[,(2*x-1):(2*x)]
res.km <-
kmeans(scale(df[, -5]), 2, nstart = 25, algorithm = "Hartigan-Wong")
title <- c("Clusters of Precipitation calculated after MVM",
"Clusters of Precipitation calculated after z-Transformation",
"Clusters of Precipitation calculated after MMS")
g <- fviz_cluster(res.km, data = df,
geom = "point",
xlab = "Precipitation",
ylab = "Precipitation",
main = title[x],
ggtheme = theme_bw(),)
plot.cluster.precipitated[[x]]<-
g + theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank())
print(plot.cluster.precipitated[[x]])
}
library("ggpubr")
library("factoextra")
library("ggplot2")
df.precipitation <- data.frame(cbind(precipitated.mvm.v, precipitated.mvm.v, precipitated.zt.v, precipitated.zt.v, precipitated.mms.v, precipitated.mms.v))
plot.cluster.precipitated <- list()
for (x in 1:3){
df <- df.precipitation[,(2*x-1):(2*x)]
res.km <-
kmeans(scale(df[, -5]), 2, nstart = 25, algorithm = "Hartigan-Wong")
title <- c("Clusters of Precipitation calculated after MVM",
"Clusters of Precipitation calculated after z-Transformation",
"Clusters of Precipitation calculated after MMS")
g <- fviz_cluster(res.km, data = df,
geom = "point",
xlab = "Precipitation",
ylab = "Precipitation",
main = title[x],
ggtheme = theme_bw(),)
plot.cluster.precipitated[[x]]<-
g #+ theme(axis.text.x = element_blank(),
#       axis.text.y = element_blank(),
#      axis.ticks = element_blank())
print(plot.cluster.precipitated[[x]])
}
View(precipitated.mms.v)
library("ggpubr")
library("factoextra")
library("ggplot2")
df.precipitation <- data.frame(cbind(precipitated.mvm.v, precipitated.mvm.v, precipitated.zt.v, precipitated.zt.v, precipitated.mms.v, precipitated.mms.v))
View(precipitated.mms.v)
plot.cluster.precipitated <- list()
for (x in 1:3){
df <- df.precipitation[,(2*x-1):(2*x)]
res.km <-
kmeans(scale(df[, -5]), 2, nstart = 25, algorithm = "Hartigan-Wong")
title <- c("Clusters of Precipitation calculated after MVM",
"Clusters of Precipitation calculated after z-Transformation",
"Clusters of Precipitation calculated after MMS")
g <- fviz_cluster(res.km, data = df,
geom = "point",
xlab = "Precipitation",
ylab = "Precipitation",
main = title[x],
ggtheme = theme_bw(),)
plot.cluster.precipitated[[x]]<-
g #+ theme(axis.text.x = element_blank(),
#        axis.text.y = element_blank(),
#       axis.ticks = element_blank())
print(plot.cluster.precipitated[[x]])
}
library("caret")
install.packages("caret")
