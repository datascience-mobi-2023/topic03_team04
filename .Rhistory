predictions_mms_rdeep_shift <- matrix(0, nrow = nrow(predictions_mms_plot), ncol = ncol(predictions_mms_plot))
for(i in 1:nrow(predictions_mms_plot)) {
for(j in 1:ncol(predictions_mms_plot)){
if(predictions_mms_plot[i,j] > 2) {
predictions_mvm_rdeep[i,j] <- 1
} else if (predictions_mms_plot[i,j] < 2) {
predictions_mms_plot[i,j] <- 0
}
}
}
rownames(predictions_mms_rdeep) <- rownames(rnase.mvm[2501:3074, ])
predictions_mms_rdeep_shift
predictions_mms_rdeep_shift
predictions_mms_rdeep_shift <- matrix(0, nrow = nrow(predictions_mms_plot), ncol = ncol(predictions_mms_plot))
for(i in 1:nrow(predictions_mms_plot)) {
for(j in 1:ncol(predictions_mms_plot)){
if(predictions_mms_plot[i,j] > 2) {
predictions_mms_rdeep_shift[i,j] <- 1
} else if (predictions_mms_plot[i,j] < 2) {
predictions_mms_rdeep_shift[i,j] <- 0
}
}
}
rownames(predictions_mms_rdeep_shift) <- rownames(rnase.mvm[2501:3074, ])
predictions_mms_rdeep_shift
predictions_mms_plot
predictions_zt_plot
x <- train_zt_2$Korrelation_2
shift.amount = data.frame(shift_mvm_global)
correlation.zt <-as.data.frame(sapply(1:nrow(ctrl.zt), function(i) cor(as.numeric(ctrl.zt[i, ]), as.numeric(rnase.zt[i, ]))))
rownames(correlation.zt) <- rownames(rnase.zt)
train_zt_2 <- data.frame(Korrelation_2 = correlation.zt[1:2500, ], Shift_2 = shift.amount[1:2500, ])
model_zt_all_2 <- lm(Shift_2 ~ Korrelation_2, data = train_zt_2)
test_zt_2 <- data.frame(Korrelation_2 = correlation.zt[2501:3074, ])
predictions_zt_2 <- as.data.frame(predict(model_zt_all_2, newdata = test_zt_2))
predictions_zt_rdeep <- matrix(0, nrow = nrow(predictions_zt_2), ncol = ncol(predictions_zt_2))
for(i in 1:nrow(predictions_zt_2)) {
for(j in 1:ncol(predictions_zt_2)){
if(predictions_zt_2[i,j] > 2) {
predictions_zt_rdeep[i,j] <- 1
}  else if(predictions_zt_2[i,j] < (-2)) {
predictions_zt_rdeep[i,j] <- (-1)
} else {predictions_zt_rdeep[i,j] <- 0
}
}
}
rownames(predictions_zt_rdeep) <- rownames(rnase.zt[2501:3074, ])
# print(summary(model_zt_all_2))
# View(predictions_zt_rdeep)
x <- train_zt_2$Korrelation_2
y <- train_zt_2$Shift_2
plot(x, y, main = "Regression Analysis", xlab = "Correlation - Ctrl and RNase", ylab = "Shift in Fraction", xlim = c(min(x), max(x)), ylim = c(min(y), max(y)), pch = 16, cex = 0.9, cex.main = 0.97, cex.lab = 0.9, col = "darkgrey")
abline(model_zt_all_2, col = "red", lwd = 2)
abline(h = 2.5, col = "green4", lwd = 2)
abline(h = - 2.5, col = "green4", lwd = 2)
test_x <- test_zt_2$Korrelation_2
predicted_y <- predict(model_zt_all_2, newdata = test_zt_2)
points(test_x, predicted_y, col = "lightblue", pch = 16, cex = 0.9)
legend("topleft", legend = c("Trained Data", "Predicted Data", "Regression Curve", "Threshold"),col = c("darkgrey", "lightblue", "red", "green4"), pch = c(16, 16, NA, NA), lty = c(NA, NA, 1, 1), cex = 0.8)
shift.amount.plot = abs(data.frame(shift_zt_global))
train_zt_plot <- data.frame(Korrelation_plot = correlation.zt[1:2500, ], Shift_plot = shift.amount.plot[1:2500, ])
model_zt_all_plot <- lm(Shift_plot ~ Korrelation_plot, data = train_zt_plot)
test_zt_plot <- data.frame(Korrelation_plot = correlation.zt[2501:3074, ])
predictions_zt_plot <- as.data.frame(predict(model_zt_all_plot, newdata = test_zt_plot))
rownames(predictions_zt_plot) <- rownames(rnase.zt[2501:3074, ])
px <- train_zt_plot$Korrelation_plot
py <- train_zt_plot$Shift_plot
plot(px, py, main = "Regression Analysis", xlab = "Correlation - Ctrl and RNase", ylab = "Shift in Fraction", xlim = c(min(px), max(px)), ylim = c(min(py), max(py)), pch = 16, cex = 0.9, cex.main = 0.97, cex.lab = 0.9, col = "darkgrey")
abline(model_zt_all_plot, col = "red", lwd = 2)
abline(h = 2.5, col = "green4", lwd = 2)
test_px <- test_zt_plot$Korrelation_plot
predicted_py <- predict(model_zt_all_plot, newdata = test_zt_plot)
points(test_px, predicted_py, col = "lightblue", pch = 16, cex = 0.9)
legend("topright", legend = c("Trained Data", "Predicted Data", "Regression Curve", "Threshold"),col = c("darkgrey", "lightblue", "red", "green4"), pch = c(16, 16, NA, NA), lty = c(NA, NA, 1, 1), cex = 0.8)
predictions_zt_plot
predictions_mms_rdeep_shift <- matrix(0, nrow = nrow(predictions_mms_plot), ncol = ncol(predictions_mms_plot))
for(i in 1:nrow(predictions_mms_plot)) {
for(j in 1:ncol(predictions_mms_plot)){
if(predictions_mms_plot[i,j] > 2) {
predictions_mms_rdeep_shift[i,j] <- 1
} else if (predictions_mms_plot[i,j] < 2) {
predictions_mms_rdeep_shift[i,j] <- 0
}
}
}
rownames(predictions_mms_rdeep_shift) <- rownames(rnase.mms[2501:3074, ])
predictions_mms_rdeep_shift
predictions_zt_rdeep_shift <- matrix(0, nrow = nrow(predictions_zt_plot), ncol = ncol(predictions_zt_plot))
for(i in 1:nrow(predictions_zt_plot)) {
for(j in 1:ncol(predictions_zt_plot)){
if(predictions_zt_plot[i,j] > 2) {
predictions_zt_rdeep_shift[i,j] <- 1
} else if (predictions_zt_plot[i,j] < 2) {
predictions_zt_rdeep_shift[i,j] <- 0
}
}
}
rownames(predictions_zt_rdeep_shift) <- rownames(rnase.zt[2501:3074, ])
predictions_zt_rdeep_shift
predictions_mvm_rdeep_shift <- matrix(0, nrow = nrow(predictions_mvm_plot), ncol = ncol(predictions_mvm_plot))
for(i in 1:nrow(predictions_mvm_plot)) {
for(j in 1:ncol(predictions_mvm_plot)){
if(predictions_mvm_plot[i,j] > 2) {
predictions_mvm_rdeep_shift[i,j] <- 1
} else if (predictions_mvm_plot[i,j] < 2) {
predictions_mvm_rdeep_shift[i,j] <- 0
}
}
}
rownames(predictions_mvm_rdeep_shift) <- rownames(rnase.mvm[2501:3074, ])
predictions_mvm_rdeep_shift
names.rdp.mvm.regression <- rownames(predictions_mvm_rdeep_shift)[which(predictions_mvm_rdeep_shift == 1)]
names.rdp.zt.regression <- rownames(predictions_zt_rdeep_shift)[which(predictions_zt_rdeep_shift == 1)]
names.rdp.mms.regression <- rownames(predictions_mms_rdeep_shift)[which(predictions_mms_rdeep_shift == 1)]
names.rdp.regression <- list(names.rdp.mvm.regression, names.rdp.zt.regression, names.rdp.mms.regression)
number.observed.RBPs.kmeans <- c(length(names.rdp.mvm.regression), length(names.rdp.zt.regression), length(names.rdp.mms.regression))
names.nrdp.mvm.regression <- rownames(predictions_mvm_rdeep_shift)[which(predictions_mvm_rdeep_shift == 0)]
names.nrdp.zt.regression <- rownames(predictions_zt_rdeep_shift)[which(predictions_zt_rdeep_shift == 0)]
names.nrdp.mms.regression <- rownames(predictions_mms_rdeep_shift)[which(predictions_mms_rdeep_shift == 0)]
names.nrdp.regression <- list(names.nrdp.mvm.regression, names.nrdp.zt.regression, names.nrdp.mms.regression)
number.observed.nonRBPs.regression <- c(length(names.rdp.mvm.regression), length(names.rdp.zt.regression), length(names.rdp.mms.regression))
names.rdp.mvm.regression <- rownames(predictions_mvm_rdeep_shift)[which(predictions_mvm_rdeep_shift == 1)]
names.rdp.zt.regression <- rownames(predictions_zt_rdeep_shift)[which(predictions_zt_rdeep_shift == 1)]
names.rdp.mms.regression <- rownames(predictions_mms_rdeep_shift)[which(predictions_mms_rdeep_shift == 1)]
names.rdp.regression <- list(names.rdp.mvm.regression, names.rdp.zt.regression, names.rdp.mms.regression)
number.observed.RBPs.kmeans <- c(length(names.rdp.mvm.regression), length(names.rdp.zt.regression), length(names.rdp.mms.regression))
names.nrdp.mvm.regression <- rownames(predictions_mvm_rdeep_shift)[which(predictions_mvm_rdeep_shift == 0)]
names.nrdp.zt.regression <- rownames(predictions_zt_rdeep_shift)[which(predictions_zt_rdeep_shift == 0)]
names.nrdp.mms.regression <- rownames(predictions_mms_rdeep_shift)[which(predictions_mms_rdeep_shift == 0)]
names.nrdp.regression <- list(names.nrdp.mvm.regression, names.nrdp.zt.regression, names.nrdp.mms.regression)
number.observed.nonRBPs.regression <- c(length(names.rdp.mvm.regression), length(names.rdp.zt.regression), length(names.rdp.mms.regression))
names.rdp.regression
number.observed.RBPs.kmeans
names.rdp.mvm.regression <- rownames(predictions_mvm_rdeep_shift)[which(predictions_mvm_rdeep_shift == 1)]
names.rdp.zt.regression <- rownames(predictions_zt_rdeep_shift)[which(predictions_zt_rdeep_shift == 1)]
names.rdp.mms.regression <- rownames(predictions_mms_rdeep_shift)[which(predictions_mms_rdeep_shift == 1)]
names.rdp.regression <- list(names.rdp.mvm.regression, names.rdp.zt.regression, names.rdp.mms.regression)
number.observed.RBPs.kmeans <- c(length(names.rdp.mvm.regression), length(names.rdp.zt.regression), length(names.rdp.mms.regression))
names.nrdp.mvm.regression <- rownames(predictions_mvm_rdeep_shift)[which(predictions_mvm_rdeep_shift == 0)]
names.nrdp.zt.regression <- rownames(predictions_zt_rdeep_shift)[which(predictions_zt_rdeep_shift == 0)]
names.nrdp.mms.regression <- rownames(predictions_mms_rdeep_shift)[which(predictions_mms_rdeep_shift == 0)]
names.nrdp.regression <- list(names.nrdp.mvm.regression, names.nrdp.zt.regression, names.nrdp.mms.regression)
number.observed.nonRBPs.regression <- c(length(names.rdp.mvm.regression), length(names.rdp.zt.regression), length(names.rdp.mms.regression))
names.rdp.mvm.regression <- rownames(predictions_mvm_rdeep_shift)[which(predictions_mvm_rdeep_shift == 1)]
names.rdp.zt.regression <- rownames(predictions_zt_rdeep_shift)[which(predictions_zt_rdeep_shift == 1)]
names.rdp.mms.regression <- rownames(predictions_mms_rdeep_shift)[which(predictions_mms_rdeep_shift == 1)]
names.rdp.regression <- list(names.rdp.mvm.regression, names.rdp.zt.regression, names.rdp.mms.regression)
number.observed.RBPs.kmeans <- c(length(names.rdp.mvm.regression), length(names.rdp.zt.regression), length(names.rdp.mms.regression))
names.nrdp.mvm.regression <- rownames(predictions_mvm_rdeep_shift)[which(predictions_mvm_rdeep_shift == 0)]
names.nrdp.zt.regression <- rownames(predictions_zt_rdeep_shift)[which(predictions_zt_rdeep_shift == 0)]
names.nrdp.mms.regression <- rownames(predictions_mms_rdeep_shift)[which(predictions_mms_rdeep_shift == 0)]
names.nrdp.regression <- list(names.nrdp.mvm.regression, names.nrdp.zt.regression, names.nrdp.mms.regression)
number.observed.nonRBPs.regression <- c(length(names.rdp.mvm.regression), length(names.rdp.zt.regression), length(names.rdp.mms.regression))
#Number of correctly assigned (true positives) RBPs with parameters
true.positives.regression.shift <- data.frame(mvm = c(0), zt = c(0), mms = c(0))
for(z in 1:3){
counter <- 0
for (i in names.rdp.regression[[z]]) {
if (i %in% rownames(rdeep)) {
counter <- counter + 1
}
}
true.positives.regression.shift[z] <- counter
}
#Number of correctly assigned (true positives) RBPs with parameters
true.positives.regression.shift <- data.frame(mvm = c(0), zt = c(0), mms = c(0))
for(z in 1:3){
counter <- 0
for (i in names.rdp.regression[[z]]) {
if (i %in% rownames(rdeep)) {
counter <- counter + 1
}
}
true.positives.regression.shift[z] <- counter
}
true.positives.regression.shift
names.rdp.mvm.regression <- rownames(predictions_mvm_rdeep_shift)[which(predictions_mvm_rdeep_shift == 1)]
names.rdp.zt.regression <- rownames(predictions_zt_rdeep_shift)[which(predictions_zt_rdeep_shift == 1)]
names.rdp.mms.regression <- rownames(predictions_mms_rdeep_shift)[which(predictions_mms_rdeep_shift == 1)]
names.rdp.regression <- list(names.rdp.mvm.regression, names.rdp.zt.regression, names.rdp.mms.regression)
number.observed.RBPs.regression <- c(length(names.rdp.mvm.regression), length(names.rdp.zt.regression), length(names.rdp.mms.regression))
names.nrdp.mvm.regression <- rownames(predictions_mvm_rdeep_shift)[which(predictions_mvm_rdeep_shift == 0)]
names.nrdp.zt.regression <- rownames(predictions_zt_rdeep_shift)[which(predictions_zt_rdeep_shift == 0)]
names.nrdp.mms.regression <- rownames(predictions_mms_rdeep_shift)[which(predictions_mms_rdeep_shift == 0)]
names.nrdp.regression <- list(names.nrdp.mvm.regression, names.nrdp.zt.regression, names.nrdp.mms.regression)
number.observed.nonRBPs.regression <- c(length(names.rdp.mvm.regression), length(names.rdp.zt.regression), length(names.rdp.mms.regression))
#Number of correctly assigned (true positives) RBPs with parameters
true.positives.regression.shift <- data.frame(mvm = c(0), zt = c(0), mms = c(0))
for(z in 1:3){
counter <- 0
for (i in names.rdp.regression[[z]]) {
if (i %in% rownames(rdeep)) {
counter <- counter + 1
}
}
true.positives.regression.shift[z] <- counter
}
true.positives.regression.shift
number.observed.RBPs.regression
#Number of correctly assigned (true positives) RBPs with parameters
true.positives.regression.shift <- data.frame(mvm = c(0), zt = c(0), mms = c(0))
for(z in 1:3){
counter <- 0
for (i in names.rdp.regression[[z]]) {
if (i %in% rownames(rdeep)) {
counter <- counter + 1
}
}
true.positives.regression.shift[z] <- counter
}
true.positives.regression.shift
number.observed.RBPs.regression
number.observed.nonRBPs.regression
# Number of wrongly assigned (false positives) RBPs with parameters
false.positives.regression.shift <- data.frame(mvm = c(0), zt = c(0), mms = c(0))
for(z in 1:3){
counter <- 0
for (i in names.nrdp.regression[[z]]) {
if (i %in% non.rdeep$Entry_Name) {
counter <- counter + 1
}
}
false.positives.regression.shift[z] <- counter
}
# Number of wrongly assigned (false positives) RBPs with parameters
false.positives.regression.shift <- data.frame(mvm = c(0), zt = c(0), mms = c(0))
for(z in 1:3){
counter <- 0
for (i in names.nrdp.regression[[z]]) {
if (i %in% non.rdeep$Entry_Name) {
counter <- counter + 1
}
}
false.positives.regression.shift[z] <- counter
}
false.positives.regression.shift
# Number of wrongly assigned (false positives) RBPs with parameters
false.positives.regression.shift <- data.frame(mvm = c(0), zt = c(0), mms = c(0))
for(z in 1:3){
counter <- 0
for (i in names.rdp.regression[[z]]) {
if (i %in% non.rdeep$Entry_Name) {
counter <- counter + 1
}
}
false.positives.regression.shift[z] <- counter
}
# Number of wrongly assigned (false positives) RBPs with parameters
false.positives.regression.shift <- data.frame(mvm = c(0), zt = c(0), mms = c(0))
for(z in 1:3){
counter <- 0
for (i in names.rdp.regression[[z]]) {
if (i %in% non.rdeep$Entry_Name) {
counter <- counter + 1
}
}
false.positives.regression.shift[z] <- counter
}
false.positives.regression.shift
number.observed.nonRBPs.regression
names.rdp.mvm.regression <- rownames(predictions_mvm_rdeep_shift)[which(predictions_mvm_rdeep_shift == 1)]
names.rdp.zt.regression <- rownames(predictions_zt_rdeep_shift)[which(predictions_zt_rdeep_shift == 1)]
names.rdp.mms.regression <- rownames(predictions_mms_rdeep_shift)[which(predictions_mms_rdeep_shift == 1)]
names.rdp.regression <- list(names.rdp.mvm.regression, names.rdp.zt.regression, names.rdp.mms.regression)
number.observed.RBPs.regression <- c(length(names.rdp.mvm.regression), length(names.rdp.zt.regression), length(names.rdp.mms.regression))
names.nrdp.mvm.regression <- rownames(predictions_mvm_rdeep_shift)[which(predictions_mvm_rdeep_shift == 0)]
names.nrdp.zt.regression <- rownames(predictions_zt_rdeep_shift)[which(predictions_zt_rdeep_shift == 0)]
names.nrdp.mms.regression <- rownames(predictions_mms_rdeep_shift)[which(predictions_mms_rdeep_shift == 0)]
names.nrdp.regression <- list(names.nrdp.mvm.regression, names.nrdp.zt.regression, names.nrdp.mms.regression)
number.observed.nonRBPs.regression <- c(length(names.nrdp.mvm.regression), length(names.nrdp.zt.regression), length(names.nrdp.mms.regression))
number.observed.nonRBPs.regression
# Number of correctly assigned non-RBPs (true negatives) with parameters
true.negatives.regression.shift <- data.frame(mvm = c(0), zt = c(0), mms = c(0))
for(z in 1:3){
counter <- 0
for (i in names.nrdp.parameters[[z]]) {
if (i %in% non.rdeep$Entry_Name) {
counter <- counter + 1
}
}
true.negatives.regression.shift[z] <- counter
}
# Number of correctly assigned non-RBPs (true negatives) with parameters
true.negatives.regression.shift <- data.frame(mvm = c(0), zt = c(0), mms = c(0))
for(z in 1:3){
counter <- 0
for (i in names.nrdp.parameters[[z]]) {
if (i %in% non.rdeep$Entry_Name) {
counter <- counter + 1
}
}
true.negatives.regression.shift[z] <- counter
}
true.negatives.regression.shift
number.observed.nonRBPs.regression
# Number of correctly assigned non-RBPs (true negatives) with parameters
true.negatives.regression.shift <- data.frame(mvm = c(0), zt = c(0), mms = c(0))
for(z in 1:3){
counter <- 0
for (i in names.nrdp.regression [[z]]) {
if (i %in% non.rdeep$Entry_Name) {
counter <- counter + 1
}
}
true.negatives.regression.shift[z] <- counter
}
true.negatives.regression.shift
# Number of correctly assigned non-RBPs (true negatives) with parameters
true.negatives.regression.shift <- data.frame(mvm = c(0), zt = c(0), mms = c(0))
for(z in 1:3){
counter <- 0
for (i in names.nrdp.regression[[z]]) {
if (i %in% non.rdeep$Entry_Name) {
counter <- counter + 1
}
}
true.negatives.regression.shift[z] <- counter
}
true.negatives.regression.shift
# Number of wrongly assigned non-RBPs (true negatives) with parameters
false.negatives.regression.shift <- data.frame(mvm = c(0), zt = c(0), mms = c(0))
for(z in 1:3){
counter <- 0
for (i in names.nrdp.regression[[z]]) {
if (i %in% rownames(rdeep)) {
counter <- counter + 1
}
}
false.negatives.regression.shift[z] <- counter
}
# Number of wrongly assigned non-RBPs (true negatives) with parameters
false.negatives.regression.shift <- data.frame(mvm = c(0), zt = c(0), mms = c(0))
for(z in 1:3){
counter <- 0
for (i in names.nrdp.regression[[z]]) {
if (i %in% rownames(rdeep)) {
counter <- counter + 1
}
}
false.negatives.regression.shift[z] <- counter
}
false.negatives.regression.shift
fnr.regression.shift <- data.frame(mvm = c(0), zt = c(0), mms = c(0))
for(x in 1:3){
fnr.parameters[x] <- false.negatives.regression.shift[x]/(false.negatives.regression.shift[x] + true.positives.regression.shift[x])
}
fnr.regression.shift
fnr.regression.shift <- data.frame(mvm = c(0), zt = c(0), mms = c(0))
for(x in 1:3){
fnr.parameters[x] <- false.negatives.regression.shift[x]/(false.negatives.regression.shift[x] + true.positives.regression.shift[x])
}
fnr.regression.shift
fnr.regression.shift <- data.frame(mvm = c(0), zt = c(0), mms = c(0))
for(x in 1:3){
fnr.regression.shift[x] <- false.negatives.regression.shift[x]/(false.negatives.regression.shift[x] + true.positives.regression.shift[x])
}
fnr.regression.shift
fpr.regression.shift <- data.frame(mvm = c(0), zt = c(0), mms = c(0))
for(x in 1:3){
fpr.regression.shift[x] <- false.positives.regression.shift[x]/(false.positives.regression.shift[x]+true.negatives.regression.shift[x])
}
fpr.regression.shift <- data.frame(mvm = c(0), zt = c(0), mms = c(0))
for(x in 1:3){
fpr.regression.shift[x] <- false.positives.regression.shift[x]/(false.positives.regression.shift[x]+true.negatives.regression.shift[x])
}
fpr.regression.shift
precision.fpr.regression.shift <- data.frame(mvm = c(0), zt = c(0), mms = c(0))
for(x in 1:3){
precision.fpr.regression.shift[x] <- true.positives.regression.shift[x]/(true.positives.fpr.regression.shift[x] + false.positives.fpr.regression.shift[x])
}
precision.regression.shift <- data.frame(mvm = c(0), zt = c(0), mms = c(0))
for(x in 1:3){
precision.regression.shift[x] <- true.positives.regression.shift[x]/(true.positives.fpr.regression.shift[x] + false.positives.regression.shift[x])
}
precision.regression.shift <- data.frame(mvm = c(0), zt = c(0), mms = c(0))
for(x in 1:3){
precision.regression.shift[x] <- true.positives.regression.shift[x]/(true.positives.regression.shift[x] + false.positives.regression.shift[x])
}
precision.regression.shift <- data.frame(mvm = c(0), zt = c(0), mms = c(0))
for(x in 1:3){
precision.regression.shift[x] <- true.positives.regression.shift[x]/(true.positives.regression.shift[x] + false.positives.regression.shift[x])
}
precision.regression.shift
train_zt <- data.frame(Korrelation_zt = correlation.zt[1:2500, ], Shift = shift_zt[1:2500, ])
model_zt_all <- lm(Shift ~ Korrelation_zt, data = train_zt)
test_zt <- data.frame(Korrelation_zt = correlation.zt[2501:3074, ])
predictions_zt <- as.data.frame(predict(model_zt_all, newdata = test_zt))
rounded_predictions_zt_all <- round(predictions_zt)
rownames(rounded_predictions_zt_all) <- rownames(rnase.zt[2501:3074, ])
print(summary(model_zt_all))
#print(rounded_predictions_zt_all)
train_mvm <- data.frame(Korrelation = correlation.mvm[1:2500, ], Shift = shift_mvm[1:2500, ])
model_mvm_all <- lm(Shift ~ Korrelation, data = train_mvm)
test_mvm <- data.frame(Korrelation = correlation.mvm[2501:3074, ])
predictions_mvm <- as.data.frame(predict(model_mvm_all, newdata = test_mvm))
rounded_predictions_mvm_all <- round(predictions_mvm)
rownames(rounded_predictions_mvm_all) <- rownames(rnase.mvm[2501:3074, ])
print(summary(model_mvm_all))
#print(rounded_predictions_mvm_all)
rounded_predictions_mvm_all
predictions_mvm_rdeep_parameters <- matrix(0, nrow = nrow(rounded_predictions_mvm_all), ncol = ncol(rounded_predictions_mvm_all))
for(i in 1:nrow(rounded_predictions_mvm_all)) {
for(j in 1:ncol(rounded_predictions_mvm_all)){
if(rounded_predictions_mvm_all[i,j] > 2) {
predictions_mvm_rdeep_parameters[i,j] <- 1
} else if (rounded_predictions_mvm_all[i,j] < 2) {
predictions_mvm_rdeep_parameters[i,j] <- 0
}
}
}
rownames(predictions_mvm_rdeep_parameters) <- rownames(rnase.zt[2501:3074, ])
#predictions_mvm_rdeep_parameters
predictions_zt_rdeep_parameters <- matrix(0, nrow = nrow(rounded_predictions_zt_all), ncol = ncol(rounded_predictions_zt_all))
for(i in 1:nrow(rounded_predictions_zt_all)) {
for(j in 1:ncol(rounded_predictions_zt_all)){
if(rounded_predictions_zt_all[i,j] > 2) {
predictions_zt_rdeep_parameters[i,j] <- 1
} else if (rounded_predictions_zt_all[i,j] < 2) {
predictions_zt_rdeep_parameters[i,j] <- 0
}
}
}
rownames(predictions_zt_rdeep_parameters) <- rownames(rnase.zt[2501:3074, ])
#predictions_zt_rdeep_parameters
predictions_mms_rdeep_parameters <- matrix(0, nrow = nrow(rounded_predictions_mms_all), ncol = ncol(rounded_predictions_mms_all))
train_mms <- data.frame(Korrelation = correlation.mms[1:2500, ], Shift = shift_mms[1:2500, ])
model_mms_all <- lm(Shift ~ Korrelation, data = train_mms)
test_mms <- data.frame(Korrelation = correlation.mms[2501:3074, ])
predictions_mms <- as.data.frame(predict(model_mms_all, newdata = test_mms))
rounded_predictions_mms_all <- round(predictions_mms)
rownames(rounded_predictions_mms_all) <- rownames(rnase.mms[2501:3074, ])
print(summary(model_mms_all))
#print(rounded_predictions_mms_all)
predictions_mvm_rdeep_parameters <- matrix(0, nrow = nrow(rounded_predictions_mvm_all), ncol = ncol(rounded_predictions_mvm_all))
for(i in 1:nrow(rounded_predictions_mvm_all)) {
for(j in 1:ncol(rounded_predictions_mvm_all)){
if(rounded_predictions_mvm_all[i,j] > 2) {
predictions_mvm_rdeep_parameters[i,j] <- 1
} else if (rounded_predictions_mvm_all[i,j] < 2) {
predictions_mvm_rdeep_parameters[i,j] <- 0
}
}
}
rownames(predictions_mvm_rdeep_parameters) <- rownames(rnase.zt[2501:3074, ])
#predictions_mvm_rdeep_parameters
predictions_zt_rdeep_parameters <- matrix(0, nrow = nrow(rounded_predictions_zt_all), ncol = ncol(rounded_predictions_zt_all))
for(i in 1:nrow(rounded_predictions_zt_all)) {
for(j in 1:ncol(rounded_predictions_zt_all)){
if(rounded_predictions_zt_all[i,j] > 2) {
predictions_zt_rdeep_parameters[i,j] <- 1
} else if (rounded_predictions_zt_all[i,j] < 2) {
predictions_zt_rdeep_parameters[i,j] <- 0
}
}
}
rownames(predictions_zt_rdeep_parameters) <- rownames(rnase.zt[2501:3074, ])
#predictions_zt_rdeep_parameters
predictions_mms_rdeep_parameters <- matrix(0, nrow = nrow(rounded_predictions_mms_all), ncol = ncol(rounded_predictions_mms_all))
for(i in 1:nrow(rounded_predictions_mms_all)) {
for(j in 1:ncol(rounded_predictions_mms_all)){
if(rounded_predictions_mms_all[i,j] > 2) {
predictions_mms_rdeep_parameters[i,j] <- 1
} else if (rounded_predictions_mms_all[i,j] < 2) {
predictions_mms_rdeep_parameters[i,j] <- 0
}
}
}
rownames(predictions_mms_rdeep_parameters) <- rownames(rnase.mms[2501:3074, ])
#predictions_mms_rdeep_parameters
names.rdp.mvm.regression.para <- rownames(rounded_predictions_mvm_all)[which(rounded_predictions_mvm_all == 1)]
names.rdp.zt.regression.para <- rownames(rounded_predictions_zt_all)[which(rounded_predictions_zt_all == 1)]
names.rdp.mms.regression.para <- rownames(rounded_predictions_mms_all)[which(rounded_predictions_mms_all == 1)]
names.rdp.regression.para <- list(names.rdp.mvm.regression.para, names.rdp.zt.regression.para, names.rdp.mms.regression.para)
number.observed.RBPs.regression.para <- c(length(names.rdp.mvm.regression.para), length(names.rdp.zt.regression.para), length(names.rdp.mms.regression.para))
names.nrdp.mvm.regression.para <- rownames(rounded_predictions_mvm_all)[which(rounded_predictions_mvm_all == 0)]
names.nrdp.zt.regression.para <- rownames(rounded_predictions_zt_all)[which(rounded_predictions_zt_all == 0)]
names.nrdp.mms.regression.para <- rownames(rounded_predictions_mms_all)[which(rounded_predictions_mms_all == 0)]
names.rdp.regression.para <- list(names.nrdp.mvm.regression.para, names.nrdp.zt.regression.para, names.nrdp.mms.regression.para)
number.observed.RBPs.regression.para <- c(length(names.nrdp.mvm.regression.para), length(names.nrdp.zt.regression.para), length(names.nrdp.mms.regression.para))
names.rdp.mvm.regression.para <- rownames(rounded_predictions_mvm_all)[which(rounded_predictions_mvm_all == 1)]
names.rdp.zt.regression.para <- rownames(rounded_predictions_zt_all)[which(rounded_predictions_zt_all == 1)]
names.rdp.mms.regression.para <- rownames(rounded_predictions_mms_all)[which(rounded_predictions_mms_all == 1)]
names.rdp.regression.para <- list(names.rdp.mvm.regression.para, names.rdp.zt.regression.para, names.rdp.mms.regression.para)
number.observed.RBPs.regression.para <- c(length(names.rdp.mvm.regression.para), length(names.rdp.zt.regression.para), length(names.rdp.mms.regression.para))
names.nrdp.mvm.regression.para <- rownames(rounded_predictions_mvm_all)[which(rounded_predictions_mvm_all == 0)]
names.nrdp.zt.regression.para <- rownames(rounded_predictions_zt_all)[which(rounded_predictions_zt_all == 0)]
names.nrdp.mms.regression.para <- rownames(rounded_predictions_mms_all)[which(rounded_predictions_mms_all == 0)]
names.rdp.regression.para <- list(names.nrdp.mvm.regression.para, names.nrdp.zt.regression.para, names.nrdp.mms.regression.para)
number.observed.RBPs.regression.para <- c(length(names.nrdp.mvm.regression.para), length(names.nrdp.zt.regression.para), length(names.nrdp.mms.regression.para))
names.rdp.regression.para
names.rdp.mvm.regression.para <- rownames(rounded_predictions_mvm_all)[which(rounded_predictions_mvm_all == 1)]
names.rdp.zt.regression.para <- rownames(rounded_predictions_zt_all)[which(rounded_predictions_zt_all == 1)]
names.rdp.mms.regression.para <- rownames(rounded_predictions_mms_all)[which(rounded_predictions_mms_all == 1)]
names.rdp.regression.para <- list(names.rdp.mvm.regression.para, names.rdp.zt.regression.para, names.rdp.mms.regression.para)
number.observed.RBPs.regression.para <- c(length(names.rdp.mvm.regression.para), length(names.rdp.zt.regression.para), length(names.rdp.mms.regression.para))
names.nrdp.mvm.regression.para <- rownames(rounded_predictions_mvm_all)[which(rounded_predictions_mvm_all == 0)]
names.nrdp.zt.regression.para <- rownames(rounded_predictions_zt_all)[which(rounded_predictions_zt_all == 0)]
names.nrdp.mms.regression.para <- rownames(rounded_predictions_mms_all)[which(rounded_predictions_mms_all == 0)]
names.rdp.regression.para <- list(names.nrdp.mvm.regression.para, names.nrdp.zt.regression.para, names.nrdp.mms.regression.para)
number.observed.RBPs.regression.para <- c(length(names.nrdp.mvm.regression.para), length(names.nrdp.zt.regression.para), length(names.nrdp.mms.regression.para))
number.observed.RBPs.regression.para
names.rdp.mvm.regression.para <- rownames(rounded_predictions_mvm_all)[which(rounded_predictions_mvm_all == 1)]
names.rdp.zt.regression.para <- rownames(rounded_predictions_zt_all)[which(rounded_predictions_zt_all == 1)]
names.rdp.mms.regression.para <- rownames(rounded_predictions_mms_all)[which(rounded_predictions_mms_all == 1)]
names.rdp.regression.para <- list(names.rdp.mvm.regression.para, names.rdp.zt.regression.para, names.rdp.mms.regression.para)
number.observed.RBPs.regression.para <- c(length(names.rdp.mvm.regression.para), length(names.rdp.zt.regression.para), length(names.rdp.mms.regression.para))
names.nrdp.mvm.regression.para <- rownames(rounded_predictions_mvm_all)[which(rounded_predictions_mvm_all == 0)]
names.nrdp.zt.regression.para <- rownames(rounded_predictions_zt_all)[which(rounded_predictions_zt_all == 0)]
names.nrdp.mms.regression.para <- rownames(rounded_predictions_mms_all)[which(rounded_predictions_mms_all == 0)]
names.nrdp.regression.para <- list(names.nrdp.mvm.regression.para, names.nrdp.zt.regression.para, names.nrdp.mms.regression.para)
number.observed.nonRBPs.regression.para <- c(length(names.nrdp.mvm.regression.para), length(names.nrdp.zt.regression.para), length(names.nrdp.mms.regression.para))
number.observed.RBPs.regression.para
