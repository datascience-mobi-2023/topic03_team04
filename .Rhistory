#length(non.reproducible)
View(non.reproducible.rnase)
View(non.reproducible.ctrl)
View(non.reproducible)
non.reproducible.ctrl <- which(rowSums(ctrl.cor.naremoved<0.9)>2)
#length(non.reproducible.ctrl)
non.reproducible.rnase <- which(rowSums(rnase.cor.naremoved<0.9)>2)
#length(non.reproducible.rnase)
non.reproducible <- unique(which(rowSums(ctrl.cor.naremoved<0.9)>2), which(rowSums(rnase.cor.naremoved<0.9)>2))
#length(non.reproducible)
#View(rnase.cor.naremoved)
#length(non.reproducible)
View(non.reproducible.rnase)
View(non.reproducible.ctrl)
View(non.reproducible)
non.reproducible.ctrl <- which(rowSums(ctrl.cor.naremoved<0.9)>2)
#length(non.reproducible.ctrl)
non.reproducible.rnase <- which(rowSums(rnase.cor.naremoved<0.9)>2)
#length(non.reproducible.rnase)
non.reproducible <- unique(which(rowSums(ctrl.cor.naremoved<0.9)>2), which(rowSums(rnase.cor.naremoved<0.9)>2))
#length(non.reproducible)
#View(rnase.cor.naremoved)
#length(non.reproducible)
length(non.reproducible.rnase)
length(non.reproducible.ctrl)
length(non.reproducible)
?unique
non.reproducible.ctrl <- which(rowSums(ctrl.cor.naremoved<0.9)>2)
#length(non.reproducible.ctrl)
non.reproducible.rnase <- which(rowSums(rnase.cor.naremoved<0.9)>2)
#length(non.reproducible.rnase)
non.reproducible <- unique(which(rowSums(ctrl.cor.naremoved<0.9)>2) + which(rowSums(rnase.cor.naremoved<0.9)>2))
#length(non.reproducible)
#View(rnase.cor.naremoved)
#length(non.reproducible)
length(non.reproducible.rnase)
length(non.reproducible.ctrl)
length(non.reproducible)
non.reproducible.ctrl <- which(rowSums(ctrl.cor.naremoved<0.9)>2)
#length(non.reproducible.ctrl)
non.reproducible.rnase <- which(rowSums(rnase.cor.naremoved<0.9)>2)
#length(non.reproducible.rnase)
non.reproducible <- unique(c(which(rowSums(ctrl.cor.naremoved<0.9)>2), which(rowSums(rnase.cor.naremoved<0.9)>2)))
#length(non.reproducible)
#View(rnase.cor.naremoved)
#length(non.reproducible)
length(non.reproducible.rnase)
length(non.reproducible.ctrl)
length(non.reproducible)
View(non.reproducible)
non.reproducible.ctrl <- which(rowSums(ctrl.cor.naremoved<0.9)>2)
#length(non.reproducible.ctrl)
non.reproducible.rnase <- which(rowSums(rnase.cor.naremoved<0.9)>2)
#length(non.reproducible.rnase)
non.reproducible <- unique(c(which(rowSums(ctrl.cor.naremoved<0.9)>2), which(rowSums(rnase.cor.naremoved<0.9)>2)))
#length(non.reproducible)
#View(rnase.cor.naremoved)
#length(non.reproducible)
length(non.reproducible.rnase)
length(non.reproducible.ctrl)
length(non.reproducible)
View(non.reproducible)
non.reproducible
ctrl.rep <- MS.Table.naremoved[-non.reproducible,1:75]
rnase.rep <- MS.Table.naremoved[-non.reproducible,76:150]
ctrl.cor.removed <- ctrl.cor.naremoved [-non.reproducible,]
rnase.cor.removed <- rnase.cor.naremoved [-non.reproducible,]
View(rnase.rep)
for (x in 1:dim(ctrl.rep)[1]){
if (ctrl.cor.removed[x, 1] < 0.9) {
if (ctrl.cor.removed[x, 3] < 0.9){
ctrl.rep[x, 1:25] <- NA
}
if (rnase.cor.removed[x, 2] < 0.9){
ctrl.rep[x, 26:50] <- NA
}}
if (rnase.cor.removed[x, 3] < 0.9) {
if (rnase.cor.removed[x, 2] < 0.9){
ctrl.rep[x, 51:75] <- NA
}
}
}
for (x in 1:dim(rnase.rep)[1]){
if (rnase.cor.removed[x, 1] < 0.9) {
if (rnase.cor.removed[x, 3] < 0.9){
rnase.rep[x, 1:25] <- NA
}
if (rnase.cor.removed[x, 2] < 0.9){
rnase.rep[x, 26:50] <- NA
}}
if (rnase.cor.removed[x, 3] < 0.9) {
if (rnase.cor.removed[x, 2] < 0.9){
rnase.rep[x, 51:75] <- NA
}
}
}
#Nr <- c(1:dim(rnase.rep)[1])
#rnase.with.proteinnumbers <- cbind(Nr, rnase.rep[,1:25], Nr, rnase.rep[,26:50], Nr, rnase.rep[,51:75])
View(rnase.with.proteinnumbers)
#dim(rnase.rep)
View(rnase.rep)
ctrl.rep <- MS.Table.naremoved[-non.reproducible,1:75]
rnase.rep <- MS.Table.naremoved[-non.reproducible,76:150]
ctrl.cor.removed <- ctrl.cor.naremoved [-non.reproducible,]
rnase.cor.removed <- rnase.cor.naremoved [-non.reproducible,]
View(rnase.rep)
for (x in 1:dim(ctrl.rep)[1]){
if (ctrl.cor.removed[x, 1] < 0.9) {
if (ctrl.cor.removed[x, 3] < 0.9){
ctrl.rep[x, 1:25] <- NA
}
if (rnase.cor.removed[x, 2] < 0.9){
ctrl.rep[x, 26:50] <- NA
}}
if (rnase.cor.removed[x, 3] < 0.9) {
if (rnase.cor.removed[x, 2] < 0.9){
ctrl.rep[x, 51:75] <- NA
}
}
}
for (x in 1:dim(rnase.rep)[1]){
if (rnase.cor.removed[x, 1] < 0.9) {
if (rnase.cor.removed[x, 3] < 0.9){
rnase.rep[x, 1:25] <- NA
}
if (rnase.cor.removed[x, 2] < 0.9){
rnase.rep[x, 26:50] <- NA
}}
if (rnase.cor.removed[x, 3] < 0.9) {
if (rnase.cor.removed[x, 2] < 0.9){
rnase.rep[x, 51:75] <- NA
}
}
}
#Nr <- c(1:dim(rnase.rep)[1])
#rnase.with.proteinnumbers <- cbind(Nr, rnase.rep[,1:25], Nr, rnase.rep[,26:50], Nr, rnase.rep[,51:75])
View(rnase.with.proteinnumbers)
#dim(rnase.rep)
for (x in 1:dim(ctrl.rep)[1]){
if (ctrl.cor.removed[x, 1] < 0.9) {
if (ctrl.cor.removed[x, 3] < 0.9){
ctrl.rep[x, 1:25] <- NA
}
if (rnase.cor.removed[x, 2] < 0.9){
ctrl.rep[x, 26:50] <- NA
}}
if (rnase.cor.removed[x, 3] < 0.9) {
if (rnase.cor.removed[x, 2] < 0.9){
ctrl.rep[x, 51:75] <- NA
}
}
}
for (x in 1:dim(rnase.rep)[1]){
if (rnase.cor.removed[x, 1] < 0.9) {
if (rnase.cor.removed[x, 3] < 0.9){
rnase.rep[x, 1:25] <- NA
}
if (rnase.cor.removed[x, 2] < 0.9){
rnase.rep[x, 26:50] <- NA
}}
if (rnase.cor.removed[x, 3] < 0.9) {
if (rnase.cor.removed[x, 2] < 0.9){
rnase.rep[x, 51:75] <- NA
}
}
}
Nr <- c(1:dim(rnase.rep)[1])
rnase.with.proteinnumbers <- cbind(Nr, rnase.rep[,1:25], Nr, rnase.rep[,26:50], Nr, rnase.rep[,51:75])
View(rnase.with.proteinnumbers)
#dim(rnase.rep)
dim(rnase.rep)
View(non.reproducible)
non.reproducible
ctrl.rep <- MS.Table.naremoved[-non.reproducible,1:75]
rnase.rep <- MS.Table.naremoved[-non.reproducible,76:150]
ctrl.cor.removed <- ctrl.cor.naremoved [-non.reproducible,]
rnase.cor.removed <- rnase.cor.naremoved [-non.reproducible,]
#View(rnase.rep)
#View(rnase.rep)
dim(rnase.rep)
dim(ctrl.rep)
ctrl.rep <- MS.Table.naremoved[-non.reproducible,1:75]
rnase.rep <- MS.Table.naremoved[-non.reproducible,76:150]
ctrl.cor.removed <- ctrl.cor.naremoved [-non.reproducible,]
rnase.cor.removed <- rnase.cor.naremoved [-non.reproducible,]
#View(rnase.rep)
dim(rnase.rep)
dim(ctrl.rep)
dim(ctrl.removed)
dim(ctrl.cor.removed)
for (x in 1:dim(ctrl.rep)[1]){
if (ctrl.cor.removed[x, 1] < 0.9) {
if (ctrl.cor.removed[x, 3] < 0.9){
ctrl.rep[x, 1:25] <- NA
}
if (rnase.cor.removed[x, 2] < 0.9){
ctrl.rep[x, 26:50] <- NA
}}
if (rnase.cor.removed[x, 3] < 0.9) {
if (rnase.cor.removed[x, 2] < 0.9){
ctrl.rep[x, 51:75] <- NA
}
}
}
for (x in 1:dim(rnase.rep)[1]){
if (rnase.cor.removed[x, 1] < 0.9) {
if (rnase.cor.removed[x, 3] < 0.9){
rnase.rep[x, 1:25] <- NA
}
if (rnase.cor.removed[x, 2] < 0.9){
rnase.rep[x, 26:50] <- NA
}}
if (rnase.cor.removed[x, 3] < 0.9) {
if (rnase.cor.removed[x, 2] < 0.9){
rnase.rep[x, 51:75] <- NA
}
}
}
Nr <- c(1:dim(rnase.rep)[1])
rnase.with.proteinnumbers <- cbind(Nr, rnase.rep[,1:25], Nr, rnase.rep[,26:50], Nr, rnase.rep[,51:75])
View(rnase.with.proteinnumbers)
dim(rnase.rep)
View(rnase.cor.removed)
dim(rnase.rep)
knitr::opts_chunk$set(echo = TRUE)
ctrl.clean <- ctrl.rep
rnase.clean <- rnase.rep
ctrl.rep1 <- ctrl.clean[,1:25]
ctrl.rep2 <- ctrl.clean[,26:50]
ctrl.rep3 <- ctrl.clean[,51:75]
rnase.rep1 <- rnase.clean[,1:25]
rnase.rep2 <- rnase.clean[,26:50]
rnase.rep3 <- rnase.clean[,51:75]
# Control Replicate 1 MVM
ctrl.rep1.mvm.norm <- t(apply(ctrl.rep1, 1, function(x) {
normalized <- x - mean(x)
normalized[normalized < 0] <- 0
scaled <- normalized * (100 / sum(normalized))
return(scaled)
}))
# View(ctrl.rep1.mvm.norm)
# Control Replicate 2 MVM
ctrl.rep2.mvm.norm <- t(apply(ctrl.rep2, 1, function(x) {
normalized <- x - mean(x)
normalized[normalized < 0] <- 0
scaled <- normalized * (100 / sum(normalized))
return(scaled)
}))
# Control Replicate 3 MVM
ctrl.rep3.mvm.norm <- t(apply(ctrl.rep3, 1, function(x) {
normalized <- x - mean(x)
normalized[normalized < 0] <- 0
scaled <- normalized * (100 / sum(normalized))
return(scaled)
}))
# RNase Replicate 1 MVM
rnase.rep1.mvm.norm <- t(apply(rnase.rep1, 1, function(x) {
normalized <- x - mean(x)
normalized[normalized < 0] <- 0
scaled <- normalized * (100 / sum(normalized))
return(scaled)
}))
# RNase Replicate 2 MVM
rnase.rep2.mvm.norm <- t(apply(rnase.rep2, 1, function(x) {
normalized <- x - mean(x)
normalized[normalized < 0] <- 0
scaled <- normalized * (100 / sum(normalized))
return(scaled)
}))
# RNase Replicate 3 MVM
rnase.rep3.mvm.norm <- t(apply(rnase.rep3, 1, function(x) {
normalized <- x - mean(x)
normalized[normalized < 0] <- 0
scaled <- normalized * (100 / sum(normalized))
return(scaled)
}))
r1c <- ctrl.rep1.mvm.norm
r2c <- ctrl.rep2.mvm.norm
r3c <- ctrl.rep3.mvm.norm
r1c[is.na(r1c)] <- 0
r2c[is.na(r2c)] <- 0
r3c[is.na(r3c)] <- 0
l <- (r1c + r2c + r3c)
View(l)
dim(l)
ctrl.mvm.reduced = apply(r1c, 1, function(x){
((r1c + r2c + r3c))/(sum(is.na(r1c[x,]) + is.na(r2c[x,]) + is.na(r3c[x,]))/25)
})
View(ctrl.mvm.reduced)
(sum(is.na(r1c[x,]) + is.na(r2c[x,]) + is.na(r3c[x,]))/25)
(sum(is.na(r1c[1,]) + is.na(r2c[1,]) + is.na(r3c[1,]))/25)
is.na(r1c[1,]
is.na(r1c[1,])
is.na(r1c[1,])
as.numeric(is.na(r1c[1,]))
(sum(as.numeric(is.na(r1c[1,])) + as.numeric(is.na(r2c[1,]) + as.numeric(is.na(r3c[1,]))/25)
sum(as.numeric(is.na(r1c[1,])) + as.numeric(is.na(r2c[1,]) + as.numeric(is.na(r3c[1,]))/25
(as.numeric(is.na(r1c[1,])) + as.numeric(is.na(r2c[1,]) + as.numeric(is.na(r3c[1,]))/25
((as.numeric(is.na(r1c[1,])) + as.numeric(is.na(r2c[1,]) + as.numeric(is.na(r3c[1,]))/25
y <- ((as.numeric(is.na(r1c[1,])) + as.numeric(is.na(r2c[1,]) + as.numeric(is.na(r3c[1,]))/25
y <- ((as.numeric(is.na(r1c[1,])) + as.numeric(is.na(r2c[1,]) + as.numeric(is.na(r3c[1,]))/25)
y <- ((as.numeric(is.na(r1c[1,])) + as.numeric(is.na(r2c[1,]) + as.numeric(is.na(r3c[1,]))/25)
y <- (sum(as.numeric(is.na(r1c[1,])) + as.numeric(is.na(r2c[1,]) + as.numeric(is.na(r3c[1,]))/25)
y <- (sum(as.numeric(is.na(r1c[1,])) + as.numeric(is.na(r2c[1,])) + as.numeric(is.na(r3c[1,])))/25)
as.numeric(is.na(r1c[1,]))
(as.numeric(is.na(r1c[1,])) + as.numeric(is.na(r2c[1,])) + as.numeric(is.na(r3c[1,]))
ctrl.mvm.reduced <- apply(r1c, 1, function(x) {
apply(r1c, 1, function(x) {
apply(r1c, 1, function(x) {
ctrl.mvm.reduced2 <- apply(r1c, 1, function(x){
(ri1 +r2c +r3c)/(sum(as.numeric(is.na(r1c[x,])) + as.numeric(is.na(r2c[x,])) + as.numeric(is.na(r3c[x,]))/25))
})
ctrl.mvm.reduced <- apply(r1c, 1, function(x) {
(r1c + r2c + r3c)/(sum(as.numeric(is.na(r1c[x,])) + as.numeric(is.na(r2c[x,])) + as.numeric(is.na(r3c[x,]))/25))
})
ctrl.mvm.reduced <- apply(r1c, 1, function(x) {
(r1c + r2c + r3c)/(sum(as.numeric(is.na(r1c[x,])) + as.numeric(is.na(r2c[x,])) + as.numeric(is.na(r3c[x,]))/25))
})
View(ctrl.mvm.reduced)
View(ctrl.mvm.reduced)
ctrl.mvm.reduced
(sum(as.numeric(is.na(r1c[1,])) + as.numeric(is.na(r2c[1,])) + as.numeric(is.na(r3c[1,]))/25))
y <- (sum(as.numeric(is.na(r1c[1,])) + as.numeric(is.na(r2c[1,])) + as.numeric(is.na(r3c[1,]))/25))
y
y <- (as.numeric(is.na(r1c[1,])) + as.numeric(is.na(r2c[1,])) + as.numeric(is.na(r3c[1,]))/25)
y
l <- (r1c + r2c + r3c)
l
r1c <- ctrl.rep1.mvm.norm
r2c <- ctrl.rep2.mvm.norm
r3c <- ctrl.rep3.mvm.norm
r1c[is.na(r1c)] <- 0
r2c[is.na(r2c)] <- 0
r3c[is.na(r3c)] <- 0
l <- (r1c + r2c + r3c)
l
ctrl.mvm.reduced <- apply(r1c, 1, function(x) {
(r1c + r2c + r3c)/(sum(as.numeric(is.na(r1c[x,])) + as.numeric(is.na(r2c[x,])) + as.numeric(is.na(r3c[x,]))/25))
})
y <- (as.numeric(is.na(r1c[1,])) + as.numeric(is.na(r2c[1,])) + as.numeric(is.na(r3c[1,]))/25)
y
r1c <- ctrl.rep1.mvm.norm
r2c <- ctrl.rep2.mvm.norm
r3c <- ctrl.rep3.mvm.norm
r1c[is.na(r1c)] <- 0
r2c[is.na(r2c)] <- 0
r3c[is.na(r3c)] <- 0
l <- (r1c + r2c + r3c)
l
l
ctrl.mvm.reduced <- apply(r1c, 1, function(x) {
(r1c + r2c + r3c)/(sum(as.numeric(is.na(r1c[x,])) + as.numeric(is.na(r2c[x,])) + as.numeric(is.na(r3c[x,]))/25))
})
ctrl.mvm.reduced <- apply(r1c, 1, function(x) {
(r1c + r2c + r3c)/(sum(as.numeric(is.na(r1c[x,])) + as.numeric(is.na(r2c[x,])) + as.numeric(is.na(r3c[x,]))/25))
})
ctrl.mvm.reduced <- apply(r1c, 1, function(x) {
(r1c + r2c + r3c)/(sum(as.numeric(is.na(r1c[x,])) + as.numeric(is.na(r2c[x,])) + as.numeric(is.na(r3c[x,]))/25))
})
y <- (as.numeric(is.na(r1c[1,])) + as.numeric(is.na(r2c[1,])) + as.numeric(is.na(r3c[1,]))/25)
View(y)
y <- (sum(as.numeric(is.na(r1c[1,])) + as.numeric(is.na(r2c[1,])) + as.numeric(is.na(r3c[1,]))/25))
View(y)
as.numeric(is.na(r1c[1,])
y <- as.numeric(is.na(r1c[1,])
y <- as.numeric(is.na(r1c[1,])
View(y)
c = 1
z <- (sum(as.numeric(is.na(r1c[c,])) + as.numeric(is.na(r2c[c,])) + as.numeric(is.na(r3c[c,]))/25))
View(z)
as.numeric(is.na(r1c[c,])
(is.na(r1c[c,])
is.na(r1c[c,]
is.na(r1c[c,])
as.numeric(is.na(r1c[c,]))
as.numeric(is.na(r1c[c,]))/25
sum(as.numeric(is.na(r1c[c,])))
sum(as.numeric(is.na(r1c[c,])) + as.numeric(is.na(r2c[c,])))
sum(as.numeric(is.na(r1c[c,])) + as.numeric(is.na(r2c[c,])) + as.numeric(is.na(r3c[c,])))
r1c <- rnase.rep1.mvm.norm
r2c <- rnase.rep2.mvm.norm
r3c <- rnase.rep3.mvm.norm
r1c[is.na(r1c)] <- 0
r2c[is.na(r2c)] <- 0
r3c[is.na(r3c)] <- 0
l <- (r1c + r2c + r3c)
rnase.mvm.reduced <- apply(r1c, 1, function(x) {
(r1c + r2c + r3c)/(sum(as.numeric(is.na(r1c[x,])) + as.numeric(is.na(r2c[x,])) + as.numeric(is.na(r3c[x,]))/25))
})
c = 1
z <- (sum(as.numeric(is.na(r1c[c,])) + as.numeric(is.na(r2c[c,])) + as.numeric(is.na(r3c[c,]))/25))
sum(as.numeric(is.na(r1c[c,])) + as.numeric(is.na(r2c[c,])) + as.numeric(is.na(r3c[c,])))
View(z)
sum(as.numeric(is.na(r1c[c,])) + as.numeric(is.na(r2c[c,])) + as.numeric(is.na(r3c[c,])))
as.numeric(is.na(r3c[c,]))
View(rnase.clean)
ctrl.rep1 <- ctrl.clean[,1:25]
ctrl.rep2 <- ctrl.clean[,26:50]
ctrl.rep3 <- ctrl.clean[,51:75]
rnase.rep1 <- rnase.clean[,1:25]
rnase.rep2 <- rnase.clean[,26:50]
rnase.rep3 <- rnase.clean[,51:75]
# Control Replicate 1 MVM
ctrl.rep1.mvm.norm <- t(apply(ctrl.rep1, 1, function(x) {
normalized <- x - mean(x)
normalized[normalized < 0] <- 0
scaled <- normalized * (100 / sum(normalized))
return(scaled)
}))
# View(ctrl.rep1.mvm.norm)
# Control Replicate 2 MVM
ctrl.rep2.mvm.norm <- t(apply(ctrl.rep2, 1, function(x) {
normalized <- x - mean(x)
normalized[normalized < 0] <- 0
scaled <- normalized * (100 / sum(normalized))
return(scaled)
}))
# Control Replicate 3 MVM
ctrl.rep3.mvm.norm <- t(apply(ctrl.rep3, 1, function(x) {
normalized <- x - mean(x)
normalized[normalized < 0] <- 0
scaled <- normalized * (100 / sum(normalized))
return(scaled)
}))
# RNase Replicate 1 MVM
rnase.rep1.mvm.norm <- t(apply(rnase.rep1, 1, function(x) {
normalized <- x - mean(x)
normalized[normalized < 0] <- 0
scaled <- normalized * (100 / sum(normalized))
return(scaled)
}))
# RNase Replicate 2 MVM
rnase.rep2.mvm.norm <- t(apply(rnase.rep2, 1, function(x) {
normalized <- x - mean(x)
normalized[normalized < 0] <- 0
scaled <- normalized * (100 / sum(normalized))
return(scaled)
}))
# RNase Replicate 3 MVM
rnase.rep3.mvm.norm <- t(apply(rnase.rep3, 1, function(x) {
normalized <- x - mean(x)
normalized[normalized < 0] <- 0
scaled <- normalized * (100 / sum(normalized))
return(scaled)
}))
View(r3c)
View(rnase.rep3)
r1c <- rnase.rep1
r2c <- rnase.rep2
r3c <- rnase.rep3
View(rnase.rep3.mvm.norm)
r1c <- rnase.rep1.mvm.norm
r2c <- rnase.rep2.mvm.norm
r3c <- rnase.rep3.mvm.norm
r1c0 <- r1c[is.na(r1c)] <- 0
r2c0 <- r2c[is.na(r2c)] <- 0
r3c0 <- r3c[is.na(r3c)] <- 0
View(r3c)
r1c <- rnase.rep1.mvm.norm
r2c <- rnase.rep2.mvm.norm
r3c <- rnase.rep3.mvm.norm
r1c0 <- rnase.rep1.mvm.norm
r2c0 <- rnase.rep2.mvm.norm
r3c0 <- rnase.rep3.mvm.norm
r1c[is.na(r1c)] <- 0
r2c[is.na(r2c)] <- 0
r3c[is.na(r3c)] <- 0
View(r3c)
View(r3c0)
r1c <- rnase.rep1.mvm.norm
r2c <- rnase.rep2.mvm.norm
r3c <- rnase.rep3.mvm.norm
r1c0 <- rnase.rep1.mvm.norm
r2c0 <- rnase.rep2.mvm.norm
r3c0 <- rnase.rep3.mvm.norm
r1c0[is.na(r1c)] <- 0
r2c0[is.na(r2c)] <- 0
r3c0[is.na(r3c)] <- 0
View(r3c)
View(r3c0)
sum(as.numeric(is.na(r1c[c,])) + as.numeric(is.na(r2c[c,])) + as.numeric(is.na(r3c[c,])))
sum(as.numeric(is.na(r1c[c,])) + as.numeric(is.na(r2c[c,])) + as.numeric(is.na(r3c[c,])))/25
rnase.mvm.reduced <- apply(r1c, 1, function(x) {
(r1c0 + r2c0 + r3c0)/(sum(as.numeric(is.na(r1c[x,])) + as.numeric(is.na(r2c[x,])) + as.numeric(is.na(r3c[x,]))/25))
})
View(rnase.mvm.reduced)
r1c <- rnase.rep1.mvm.norm
r2c <- rnase.rep2.mvm.norm
r3c <- rnase.rep3.mvm.norm
r1c0 <- rnase.rep1.mvm.norm
r2c0 <- rnase.rep2.mvm.norm
r3c0 <- rnase.rep3.mvm.norm
r1c0[is.na(r1c)] <- 0
r2c0[is.na(r2c)] <- 0
r3c0[is.na(r3c)] <- 0
rnase.mvm.reduced <- apply(r1c, 1, function(x) {
(r1c0 + r2c0 + r3c0)/(sum(as.numeric(is.na(r1c[x,])) + as.numeric(is.na(r2c[x,])) + as.numeric(is.na(r3c[x,]))/25))
})
View(rnase.mvm.reduced)
r1c <- rnase.rep1.mvm.norm
r2c <- rnase.rep2.mvm.norm
r3c <- rnase.rep3.mvm.norm
r1c0 <- rnase.rep1.mvm.norm
r2c0 <- rnase.rep2.mvm.norm
r3c0 <- rnase.rep3.mvm.norm
r1c0[is.na(r1c)] <- 0
r2c0[is.na(r2c)] <- 0
r3c0[is.na(r3c)] <- 0
rnase.mvm.reduced <- t(apply(r1c, 1, function(x) {
(r1c0 + r2c0 + r3c0)/(3 - (sum(as.numeric(is.na(r1c[x,])) + as.numeric(is.na(r2c[x,])) + as.numeric(is.na(r3c[x,]))/25)))
}))
View(rnase.mvm.reduced)
