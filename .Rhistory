shoulderregion.zt.nt.nt <- data.frame(lapply(shoulderregion.zt.nt, function(x) ifelse(x == 2, 1, x)))
shoulderregion.zt <- t(shoulderregion.zt.nt.nt)
View(shoulderregion.zt)
largevalues.rnase.mvm <- apply(shreg.rnase.mvm[,2:24], 1, function(x) {
largevalues_indices <- which(x > 4.5) + 1 # to start again with 2
peak_mean <- sapply(largevalues_indices, function(i) mean(x[(i-1):(i+1)]))
largevalues_indices <- largevalues_indices[peak_mean > 4.5]
unique(c(largevalues_indices - 1 , largevalues_indices, largevalues_indices + 1))
})
shreg.rnase.mvm <- rnase.mvm
largevalues.rnase.mvm <- apply(shreg.rnase.mvm[,2:24], 1, function(x) {
largevalues_indices <- which(x > 4.5) + 1 # to start again with 2
peak_mean <- sapply(largevalues_indices, function(i) mean(x[(i-1):(i+1)]))
largevalues_indices <- largevalues_indices[peak_mean > 4.5]
unique(c(largevalues_indices - 1 , largevalues_indices, largevalues_indices + 1))
})
largevalues.rnase.mvm <- apply(shreg.rnase.mvm[,2:24], 1, function(x) {
largevalues_indices <- which(x > 4.5) + 1 # to start again with 2
peak_mean <- sapply(largevalues_indices, function(i) mean(x[(i-1):(i+1)]))
largevalues_indices <- largevalues_indices[peak_mean > 4.5]
unique(c(largevalues_indices - 1 , largevalues_indices, largevalues_indices + 1))
})
neighpeaks.rnase.mvm <- apply(shreg.rnase.mvm, 1,
function(x) { peak_indices <- which(diff(sign(diff(x))) == -2 & x[-c(1, length(x))] > 3) + 1
peak_sd <- sapply(peak_indices,function(i) sd(x[(i-1):(i+1)]))
peak_indices <- peak_indices[peak_sd > sd.mean.rnase.mvm]
c(peak_indices - 1, peak_indices, peak_indices + 1)})
shreg.ctrl.mvm <- ctrl.mvm
largevalues.ctrl.mvm <- apply(shreg.ctrl.mvm[,2:24], 1, function(x) {
largevalues_indices <- which(x > 4.5) + 1 # to start again with 2
peak_mean <- sapply(largevalues_indices, function(i) mean(x[(i-1):(i+1)]))
largevalues_indices <- largevalues_indices[peak_mean > 4.5]
unique(c(largevalues_indices - 1 , largevalues_indices, largevalues_indices + 1))
})
closereg.ctrl.mvm <- list()
for (i in 1:nrow(shreg.ctrl.mvm)) {
row <- shreg.ctrl.mvm[i,]
indices <- c()
for (j in 1:(ncol(shreg.ctrl.mvm)-2)) {
values <- as.numeric(row[j:(j+2)])
if (sd(values) < sd.mean.ctrl.mvm) {
indices <- c(indices, j:(j+2))}}
if (length(indices) == 0) {
closereg.ctrl.mvm[[i]] <- numeric(0)}
else {closereg.ctrl.mvm[[i]] <- indices}}
largevalues.closereg.ctrl.mvm <- largevalues.ctrl.mvm
for (i in seq_along(largevalues.closereg.ctrl.mvm)) {
largevalues.closereg.ctrl.mvm[[i]] <- largevalues.closereg.ctrl.mvm[[i]][largevalues.closereg.ctrl.mvm[[i]] %in% closereg.ctrl.mvm[[i]]]}
ordered.largevalues.closereg.ctrl.mvm <- lapply(largevalues.closereg.ctrl.mvm,function(row){sort(row)})
shoulderregion.ctrl.mvm <- lapply(ordered.largevalues.closereg.ctrl.mvm,function(x) {
diffs <- c(1, diff(x))
groups <- rle(diffs)
shoulderregion <- which(groups$values == 1 & groups$lengths >= 2)
if (length(shoulderregion) > 0) {
starts <- cumsum(groups$lengths)[shoulderregion] - groups$lengths[shoulderregion]
ends <- cumsum(groups$lengths)[shoulderregion]
shoulderregion <- mapply(function(start, end) x[start:end], starts, ends)
}
return(shoulderregion)
})
shreg.ctrl.mvm <- ctrl.mvm
largevalues.ctrl.mvm <- apply(shreg.ctrl.mvm[,2:24], 1, function(x) {
largevalues_indices <- which(x > 4.5) + 1 # to start again with 2
peak_mean <- sapply(largevalues_indices, function(i) mean(x[(i-1):(i+1)]))
largevalues_indices <- largevalues_indices[peak_mean > 4.5]
unique(c(largevalues_indices - 1 , largevalues_indices, largevalues_indices + 1))
})
closereg.ctrl.mvm <- list()
for (i in 1:nrow(shreg.ctrl.mvm)) {
row <- shreg.ctrl.mvm[i,]
indices <- c()
for (j in 1:(ncol(shreg.ctrl.mvm)-2)) {
values <- as.numeric(row[j:(j+2)])
if (sd(values) < sd.mean.ctrl.mvm) {
indices <- c(indices, j:(j+2))}}
if (length(indices) == 0) {
closereg.ctrl.mvm[[i]] <- numeric(0)}
else {closereg.ctrl.mvm[[i]] <- indices}}
largevalues.closereg.ctrl.mvm <- largevalues.ctrl.mvm
for (i in seq_along(largevalues.closereg.ctrl.mvm)) {
largevalues.closereg.ctrl.mvm[[i]] <- largevalues.closereg.ctrl.mvm[[i]][largevalues.closereg.ctrl.mvm[[i]] %in% closereg.ctrl.mvm[[i]]]}
ordered.largevalues.closereg.ctrl.mvm <- lapply(largevalues.closereg.ctrl.mvm,function(row){sort(row)})
shoulderregion.ctrl.mvm <- lapply(ordered.largevalues.closereg.ctrl.mvm,function(x) {
diffs <- c(1, diff(x))
groups <- rle(diffs)
shoulderregion <- which(groups$values == 1 & groups$lengths >= 2)
if (length(shoulderregion) > 0) {
starts <- cumsum(groups$lengths)[shoulderregion] - groups$lengths[shoulderregion]
ends <- cumsum(groups$lengths)[shoulderregion]
shoulderregion <- mapply(function(start, end) x[start:end], starts, ends)
}
return(shoulderregion)
})
shoulderregion.a.mvm <- lapply(names(shoulderregion.ctrl.mvm), function(x) setdiff(shoulderregion.ctrl.mvm[[x]], shoulderregion.rnase.mvm[[x]]))
largevalues.rnase.mvm <- apply(shreg.rnase.mvm[,2:24], 1, function(x) {
largevalues_indices <- which(x > 4.5) + 1 # to start again with 2
peak_mean <- sapply(largevalues_indices, function(i) mean(x[(i-1):(i+1)]))
largevalues_indices <- largevalues_indices[peak_mean > 4.5]
unique(c(largevalues_indices - 1 , largevalues_indices, largevalues_indices + 1))
})
closereg.rnase.mvm <- list()
for (i in 1:nrow(shreg.rnase.mvm)) {
row <- shreg.rnase.mvm[i,]
indices <- c()
for (j in 1:(ncol(shreg.rnase.mvm)-2)) {
values <- as.numeric(row[j:(j+2)])
if (sd(values) < sd.mean.rnase.mvm) {
indices <- c(indices, j:(j+2))}}
if (length(indices) == 0) {
closereg.rnase.mvm[[i]] <- numeric(0)}
else {closereg.rnase.mvm[[i]] <- indices}}
largevalues.closereg.rnase.mvm <- largevalues.rnase.mvm
for (i in seq_along(largevalues.closereg.rnase.mvm)) {
largevalues.closereg.rnase.mvm[[i]] <- largevalues.closereg.rnase.mvm[[i]][largevalues.closereg.rnase.mvm[[i]] %in% closereg.rnase.mvm[[i]]]}
ordered.largevalues.closereg.rnase.mvm <- lapply(largevalues.closereg.rnase.mvm,function(row){sort(row)})
shoulderregion.rnase.mvm <- lapply(ordered.largevalues.closereg.rnase.mvm,function(x) {
diffs <- c(1, diff(x))
groups <- rle(diffs)
shoulderregion <- which(groups$values == 1 & groups$lengths >= 2)
if (length(shoulderregion) > 0) {
starts <- cumsum(groups$lengths)[shoulderregion] - groups$lengths[shoulderregion]
ends <- cumsum(groups$lengths)[shoulderregion]
shoulderregion <- mapply(function(start, end) x[start:end], starts, ends)
}
return(shoulderregion)
})
shoulderregion.a.mvm <- lapply(names(shoulderregion.ctrl.mvm), function(x) setdiff(shoulderregion.ctrl.mvm[[x]], shoulderregion.rnase.mvm[[x]]))
names(shoulderregion.a.mvm) <- names(shoulderregion.ctrl.mvm)
shoulderregion.b.mvm <- lapply(names(shoulderregion.rnase.mvm), function(x) setdiff(shoulderregion.rnase.mvm[[x]], shoulderregion.ctrl.mvm[[x]]))
names(shoulderregion.b.mvm) <- names(shoulderregion.rnase.mvm)
selec.shoulderregion.a.mvm <- lapply(shoulderregion.a.mvm, function(x)
if (length(x) < 3) {return(numeric(0))}
else {return(x)})
selec.shoulderregion.b.mvm <- lapply(shoulderregion.b.mvm, function(x)
if (length(x) < 3) {return(numeric(0))}
else {return(x)})
selec.shoulderregion.a.1.mvm <- lapply(shoulderregion.1.mvm, function(x)
if (length(x) > 2) {return (1)}
else {return(0)})
selec.shoulderregion.a.1.zt <- lapply(shoulderregion.1.zt, function(x)
if (length(x) > 2) {return (1)}
else {return(0)})
selec.shoulderregion.b.1.zt <- lapply(shoulderregion.2.zt, function(x)
if (length(x) > 2) {return (1)}
else {return(0)})
shoulderregion.zt.1.nt <- as.data.frame(selec.shoulderregion.a.1.zt)
shoulderregion.zt.2.nt <- as.data.frame(selec.shoulderregion.b.1.zt)
shoulderregion.zt.nt <- shoulderregion.zt.1.nt + shoulderregion.zt.2.nt
shoulderregion.zt.nt.nt <- data.frame(lapply(shoulderregion.zt.nt, function(x) ifelse(x == 2, 1, x)))
shoulderregion.zt <- t(shoulderregion.zt.nt.nt)
# View(shoulderregion.zt)
selec.shoulderregion.a.1.zt <- lapply(shoulderregion.a.zt, function(x)
if (length(x) > 2) {return (1)}
else {return(0)})
selec.shoulderregion.b.1.zt <- lapply(shoulderregion.b.zt, function(x)
if (length(x) > 2) {return (1)}
else {return(0)})
shoulderregion.zt.1.nt <- as.data.frame(selec.shoulderregion.a.1.zt)
shoulderregion.zt.2.nt <- as.data.frame(selec.shoulderregion.b.1.zt)
shoulderregion.zt.nt <- shoulderregion.zt.1.nt + shoulderregion.zt.2.nt
shoulderregion.zt.nt.nt <- data.frame(lapply(shoulderregion.zt.nt, function(x) ifelse(x == 2, 1, x)))
shoulderregion.zt <- t(shoulderregion.zt.nt.nt)
# View(shoulderregion.zt)
selec.shoulderregion.a.1.zt <- lapply(shoulderregion.a.zt, function(x)
if (length(x) > 2) {return (1)}
else {return(0)})
selec.shoulderregion.b.1.zt <- lapply(shoulderregion.b.zt, function(x)
if (length(x) > 2) {return (1)}
else {return(0)})
shoulderregion.zt.1.nt <- as.data.frame(selec.shoulderregion.a.1.zt)
shoulderregion.zt.2.nt <- as.data.frame(selec.shoulderregion.b.1.zt)
shoulderregion.zt.nt <- shoulderregion.zt.1.nt + shoulderregion.zt.2.nt
shoulderregion.zt.nt.nt <- data.frame(lapply(shoulderregion.zt.nt, function(x) ifelse(x == 2, 1, x)))
shoulderregion.zt <- t(shoulderregion.zt.nt.nt)
View(shoulderregion.zt)
selec.shoulderregion.a.1.mvm <- lapply(shoulderregion.a.mvm, function(x)
if (length(x) > 2) {return (1)}
else {return(0)})
selec.shoulderregion.b.1.mvm <- lapply(shoulderregion.b.mvm, function(x)
if (length(x) > 2) {return (1)}
else {return(0)})
shoulderregion.mvm.1.nt <- as.data.frame(selec.shoulderregion.a.1.mvm)
shoulderregion.mvm.2.nt <- as.data.frame(selec.shoulderregion.b.1.mvm)
shoulderregion.mvm.nt <- shoulderregion.mvm.1.nt + shoulderregion.mvm.2.nt
shoulderregion.mvm.nt.nt <- data.frame(lapply(shoulderregion.mvm.nt, function(x) ifelse(x == 2, 1, x)))
shoulderregion.mvm <- t(shoulderregion.mvm.nt.nt)
View(shoulderregion.mvm)
shreg.rnase.mms <- rnase.mms
largevalues.closereg.rnase.mms <- largevalues.rnase.mms
closereg.rnase.mms <- list()
for (i in 1:nrow(shreg.rnase.mms)) {
row <- shreg.rnase.mms[i,]
indices <- c()
for (j in 1:(ncol(shreg.rnase.mms)-2)) {
values <- as.numeric(row[j:(j+2)])
if (sd(values) < sd.mean.rnase.mms) {
indices <- c(indices, j:(j+2))}}
if (length(indices) == 0) {
closereg.rnase.mms[[i]] <- numeric(0)}
else {closereg.rnase.mms[[i]] <- indices}}
largevalues.rnase.mms <- apply(shreg.rnase.mms[,2:24], 1, function(x) {
largevalues_indices <- which(x > 4.5) + 1 # to start again with 2
peak_mean <- sapply(largevalues_indices, function(i) mean(x[(i-1):(i+1)]))
largevalues_indices <- largevalues_indices[peak_mean > 4.5]
unique(c(largevalues_indices - 1 , largevalues_indices, largevalues_indices + 1))
})
largevalues.closereg.rnase.mms <- largevalues.rnase.mms
for (i in seq_along(largevalues.closereg.rnase.mms)) {
largevalues.closereg.rnase.mms[[i]] <- largevalues.closereg.rnase.mms[[i]][largevalues.closereg.rnase.mms[[i]] %in% closereg.rnase.mms[[i]]]}
ordered.largevalues.closereg.rnase.mms <- lapply(largevalues.closereg.rnase.mms,function(row){sort(row)})
closereg.ctrl.mms <- list()
for (i in 1:nrow(shreg.ctrl.mms)) {
row <- shreg.ctrl.mms[i,]
indices <- c()
for (j in 1:(ncol(shreg.ctrl.mms)-2)) {
values <- as.numeric(row[j:(j+2)])
if (sd(values) < sd.mean.ctrl.mms) {
indices <- c(indices, j:(j+2))}}
if (length(indices) == 0) {
closereg.ctrl.mms[[i]] <- numeric(0)}
else {closereg.ctrl.mms[[i]] <- indices}}
largevalues.ctrl.mms <- apply(shreg.ctrl.mms[,2:24], 1, function(x) {
largevalues_indices <- which(x > 4.5) + 1 # to start again with 2
peak_mean <- sapply(largevalues_indices, function(i) mean(x[(i-1):(i+1)]))
largevalues_indices <- largevalues_indices[peak_mean > 4.5]
unique(c(largevalues_indices - 1 , largevalues_indices, largevalues_indices + 1))
})
shreg.ctrl.mms <- ctrl.mms
largevalues.ctrl.mms <- apply(shreg.ctrl.mms[,2:24], 1, function(x) {
largevalues_indices <- which(x > 4.5) + 1 # to start again with 2
peak_mean <- sapply(largevalues_indices, function(i) mean(x[(i-1):(i+1)]))
largevalues_indices <- largevalues_indices[peak_mean > 4.5]
unique(c(largevalues_indices - 1 , largevalues_indices, largevalues_indices + 1))
})
closereg.ctrl.mms <- list()
for (i in 1:nrow(shreg.ctrl.mms)) {
row <- shreg.ctrl.mms[i,]
indices <- c()
for (j in 1:(ncol(shreg.ctrl.mms)-2)) {
values <- as.numeric(row[j:(j+2)])
if (sd(values) < sd.mean.ctrl.mms) {
indices <- c(indices, j:(j+2))}}
if (length(indices) == 0) {
closereg.ctrl.mms[[i]] <- numeric(0)}
else {closereg.ctrl.mms[[i]] <- indices}}
shoulderregion.ctrl.mms <- lapply(ordered.largevalues.closereg.ctrl.mms,function(x) {
diffs <- c(1, diff(x))
groups <- rle(diffs)
shoulderregion <- which(groups$values == 1 & groups$lengths >= 2)
if (length(shoulderregion) > 0) {
starts <- cumsum(groups$lengths)[shoulderregion] - groups$lengths[shoulderregion]
ends <- cumsum(groups$lengths)[shoulderregion]
shoulderregion <- mapply(function(start, end) x[start:end], starts, ends)
}
return(shoulderregion)
})
largevalues.closereg.ctrl.mms <- largevalues.ctrl.mms
for (i in seq_along(largevalues.closereg.ctrl.mms)) {
largevalues.closereg.ctrl.mms[[i]] <- largevalues.closereg.ctrl.mms[[i]][largevalues.closereg.ctrl.mms[[i]] %in% closereg.ctrl.mms[[i]]]}
ordered.largevalues.closereg.ctrl.mms <- lapply(largevalues.closereg.ctrl.mms,function(row){sort(row)})
shoulderregion.ctrl.mms <- lapply(ordered.largevalues.closereg.ctrl.mms,function(x) {
diffs <- c(1, diff(x))
groups <- rle(diffs)
shoulderregion <- which(groups$values == 1 & groups$lengths >= 2)
if (length(shoulderregion) > 0) {
starts <- cumsum(groups$lengths)[shoulderregion] - groups$lengths[shoulderregion]
ends <- cumsum(groups$lengths)[shoulderregion]
shoulderregion <- mapply(function(start, end) x[start:end], starts, ends)
}
return(shoulderregion)
})
shoulderregion.a.mms <- lapply(names(shoulderregion.ctrl.mms), function(x) setdiff(shoulderregion.ctrl.mms[[x]], shoulderregion.rnase.mms[[x]]))
shoulderregion.ctrl.mms <- lapply(ordered.largevalues.closereg.ctrl.mms,function(x) {
diffs <- c(1, diff(x))
groups <- rle(diffs)
shoulderregion <- which(groups$values == 1 & groups$lengths >= 2)
if (length(shoulderregion) > 0) {
starts <- cumsum(groups$lengths)[shoulderregion] - groups$lengths[shoulderregion]
ends <- cumsum(groups$lengths)[shoulderregion]
shoulderregion <- mapply(function(start, end) x[start:end], starts, ends)
}
return(shoulderregion)
})
shoulderregion.a.mms <- lapply(names(shoulderregion.ctrl.mms), function(x) setdiff(shoulderregion.ctrl.mms[[x]], shoulderregion.rnase.mms[[x]]))
shoulderregion.rnase.mms <- lapply(ordered.largevalues.closereg.rnase.mms,function(x) {
diffs <- c(1, diff(x))
groups <- rle(diffs)
shoulderregion <- which(groups$values == 1 & groups$lengths >= 2)
if (length(shoulderregion) > 0) {
starts <- cumsum(groups$lengths)[shoulderregion] - groups$lengths[shoulderregion]
ends <- cumsum(groups$lengths)[shoulderregion]
shoulderregion <- mapply(function(start, end) x[start:end], starts, ends)
}
return(shoulderregion)
})
shoulderregion.a.mms <- lapply(names(shoulderregion.ctrl.mms), function(x) setdiff(shoulderregion.ctrl.mms[[x]], shoulderregion.rnase.mms[[x]]))
names(shoulderregion.a.mms) <- names(shoulderregion.ctrl.mms)
shoulderregion.b.mms <- lapply(names(shoulderregion.rnase.mms), function(x) setdiff(shoulderregion.rnase.mms[[x]], shoulderregion.ctrl.mms[[x]]))
names(shoulderregion.b.mms) <- names(shoulderregion.rnase.mms)
selec.shoulderregion.a.mms <- lapply(shoulderregion.a.mms, function(x)
if (length(x) < 3) {return(numeric(0))}
else {return(x)})
selec.shoulderregion.b.mms <- lapply(shoulderregion.b.mms, function(x)
if (length(x) < 3) {return(numeric(0))}
else {return(x)})
selec.shoulderregion.a.1.mms <- lapply(shoulderregion.a.mvm, function(x)
if (length(x) > 2) {return (1)}
else {return(0)})
selec.shoulderregion.b.1.mms <- lapply(shoulderregion.b.mms, function(x)
if (length(x) > 2) {return (1)}
else {return(0)})
shoulderregion.mms.1.nt <- as.data.frame(selec.shoulderregion.a.1.mms)
shoulderregion.mms.2.nt <- as.data.frame(selec.shoulderregion.b.1.mms)
shoulderregion.mms.nt <- shoulderregion.mms.1.nt + shoulderregion.mms.2.nt
shoulderregion.mms.nt.nt <- data.frame(lapply(shoulderregion.mms.nt, function(x) ifelse(x == 2, 1, x)))
shoulderregion.mms <- t(shoulderregion.mms.nt.nt)
View(shoulderregion.mms)
parameters_mvm <- cbind(signi.global.pa.mvm, signi.local.pa.mvm, shift_mvm_named, shoulderregion.mvm)
parameters_zt <- cbind(signi.global.pa.zt, signifikante_reihen_local_zt, shift_zt_named, shoulderregion.zt)
n = 2
shift_mvm_global <- globalpeak.rnase.mvm - globalpeak.ctrl.mvm
shift_mvm_named <- shift_mvm_global
for (i in 1:nrow(rnase.mvm)) {
if (i %in% precipitated.mvm) {shift_mvm_named[i] <- "precipitated"}
else if (shift_mvm_global [i] < (-n)){shift_mvm_named [i] <- "right shift"}
else if (shift_mvm_global [i] > n){shift_mvm_named [i] <- "left shift"}
else (shift_mvm_named [i] <- "no shift")
}
# View(shift_mvm_named)
n = 2
shift_zt_global <- globalpeak.rnase.zt - globalpeak.ctrl.zt
shift_zt_named <- shift_zt_global
for (i in 1:nrow(ctrl.zt)) {
if (i %in% precipitated.zt) {shift_zt_named[i] <- "precipitated"}
else if (shift_zt_global [i] < (-n)){shift_zt_named [i] <- "right shift"}
else if (shift_zt_global [i] > n){shift_zt_named [i] <- "left shift"}
else (shift_zt_named [i] <- "no shift")
}
# View(shift_zt_named)
n = 2
shift_mms_global <- globalpeak.rnase.mms - globalpeak.ctrl.mms
shift_mms_named <- shift_mms_global
for (i in 1:nrow(ctrl.mms)) {
if (i %in% precipitated.mms) {shift_mms_named[i] <- "precipitated"}
else if (shift_mms_global [i] < (-n)){shift_mms_named [i] <- "right shift"}
else if (shift_mms_global [i] > n){shift_mms_named [i] <- "left shift"}
else (shift_mms_named [i] <- "no shift")
}
# View(shift_mms_named)
parameters_mvm <- cbind(signi.global.pa.mvm, signi.local.pa.mvm, shift_mvm_named, shoulderregion.mvm)
parameters_zt <- cbind(signi.global.pa.zt, signifikante_reihen_local_zt, shift_zt_named, shoulderregion.zt)
parameters_mms <- cbind(signi.global.pa.mms, signifikante_reihen_local_mms, shift_mms_named, shoulderregion.mms)
signifikante_reihen_local_mms <- data.frame(Zustimmung_local = rep(0, nrow(localpeaks.sumvalues.rnase.mms)))
localpeaks.sumvalues.ctrl.zt <- data.frame(Summed_Values = numeric(length(localpeaks.values.ctrl.zt)))
for (i in seq_along(localpeaks.values.ctrl.zt)) {
summed_values <- sum(localpeaks.values.ctrl.zt[[i]])
localpeaks.sumvalues.ctrl.zt[i, "Summed_Values"] <- summed_values
}
#View(localpeaks.sumvalues.ctrl.zt)
localpeaks.sumvalues.rnase.zt <- data.frame(Summed_Values = numeric(length(localpeaks.values.rnase.zt)))
for (i in seq_along(localpeaks.values.rnase.zt)) {
summed_values <- sum(localpeaks.values.rnase.zt[[i]])
localpeaks.sumvalues.rnase.zt[i, "Summed_Values"] <- summed_values
}
#View(localpeaks.sumvalues.rnase.zt)
signifikante_reihen_local_zt <- data.frame(Zustimmung_local = rep(0, nrow(localpeaks.sumvalues.rnase.zt)))
for (i in 1:nrow(localpeaks.sumvalues.rnase.zt)) {
if (abs(localpeaks.sumvalues.rnase.zt$Summed_Values[i] - localpeaks.sumvalues.ctrl.zt$Summed_Values[i]) > 7.5)
{
signifikante_reihen_local_zt$Zustimmung_local[i] <- 1
}
}
rownames(signifikante_reihen_local_zt) <- rownames(rnase.zt)
length(which(signifikante_reihen_local_zt==1))
#View(signifikante_reihen_local_zt)
#dim(signifikante_reihen_local_zt)
localpeaks.sumvalues.ctrl.mms <- data.frame(Summed_Values = numeric(length(localpeaks.values.ctrl.mms)))
for (i in seq_along(localpeaks.values.ctrl.mms)) {
summed_values <- sum(localpeaks.values.ctrl.mms[[i]])
localpeaks.sumvalues.ctrl.mms[i, "Summed_Values"] <- summed_values
}
#View(localpeaks.sumvalues.ctrl.mms)
localpeaks.sumvalues.rnase.mms <- data.frame(Summed_Values = numeric(length(localpeaks.values.rnase.mms)))
for (i in seq_along(localpeaks.values.rnase.mms)) {
summed_values <- sum(localpeaks.values.rnase.mms[[i]])
localpeaks.sumvalues.rnase.mms[i, "Summed_Values"] <- summed_values
}
#View(localpeaks.sumvalues.rnase.mms)
signifikante_reihen_local_mms <- data.frame(Zustimmung_local = rep(0, nrow(localpeaks.sumvalues.rnase.mms)))
for (i in 1:nrow(localpeaks.sumvalues.rnase.mms)) {
if (abs(localpeaks.sumvalues.rnase.mms$Summed_Values[i] - localpeaks.sumvalues.ctrl.mms$Summed_Values[i]) > 7.5)
{
signifikante_reihen_local_mms$Zustimmung_local[i] <- 1
}
}
rownames(signifikante_reihen_local_mms) <- rownames(rnase.mms)
#View(signifikante_reihen_local_mms)
#dim(signifikante_reihen_local_mms)
parameters_mvm <- cbind(signi.global.pa.mvm, signi.local.pa.mvm, shift_mvm_named, shoulderregion.mvm)
parameters_zt <- cbind(signi.global.pa.zt, signifikante_reihen_local_zt, shift_zt_named, shoulderregion.zt)
parameters_mms <- cbind(signi.global.pa.mms, signifikante_reihen_local_mms, shift_mms_named, shoulderregion.mms)
parameters.mvm <- cbind(signi.global.pa.mvm, signi.local.pa.mvm, shift_mvm_named, shoulderregion.mvm)
parameters.zt <- cbind(signi.global.pa.zt, signifikante_reihen_local_zt, shift_zt_named, shoulderregion.zt)
parameters.mms <- cbind(signi.global.pa.mms, signifikante_reihen_local_mms, shift_mms_named, shoulderregion.mms)
View(parameters.mvm)
selec.shoulderregion.a.1.mvm <- lapply(shoulderregion.a.mvm, function(x)
if (length(x) > 2) {return (1)}
else {return(0)})
selec.shoulderregion.b.1.mvm <- lapply(shoulderregion.b.mvm, function(x)
if (length(x) > 2) {return (1)}
else {return(0)})
shoulderregion.mvm.1.nt <- as.data.frame(selec.shoulderregion.a.1.mvm)
shoulderregion.mvm.2.nt <- as.data.frame(selec.shoulderregion.b.1.mvm)
shoulderregion.mvm.nt <- shoulderregion.mvm.1.nt + shoulderregion.mvm.2.nt
shoulderregion.mvm.nt.nt <- data.frame(lapply(shoulderregion.mvm.nt, function(x) ifelse(x == 2, 1, x)))
S.Region_mvm <- t(shoulderregion.mvm.nt.nt)
# View(shoulderregion.mvm)
selec.shoulderregion.a.1.mvm <- lapply(shoulderregion.a.mvm, function(x)
if (length(x) > 2) {return (1)}
else {return(0)})
selec.shoulderregion.b.1.mvm <- lapply(shoulderregion.b.mvm, function(x)
if (length(x) > 2) {return (1)}
else {return(0)})
shoulderregion.mvm.1.nt <- as.data.frame(selec.shoulderregion.a.1.mvm)
shoulderregion.mvm.2.nt <- as.data.frame(selec.shoulderregion.b.1.mvm)
shoulderregion.mvm.nt <- shoulderregion.mvm.1.nt + shoulderregion.mvm.2.nt
shoulderregion.mvm.nt.nt <- data.frame(lapply(shoulderregion.mvm.nt, function(x) ifelse(x == 2, 1, x)))
ShoulderRegion_mvm <- t(shoulderregion.mvm.nt.nt)
# View(shoulderregion.mvm)
selec.shoulderregion.a.1.mms <- lapply(shoulderregion.a.mvm, function(x)
if (length(x) > 2) {return (1)}
else {return(0)})
selec.shoulderregion.b.1.mms <- lapply(shoulderregion.b.mms, function(x)
if (length(x) > 2) {return (1)}
else {return(0)})
shoulderregion.mms.1.nt <- as.data.frame(selec.shoulderregion.a.1.mms)
shoulderregion.mms.2.nt <- as.data.frame(selec.shoulderregion.b.1.mms)
shoulderregion.mms.nt <- shoulderregion.mms.1.nt + shoulderregion.mms.2.nt
shoulderregion.mms.nt.nt <- data.frame(lapply(shoulderregion.mms.nt, function(x) ifelse(x == 2, 1, x)))
ShoulderRegion_mms <- t(shoulderregion.mms.nt.nt)
View(shoulderregion.mms)
selec.shoulderregion.a.1.zt <- lapply(shoulderregion.a.zt, function(x)
if (length(x) > 2) {return (1)}
else {return(0)})
selec.shoulderregion.b.1.zt <- lapply(shoulderregion.b.zt, function(x)
if (length(x) > 2) {return (1)}
else {return(0)})
shoulderregion.zt.1.nt <- as.data.frame(selec.shoulderregion.a.1.zt)
shoulderregion.zt.2.nt <- as.data.frame(selec.shoulderregion.b.1.zt)
shoulderregion.zt.nt <- shoulderregion.zt.1.nt + shoulderregion.zt.2.nt
shoulderregion.zt.nt.nt <- data.frame(lapply(shoulderregion.zt.nt, function(x) ifelse(x == 2, 1, x)))
ShoulderRegion_zt <- t(shoulderregion.zt.nt.nt)
# View(ShoulderRegion_zt)
parameters.mvm <- cbind(signi.global.pa.mvm, signi.local.pa.mvm, shift_mvm_named, ShoulderRegion.mvm)
selec.shoulderregion.a.1.mvm <- lapply(shoulderregion.a.mvm, function(x)
if (length(x) > 2) {return (1)}
else {return(0)})
selec.shoulderregion.b.1.mvm <- lapply(shoulderregion.b.mvm, function(x)
if (length(x) > 2) {return (1)}
else {return(0)})
shoulderregion.mvm.1.nt <- as.data.frame(selec.shoulderregion.a.1.mvm)
shoulderregion.mvm.2.nt <- as.data.frame(selec.shoulderregion.b.1.mvm)
shoulderregion.mvm.nt <- shoulderregion.mvm.1.nt + shoulderregion.mvm.2.nt
shoulderregion.mvm.nt.nt <- data.frame(lapply(shoulderregion.mvm.nt, function(x) ifelse(x == 2, 1, x)))
ShoulderRegion_mvm <- t(shoulderregion.mvm.nt.nt)
# View(ShoulderRegion_mvm)
selec.shoulderregion.a.1.zt <- lapply(shoulderregion.a.zt, function(x)
if (length(x) > 2) {return (1)}
else {return(0)})
selec.shoulderregion.b.1.zt <- lapply(shoulderregion.b.zt, function(x)
if (length(x) > 2) {return (1)}
else {return(0)})
shoulderregion.zt.1.nt <- as.data.frame(selec.shoulderregion.a.1.zt)
shoulderregion.zt.2.nt <- as.data.frame(selec.shoulderregion.b.1.zt)
shoulderregion.zt.nt <- shoulderregion.zt.1.nt + shoulderregion.zt.2.nt
shoulderregion.zt.nt.nt <- data.frame(lapply(shoulderregion.zt.nt, function(x) ifelse(x == 2, 1, x)))
ShoulderRegion_zt <- t(shoulderregion.zt.nt.nt)
# View(ShoulderRegion_zt)
selec.shoulderregion.a.1.mms <- lapply(shoulderregion.a.mvm, function(x)
if (length(x) > 2) {return (1)}
else {return(0)})
selec.shoulderregion.b.1.mms <- lapply(shoulderregion.b.mms, function(x)
if (length(x) > 2) {return (1)}
else {return(0)})
shoulderregion.mms.1.nt <- as.data.frame(selec.shoulderregion.a.1.mms)
shoulderregion.mms.2.nt <- as.data.frame(selec.shoulderregion.b.1.mms)
shoulderregion.mms.nt <- shoulderregion.mms.1.nt + shoulderregion.mms.2.nt
shoulderregion.mms.nt.nt <- data.frame(lapply(shoulderregion.mms.nt, function(x) ifelse(x == 2, 1, x)))
ShoulderRegion_mms <- t(shoulderregion.mms.nt.nt)
# View(ShoulderRegion_mms)
parameters.mvm <- cbind(signi.global.pa.mvm, signi.local.pa.mvm, shift_mvm_named, ShoulderRegion.mvm)
parameters.mvm <- cbind(signi.global.pa.mvm, signi.local.pa.mvm, shift_mvm_named, ShoulderRegion_mvm)
parameters.zt <- cbind(signi.global.pa.zt, signifikante_reihen_local_zt, shift_zt_named, ShoulderRegion_zt)
parameters.mms <- cbind(signi.global.pa.mms, signifikante_reihen_local_mms, shift_mms_named, ShoulderRegion_mms)
View(parameters.mvm)
install.packages(c("bit", "blob", "bookdown", "broom", "bslib", "cachem", "car", "cli", "colorspace", "cpp11", "curl", "data.table", "dbplyr", "dendextend", "digest", "DT", "dtplyr", "ellipse", "emmeans", "evaluate", "FactoMineR", "fansi", "fastmap", "forcats", "fs", "gargle", "ggplot2", "ggpubr", "ggrepel", "ggsci", "googledrive", "googlesheets4", "gtable", "haven", "highr", "hms", "htmltools", "htmlwidgets", "httr", "isoband", "jsonlite", "knitr", "later", "lme4", "lubridate", "markdown", "Matrix", "matrixStats", "modelr", "multcompView", "mvtnorm", "openssl", "pbkrtest", "pkgload", "plyr", "processx", "ps", "quantreg", "readr", "readxl", "rlang", "rmarkdown", "rstatix", "sass", "scatterplot3d", "sp", "stringi", "sys", "terra", "testthat", "tidyr", "tidyverse", "timechange", "tinytex", "utf8", "uwot", "vioplot", "viridis", "viridisLite", "vroom", "waldo", "xfun", "xml2", "yaml", "zoo"))
install.packages(c("bit", "blob", "bookdown", "broom", "bslib", "cachem", "car", "cli", "colorspace", "cpp11", "curl", "data.table", "dbplyr", "dendextend", "digest", "DT", "dtplyr", "ellipse", "emmeans", "evaluate", "FactoMineR", "fansi", "fastmap", "forcats", "fs", "gargle", "ggplot2", "ggpubr", "ggrepel", "ggsci", "googledrive", "googlesheets4", "gtable", "haven", "highr", "hms", "htmltools", "htmlwidgets", "httr", "isoband", "jsonlite", "knitr", "later", "lme4", "lubridate", "markdown", "Matrix", "matrixStats", "modelr", "multcompView", "mvtnorm", "openssl", "pbkrtest", "pkgload", "plyr", "processx", "ps", "quantreg", "readr", "readxl", "rlang", "rmarkdown", "rstatix", "sass", "scatterplot3d", "sp", "stringi", "sys", "terra", "testthat", "tidyr", "tidyverse", "timechange", "tinytex", "utf8", "uwot", "vioplot", "viridis", "viridisLite", "vroom", "waldo", "xfun", "xml2", "yaml", "zoo"))
install.packages(c("bit", "blob", "bookdown", "broom", "bslib", "cachem", "car", "cli", "colorspace", "cpp11", "curl", "data.table", "dbplyr", "dendextend", "digest", "DT", "dtplyr", "ellipse", "emmeans", "evaluate", "FactoMineR", "fansi", "fastmap", "forcats", "fs", "gargle", "ggplot2", "ggpubr", "ggrepel", "ggsci", "googledrive", "googlesheets4", "gtable", "haven", "highr", "hms", "htmltools", "htmlwidgets", "httr", "isoband", "jsonlite", "knitr", "later", "lme4", "lubridate", "markdown", "Matrix", "matrixStats", "modelr", "multcompView", "mvtnorm", "openssl", "pbkrtest", "pkgload", "plyr", "processx", "ps", "quantreg", "readr", "readxl", "rlang", "rmarkdown", "rstatix", "sass", "scatterplot3d", "sp", "stringi", "sys", "terra", "testthat", "tidyr", "tidyverse", "timechange", "tinytex", "utf8", "uwot", "vioplot", "viridis", "viridisLite", "vroom", "waldo", "xfun", "xml2", "yaml", "zoo"))
install.packages(c("bit", "blob", "bookdown", "broom", "bslib", "cachem", "car", "cli", "colorspace", "cpp11", "curl", "data.table", "dbplyr", "dendextend", "digest", "DT", "dtplyr", "ellipse", "emmeans", "evaluate", "FactoMineR", "fansi", "fastmap", "forcats", "fs", "gargle", "ggplot2", "ggpubr", "ggrepel", "ggsci", "googledrive", "googlesheets4", "gtable", "haven", "highr", "hms", "htmltools", "htmlwidgets", "httr", "isoband", "jsonlite", "knitr", "later", "lme4", "lubridate", "markdown", "Matrix", "matrixStats", "modelr", "multcompView", "mvtnorm", "openssl", "pbkrtest", "pkgload", "plyr", "processx", "ps", "quantreg", "readr", "readxl", "rlang", "rmarkdown", "rstatix", "sass", "scatterplot3d", "sp", "stringi", "sys", "terra", "testthat", "tidyr", "tidyverse", "timechange", "tinytex", "utf8", "uwot", "vioplot", "viridis", "viridisLite", "vroom", "waldo", "xfun", "xml2", "yaml", "zoo"))
install.packages(c("bit", "blob", "bookdown", "broom", "bslib", "cachem", "car", "cli", "colorspace", "cpp11", "curl", "data.table", "dbplyr", "dendextend", "digest", "DT", "dtplyr", "ellipse", "emmeans", "evaluate", "FactoMineR", "fansi", "fastmap", "forcats", "fs", "gargle", "ggplot2", "ggpubr", "ggrepel", "ggsci", "googledrive", "googlesheets4", "gtable", "haven", "highr", "hms", "htmltools", "htmlwidgets", "httr", "isoband", "jsonlite", "knitr", "later", "lme4", "lubridate", "markdown", "Matrix", "matrixStats", "modelr", "multcompView", "mvtnorm", "openssl", "pbkrtest", "pkgload", "plyr", "processx", "ps", "quantreg", "readr", "readxl", "rlang", "rmarkdown", "rstatix", "sass", "scatterplot3d", "sp", "stringi", "sys", "terra", "testthat", "tidyr", "tidyverse", "timechange", "tinytex", "utf8", "uwot", "vioplot", "viridis", "viridisLite", "vroom", "waldo", "xfun", "xml2", "yaml", "zoo"))
install.packages(c("bit", "blob", "bookdown", "broom", "bslib", "cachem", "car", "cli", "colorspace", "cpp11", "curl", "data.table", "dbplyr", "dendextend", "digest", "DT", "dtplyr", "ellipse", "emmeans", "evaluate", "FactoMineR", "fansi", "fastmap", "forcats", "fs", "gargle", "ggplot2", "ggpubr", "ggrepel", "ggsci", "googledrive", "googlesheets4", "gtable", "haven", "highr", "hms", "htmltools", "htmlwidgets", "httr", "isoband", "jsonlite", "knitr", "later", "lme4", "lubridate", "markdown", "Matrix", "matrixStats", "modelr", "multcompView", "mvtnorm", "openssl", "pbkrtest", "pkgload", "plyr", "processx", "ps", "quantreg", "readr", "readxl", "rlang", "rmarkdown", "rstatix", "sass", "scatterplot3d", "sp", "stringi", "sys", "terra", "testthat", "tidyr", "tidyverse", "timechange", "tinytex", "utf8", "uwot", "vioplot", "viridis", "viridisLite", "vroom", "waldo", "xfun", "xml2", "yaml", "zoo"))
install.packages(c("bit", "blob", "bookdown", "broom", "bslib", "cachem", "car", "cli", "colorspace", "cpp11", "curl", "data.table", "dbplyr", "dendextend", "digest", "DT", "dtplyr", "ellipse", "emmeans", "evaluate", "FactoMineR", "fansi", "fastmap", "forcats", "fs", "gargle", "ggplot2", "ggpubr", "ggrepel", "ggsci", "googledrive", "googlesheets4", "gtable", "haven", "highr", "hms", "htmltools", "htmlwidgets", "httr", "isoband", "jsonlite", "knitr", "later", "lme4", "lubridate", "markdown", "Matrix", "matrixStats", "modelr", "multcompView", "mvtnorm", "openssl", "pbkrtest", "pkgload", "plyr", "processx", "ps", "quantreg", "readr", "readxl", "rlang", "rmarkdown", "rstatix", "sass", "scatterplot3d", "sp", "stringi", "sys", "terra", "testthat", "tidyr", "tidyverse", "timechange", "tinytex", "utf8", "uwot", "vioplot", "viridis", "viridisLite", "vroom", "waldo", "xfun", "xml2", "yaml", "zoo"))
install.packages(c("bit", "blob", "bookdown", "broom", "bslib", "cachem", "car", "cli", "colorspace", "cpp11", "curl", "data.table", "dbplyr", "dendextend", "digest", "DT", "dtplyr", "ellipse", "emmeans", "evaluate", "FactoMineR", "fansi", "fastmap", "forcats", "fs", "gargle", "ggplot2", "ggpubr", "ggrepel", "ggsci", "googledrive", "googlesheets4", "gtable", "haven", "highr", "hms", "htmltools", "htmlwidgets", "httr", "isoband", "jsonlite", "knitr", "later", "lme4", "lubridate", "markdown", "Matrix", "matrixStats", "modelr", "multcompView", "mvtnorm", "openssl", "pbkrtest", "pkgload", "plyr", "processx", "ps", "quantreg", "readr", "readxl", "rlang", "rmarkdown", "rstatix", "sass", "scatterplot3d", "sp", "stringi", "sys", "terra", "testthat", "tidyr", "tidyverse", "timechange", "tinytex", "utf8", "uwot", "vioplot", "viridis", "viridisLite", "vroom", "waldo", "xfun", "xml2", "yaml", "zoo"))
knitr::opts_chunk$set(echo = TRUE)
install.packages("tinytex")
tinytex::install_tinytex()
install.packages("tinytex")
knitr::opts_chunk$set(echo = TRUE)
install.packages("tinytex")
tinytex::reinstall_tinytex()
install.packages("tinytex")
MS_Table <- read.delim('https://www.dropbox.com/s/vm3lxljjm9chau8/RDeeP_A549_NS.csv?dl=1', header=TRUE, row.names=1, sep = ";")
