#Number of correctly assigned (true positives) RBPs with parameters
counter.kmeans.rdeep <- data.frame(mvm = c(0), zt = c(0), mms = c(0))
for(z in 1:3){
counter <- 0
for (i in names.kmeans[[z]]) {
if (i %in% rownames(rdeep)) {
counter <- counter + 1
}
}
counter.kmeans.rdeep[z] <- counter
}
##false positive rate
# false positive rate with parameters
false.positive.parameters <- c()
for (x in 1:3){
false.positive.parameters[x] <- counter.parameters.non.rdeep[x]/length(names.parameters[[x]])
}
comparison.parameters <- rbind(counter.parameters.non.rdeep, counter.kmeans.rdeep)
rownames(comparison.parameters) = c("number of false positives", "number of true positives")
View(comparison.parameters)
comparison.parameters <- rbind(counter.parameters.non.rdeep, counter.parameters.rdeep)
rownames(comparison.parameters) = c("number of false positives", "number of true positives")
View(comparison.parameters)
number.observed.RBPs.parameters <- c(length(names.mvm.parameters), length(names.zt.parameters), length(names.zt.parameters))
number.observed.RBPs.kmeans <- c(length(names.mvm.kmeans), length(names.zt.kmeans), length(names.zt.kmeans))
comparison.parameters <- rbind(number.observed.RBPs.parameters, counter.parameters.non.rdeep, counter.parameters.rdeep)
rownames(comparison.parameters) = c("number of observed positives","number of false positives", "number of true positives")
View(comparison.parameters)
non.comparable.proteins.parameters <- c()
for (x in 1:3){
number.observed.RBPs.parameters[x] - (counter.parameters.non.rdeep[x] + counter.parameters.rdeep[x])
}
non.comparable.proteins.parameters
non.comparable.proteins.parameters <- c()
for (x in 1:3){
non.comparable.proteins.parameters <- number.observed.RBPs.parameters[x] - (counter.parameters.non.rdeep[x] + counter.parameters.rdeep[x])
}
non.comparable.proteins.parameters
non.comparable.proteins.parameters <- c()
non.comparable.proteins.parameters <- c()
for (x in 1:3){
non.comparable.proteins.parameters[x] <- number.observed.RBPs.parameters[x] - (counter.parameters.non.rdeep[x] + counter.parameters.rdeep[x])
}
non.comparable.proteins.parameters
comparison.parameters <- rbind(number.observed.RBPs.parameters, counter.parameters.non.rdeep,
counter.parameters.rdeep, non.comparable.proteins.parameters)
View(comparison.parameters)
comparison.parameters <- rbind(number.observed.RBPs.parameters, counter.parameters.non.rdeep,
counter.parameters.rdeep, non.comparable.proteins.parameters)
rownames(comparison.parameters) = c("number of observed positives","number of false positives", "number of true positives", "number of non-comparable Proteins")
View(comparison.parameters)
which(names.mvm.parameters != names.mms.parameters)
which(names.mvm.parameters != names.zt.parameters)
which(names.mvm.parameters == names.zt.parameters)
#Number of correctly assigned (true positives) RBPs with parameters
true.positive.parameters <- data.frame(mvm = c(0), zt = c(0), mms = c(0))
for(z in 1:3){
counter <- 0
for (i in names.parameters[[z]]) {
if (i %in% rownames(rdeep)) {
counter <- counter + 1
}
}
true.positive.parameters[z] <- counter
}
#Number of correctly assigned (true positives) RBPs with parameters
true.positive.kmeans <- data.frame(mvm = c(0), zt = c(0), mms = c(0))
for(z in 1:3){
counter <- 0
for (i in names.kmeans[[z]]) {
if (i %in% rownames(rdeep)) {
counter <- counter + 1
}
}
true.positive.kmeans[z] <- counter
}
# the proteins identified by our four parameters:
comp.mvm.parameters <- shift_mvm
comp.zt.parameters <- shift_zt
comp.mms.parameters <- shift_mms
rownames(comp.mvm.parameters) = rownames(parameters.mms)
rownames(comp.zt.parameters) = rownames(parameters.mms)
rownames(comp.mms.parameters) = rownames(parameters.mms)
names.rdp.mvm.parameters <- rownames(comp.mvm.parameters)[which(comp.mvm.parameters ==1)]
names.rdp.zt.parameters <- rownames(comp.zt.parameters)[which(comp.zt.parameters ==1)]
names.rdp.mms.parameters <- rownames(comp.mms.parameters)[which(comp.mms.parameters ==1)]
names.rdp.parameters <- list(names.rdp.mvm.parameters, names.rdp.zt.parameters, names.rdp.mms.parameters)
# the proteins identified by kmeans-clustering:
comp.mvm.kmeans <- shift.kmeans[[1]]
comp.zt.kmeans <- shift.kmeans[[2]]
comp.mms.kmeans <- shift.kmeans[[3]]
names.rdp.mvm.kmeans <- rownames(comp.mvm.kmeans)[which(comp.mvm.kmeans ==1)]
names.rdp.zt.kmeans <- rownames(comp.zt.kmeans)[which(comp.zt.kmeans ==1)]
names.rdp.mms.kmeans <- rownames(comp.mms.kmeans)[which(comp.mms.kmeans ==1)]
names.rdp.kmeans <- list(names.rdp.mvm.kmeans, names.rdp.zt.kmeans, names.rdp.mms.kmeans)
number.observed.RBPs.parameters <- c(length(names.rdp.mvm.parameters), length(names.rdp.zt.parameters), length(names.rdp.zt.parameters))
number.observed.RBPs.kmeans <- c(length(names.rdp.mvm.kmeans), length(names.rdp.zt.kmeans), length(names.rdp.zt.kmeans))
#Number of correctly assigned (true positives) RBPs with parameters
true.positives.parameters <- data.frame(mvm = c(0), zt = c(0), mms = c(0))
for(z in 1:3){
counter <- 0
for (i in names.rdp.parameters[[z]]) {
if (i %in% rownames(rdeep)) {
counter <- counter + 1
}
}
true.positives.parameters[z] <- counter
}
#Number of correctly assigned (true positives) RBPs with parameters
true.positives.kmeans <- data.frame(mvm = c(0), zt = c(0), mms = c(0))
for(z in 1:3){
counter <- 0
for (i in names.rdp.kmeans[[z]]) {
if (i %in% rownames(rdeep)) {
counter <- counter + 1
}
}
true.positives.kmeans[z] <- counter
}
# Number of wrongly assigned (false positives) RBPs with parameters
false.positives.parameters <- data.frame(mvm = c(0), zt = c(0), mms = c(0))
for(z in 1:3){
counter <- 0
for (i in names.rdp.parameters[[z]]) {
if (i %in% non.rdeep$Entry_Name) {
counter <- counter + 1
}
}
false.positives.parameters[z] <- counter
}
# Number of wrongly assigned (false positives) RBPs with kmeans
false.positives.kmeans <- data.frame(mvm = c(0), zt = c(0), mms = c(0))
for(z in 1:3){
counter <- 0
for (i in names.rdp.kmeans[[z]]) {
if (i %in% non.rdeep$Entry_Name) {
counter <- counter + 1
}
}
false.positives.kmeans[z] <- counter
}
false.negatives.parameters
# the proteins identified as RNA-dependent by our four parameters:
comp.mvm.parameters <- shift_mvm
comp.zt.parameters <- shift_zt
comp.mms.parameters <- shift_mms
rownames(comp.mvm.parameters) = rownames(parameters.mms)
rownames(comp.zt.parameters) = rownames(parameters.mms)
rownames(comp.mms.parameters) = rownames(parameters.mms)
names.rdp.mvm.parameters <- rownames(comp.mvm.parameters)[which(comp.mvm.parameters == 1)]
names.rdp.zt.parameters <- rownames(comp.zt.parameters)[which(comp.zt.parameters == 1)]
names.rdp.mms.parameters <- rownames(comp.mms.parameters)[which(comp.mms.parameters == 1)]
names.rdp.parameters <- list(names.rdp.mvm.parameters, names.rdp.zt.parameters, names.rdp.mms.parameters)
number.observed.RBPs.parameters <- c(length(names.rdp.mvm.parameters), length(names.rdp.zt.parameters), length(names.rdp.zt.parameters))
# the proteins identified as non-RNA-dependent by our four parameters:
names.nrdp.mvm.parameters <- rownames(comp.mvm.parameters)[which(comp.mvm.parameters == 0)]
names.nrdp.zt.parameters <- rownames(comp.zt.parameters)[which(comp.zt.parameters == 0)]
names.nrdp.mms.parameters <- rownames(comp.mms.parameters)[which(comp.mms.parameters == 0)]
names.nrdp.parameters <- list(names.nrdp.mvm.parameters, names.nrdp.zt.parameters, names.nrdp.mms.parameters)
number.observed.non.RBPs.parameters <- c(length(names.nrdp.mvm.parameters), length(names.nrdp.zt.parameters), length(names.nrdp.zt.parameters))
# the proteins identified as RNA-dependent by kmeans-clustering:
comp.mvm.kmeans <- shift.kmeans[[1]]
comp.zt.kmeans <- shift.kmeans[[2]]
comp.mms.kmeans <- shift.kmeans[[3]]
names.rdp.mvm.kmeans <- rownames(comp.mvm.kmeans)[which(comp.mvm.kmeans == 1)]
names.rdp.zt.kmeans <- rownames(comp.zt.kmeans)[which(comp.zt.kmeans == 1)]
names.rdp.mms.kmeans <- rownames(comp.mms.kmeans)[which(comp.mms.kmeans == 1)]
names.rdp.kmeans <- list(names.rdp.mvm.kmeans, names.rdp.zt.kmeans, names.rdp.mms.kmeans)
number.observed.RBPs.kmeans <- c(length(names.rdp.mvm.kmeans), length(names.rdp.zt.kmeans), length(names.rdp.zt.kmeans))
# the proteins identified as non-RNA-dependent by kmeans-clustering:
names.nrdp.mvm.kmeans <- rownames(comp.mvm.kmeans)[which(comp.mvm.kmeans == 0)]
names.nrdp.zt.kmeans <- rownames(comp.zt.kmeans)[which(comp.zt.kmeans == 0)]
names.nrdp.mms.kmeans <- rownames(comp.mms.kmeans)[which(comp.mms.kmeans == 0)]
names.nrdp.kmeans <- list(names.nrdp.mvm.kmeans, names.nrdp.zt.kmeans, names.nrdp.mms.kmeans)
number.observed.non.RBPs.kmeans <- c(length(names.nrdp.mvm.kmeans), length(names.nrdp.zt.kmeans), length(names.nrdp.zt.kmeans))
View(rdeep)
View(non.rdeep)
View(non.rdeep$Entry_Name)
#Number of correctly assigned (true positives) RBPs with parameters
true.positives.parameters <- data.frame(mvm = c(0), zt = c(0), mms = c(0))
for(z in 1:3){
counter <- 0
for (i in names.rdp.parameters[[z]]) {
if (i %in% rownames(rdeep)) {
counter <- counter + 1
}
}
true.positives.parameters[z] <- counter
}
#Number of correctly assigned (true positives) RBPs with parameters
true.positives.kmeans <- data.frame(mvm = c(0), zt = c(0), mms = c(0))
for(z in 1:3){
counter <- 0
for (i in names.rdp.kmeans[[z]]) {
if (i %in% rownames(rdeep)) {
counter <- counter + 1
}
}
true.positives.kmeans[z] <- counter
}
# Number of wrongly assigned (false positives) RBPs with parameters
false.positives.parameters <- data.frame(mvm = c(0), zt = c(0), mms = c(0))
for(z in 1:3){
counter <- 0
for (i in names.rdp.parameters[[z]]) {
if (i %in% non.rdeep$Entry_Name) {
counter <- counter + 1
}
}
false.positives.parameters[z] <- counter
}
# Number of wrongly assigned (false positives) RBPs with kmeans
false.positives.kmeans <- data.frame(mvm = c(0), zt = c(0), mms = c(0))
for(z in 1:3){
counter <- 0
for (i in names.rdp.kmeans[[z]]) {
if (i %in% non.rdeep$Entry_Name) {
counter <- counter + 1
}
}
false.positives.kmeans[z] <- counter
}
# Number of correctly assigned non-RBPs (true negatives) with parameters
true.negatives.parameters <- data.frame(mvm = c(0), zt = c(0), mms = c(0))
for(z in 1:3){
counter <- 0
for (i in names.nrdp.parameters[[z]]) {
if (i %in% non.rdeep$Entry_Name) {
counter <- counter + 1
}
}
true.negatives.parameters[z] <- counter
}
# Number of correctly assigned non-RBPs (true negatives) with kmeans
true.negatives.kmeans <- data.frame(mvm = c(0), zt = c(0), mms = c(0))
for(z in 1:3){
counter <- 0
for (i in names.nrdp.kmeans[[z]]) {
if (i %in% non.rdeep$Entry_Name) {
counter <- counter + 1
}
}
true.negatives.kmeans[z] <- counter
}
# Number of wrongly assigned non-RBPs (true negatives) with parameters
false.negatives.parameters <- data.frame(mvm = c(0), zt = c(0), mms = c(0))
for(z in 1:3){
counter <- 0
for (i in names.nrdp.parameters[[z]]) {
if (i %in% rownames(rdeep)) {
counter <- counter + 1
}
}
false.negatives.parameters[z] <- counter
}
#Number of correctly assigned (true positives) RBPs with parameters
false.negatives.kmeans <- data.frame(mvm = c(0), zt = c(0), mms = c(0))
for(z in 1:3){
counter <- 0
for (i in names.nrdp.kmeans[[z]]) {
if (i %in% rownames(rdeep)) {
counter <- counter + 1
}
}
false.negatives.kmeans[z] <- counter
}
false.negatives.parameters
false.negatives.parameters
true.negatives.parameters
length(names.nrdp.kmeans[[1]])
fnr.parameters <- data.frame(mvm = c(0), zt = c(0), mms = c(0))
for (x in 1:3){
fnr.parameters[x] <- false.negatives.parameters[x]/(false.negatives.parameters[x] + true.positives.parameters[x])
}
fnr.kmeans <- data.frame(mvm = c(0), zt = c(0), mms = c(0))
for (x in 1:3){
fnr.kmeans[x] <- false.negatives.kmeans[x]/(false.negatives.kmeans[x] + true.positives.kmeans[x])
}
fnr.parameters
fnr.kmeans
fnr.parameters <- data.frame(mvm = c(0), zt = c(0), mms = c(0))
for(x in 1:3){
fnr.parameters[x] <- false.negatives.parameters[x]/(false.negatives.parameters[x] + true.positives.parameters[x])
}
fnr.kmeans <- data.frame(mvm = c(0), zt = c(0), mms = c(0))
for(x in 1:3){
fnr.kmeans[x] <- false.negatives.kmeans[x]/(false.negatives.kmeans[x] + true.positives.kmeans[x])
}
fnr.kmeans
fpr.parameters <- data.frame(mvm = c(0), zt = c(0), mms = c(0))
for(x in 1:3){
fpr.parameters[x] <- false.positives.parameters[x]/(false.positives.parameters[x]+true.negatives.parameters[x])
}
fpr.parameters
fpr.parameters <- data.frame(mvm = c(0), zt = c(0), mms = c(0))
for(x in 1:3){
fpr.parameters[x] <- false.positives.parameters[x]/(false.positives.parameters[x]+true.negatives.parameters[x])
}
fpr.kmeans <- data.frame(mvm = c(0), zt = c(0), mms = c(0))
for(x in 1:3){
fpr.kmeans[x] <- false.positives.kmeans[x]/(false.positives.kmeans[x]+true.negatives.kmeans[x])
}
fpr.parameters
fpr.kmeans
View(fpr.kmeans)
precision.parameters <- data.frame(mvm = c(0), zt = c(0), mms = c(0))
for(x in 1:3){
precision.parameters[x] <- true.positives.parameters[x]/(true.positives.parameters[x] + false.positives.parameters[x])
}
precision.kmeans <- data.frame(mvm = c(0), zt = c(0), mms = c(0))
for(x in 1:3){
precision.kmeans[x] <- true.positives.kmeans[x]/(true.positives.kmeans[x] + false.positives.kmeans[x])
}
precision.parameters
precision.kmeans
summary.parameters <- rbind(true.positives.parameters, false.positives.parameters, true.negatives.parameters, false.negatives.parameters, fnr.parameters , fpr.parameters, precision.parameters)
rownames(summary.parameters) = c("True Positives","False Positives", "True Negatives", "False Negatives", "FNR", "FPR", "Precision")
View(summary.parameters)
summary.numbers.parameters <- rbind(true.positives.parameters, false.positives.parameters, true.negatives.parameters, false.negatives.parameters)
rownames(summary.numbers.parameters) = c("True Positives","False Positives", "True Negatives", "False Negatives")
summary.rates.parameters <- rbind(fnr.parameters , fpr.parameters, precision.parameters)
rownames(summary.rates.parameters) = c("FNR", "FPR", "Precision")
View(summary.numbers.parameters)
View(summary.rates.parameters)
#for the results of our parameters
summary.numbers.parameters <- rbind(true.positives.parameters, false.positives.parameters, true.negatives.parameters, false.negatives.parameters)
rownames(summary.numbers.parameters) = c("True Positives","False Positives", "True Negatives", "False Negatives")
summary.rates.parameters <- rbind(fnr.parameters , fpr.parameters, precision.parameters)
rownames(summary.rates.parameters) = c("FNR", "FPR", "Precision")
View(summary.numbers.parameters)
View(summary.rates.parameters)
#for the results of kmeans
summary.numbers.kmeans <- rbind(true.positives.kmeans, false.positives.kmeans, true.negatives.kmeans, false.negatives.kmeans)
rownames(summary.numbers.parameters) = c("True Positives","False Positives", "True Negatives", "False Negatives")
summary.rates.kmeans <- rbind(fnr.kmeans , fpr.kmeans, precision.kmeans)
rownames(summary.rates.kmeans) = c("FNR", "FPR", "Precision")
View(summary.numbers.kmeans)
View(summary.rates.kmeans)
rownames(summary.numbers.kmeans) = c("True Positives","False Positives", "True Negatives", "False Negatives")
View(summary.numbers.kmeans)
which(!comp.mvm.parameters %in% non.rdeep$Entry_Name && !comp.mvm.parameters %in% rdeep$Entry_Name)
which(!comp.mvm.parameters %in% non.rdeep$Entry_Name & !comp.mvm.parameters %in% rdeep$Entry_Name)
which(!comp.mvm.parameters %in% non.rdeep$Entry_Name & !comp.mvm.parameters %in% rownames(rdeep))
rownames(comp.mvm.parameters)[which(!comp.mvm.parameters %in% non.rdeep$Entry_Name & !comp.mvm.parameters %in% rownames(rdeep))]
"SPB6_HUMAN" %in% non.rdeep$Entry_Name
"SPB6_HUMAN" %in% rownames(rdeep)
rownames(comp.mvm.parameters)[which(!(comp.mvm.parameters %in% non.rdeep$Entry_Name) & !(comp.mvm.parameters %in% rownames(rdeep)))]
"SPB6_HUMAN" %in% rownames(rdeep)
rownames(comp.mvm.parameters)[which(!(comp.mvm.parameters %in% non.rdeep$Entry_Name))]
rownames(comp.mvm.parameters)[which(!(comp.mvm.parameters %in% rownames(rdeep)))]
!(comp.mvm.parameters %in% non.rdeep$Entry_Name)
comp.mvm.parameters
rownames(comp.mvm.parameters)[which(!(rownames(comp.mvm.parameters) %in% non.rdeep$Entry_Name))]
rownames(comp.mvm.parameters)[which(!(rownames(comp.mvm.parameters) %in% rownames(rdeep)))]
rownames(comp.mvm.parameters)[which(!(rownames(comp.mvm.parameters) %in% non.rdeep$Entry_Name) & (!(rownames(comp.mvm.parameters) %in% rownames(rdeep))))]
non.comparable.kmeans <- rownames(comp.mvm.kmeans)[which(!(rownames(comp.mvm.kmeans) %in% non.rdeep$Entry_Name) & (!(rownames(comp.mvm.kmeans) %in% rownames(rdeep))))]
non.comparable.kmeans
non.comparable.kmeans
non.comparable.parameters
non.comparable.parameters <- rownames(comp.mvm.parameters)[which(!(rownames(comp.mvm.parameters) %in% non.rdeep$Entry_Name) & (!(rownames(comp.mvm.parameters) %in% rownames(rdeep))))]
non.comparable.kmeans
non.comparable.parameters
non.comparable.mvm.parameters <- rownames(comp.mvm.parameters)[which(!(rownames(comp.mvm.parameters) %in% non.rdeep$Entry_Name) & (!(rownames(comp.mvm.parameters) %in% rownames(rdeep))))]
non.comparable.zt.parameters <- rownames(comp.zt.parameters)[which(!(rownames(comp.zt.parameters) %in% non.rdeep$Entry_Name) & (!(rownames(comp.zt.parameters) %in% rownames(rdeep))))]
non.comparable.mms.parameters <- rownames(comp.mms.parameters)[which(!(rownames(comp.mms.parameters) %in% non.rdeep$Entry_Name) & (!(rownames(comp.mms.parameters) %in% rownames(rdeep))))]
non.comparable.mvm.kmeans <- rownames(comp.mvm.kmeans)[which(!(rownames(comp.mvm.kmeans) %in% non.rdeep$Entry_Name) & (!(rownames(comp.mvm.kmeans) %in% rownames(rdeep))))]
non.comparable.zt.kmeans <- rownames(comp.zt.kmeans)[which(!(rownames(comp.zt.kmeans) %in% non.rdeep$Entry_Name) & (!(rownames(comp.zt.kmeans) %in% rownames(rdeep))))]
non.comparable.mms.kmeans <- rownames(comp.mms.kmeans)[which(!(rownames(comp.mms.kmeans) %in% non.rdeep$Entry_Name) & (!(rownames(comp.mms.kmeans) %in% rownames(rdeep))))]
non.comparable.parameters <- data.frame(mvm = length(non.comparable.mvm.parameters), zt = length(non.comparable.zt.parameters), mms = length(non.comparable.mms.parameters))
non.comparable.kmeans <- data.frame(mvm = length(non.comparable.mvm.kmeans), zt = length(non.comparable.zt.kmeans), mms = length(non.comparable.mms.kmeans))
non.comparable.parameters
non.comparable.kmeans
non.comparable.mvm.parameters <- rownames(comp.mvm.parameters)[which(!(rownames(comp.mvm.parameters) %in% non.rdeep$Entry_Name) & (!(rownames(comp.mvm.parameters) %in% rownames(rdeep))))]
non.comparable.zt.parameters <- rownames(comp.zt.parameters)[which(!(rownames(comp.zt.parameters) %in% non.rdeep$Entry_Name) & (!(rownames(comp.zt.parameters) %in% rownames(rdeep))))]
non.comparable.mms.parameters <- rownames(comp.mms.parameters)[which(!(rownames(comp.mms.parameters) %in% non.rdeep$Entry_Name) & (!(rownames(comp.mms.parameters) %in% rownames(rdeep))))]
non.comparable.mvm.kmeans <- rownames(comp.mvm.kmeans)[which(!(rownames(comp.mvm.kmeans) %in% non.rdeep$Entry_Name) & (!(rownames(comp.mvm.kmeans) %in% rownames(rdeep))))]
non.comparable.zt.kmeans <- rownames(comp.zt.kmeans)[which(!(rownames(comp.zt.kmeans) %in% non.rdeep$Entry_Name) & (!(rownames(comp.zt.kmeans) %in% rownames(rdeep))))]
non.comparable.mms.kmeans <- rownames(comp.mms.kmeans)[which(!(rownames(comp.mms.kmeans) %in% non.rdeep$Entry_Name) & (!(rownames(comp.mms.kmeans) %in% rownames(rdeep))))]
non.comparable.parameters <- data.frame(mvm = c(non.comparable.mvm.parameters, length(non.comparable.mvm.parameters)),
zt = c(non.comparable.zt.parameters, length(non.comparable.zt.parameters)),
mms = c(non.comparable.mms.parameters,length(non.comparable.mms.parameters)))
non.comparable.kmeans <- data.frame(mvm = c(non.comparable.mvm.kmeans, length(non.comparable.mvm.kmeans)),
zt = c(non.comparable.zt.kmeans, length(non.comparable.zt.kmeans)),
mms = c(non.comparable.mms.kmeans, length(non.comparable.mms.kmeans)))
non.comparable.parameters
non.comparable.kmeans
number.non.comparable.parameters <- data.frame(mvm = length(non.comparable.mvm.parameters),
zt = length(non.comparable.zt.parameters),
mms = length(non.comparable.mms.parameters))
number.non.comparable.kmeans <- data.frame(mvm = length(non.comparable.mvm.kmeans),
zt = length(non.comparable.zt.kmeans),
mms = length(non.comparable.mms.kmeans))
number.non.comparable.kmeans
number.non.comparable.parameters
#shifting?
non.comparable.mvm.parameters <- comp.mvm.parameters[which(!(rownames(comp.mvm.parameters) %in% non.rdeep$Entry_Name) & (!(rownames(comp.mvm.parameters) %in% rownames(rdeep))))]
#shifting?
non.comparable.mvm.parameters <- comp.mvm.parameters[which(!(rownames(comp.mvm.parameters) %in% non.rdeep$Entry_Name) & (!(rownames(comp.mvm.parameters) %in% rownames(rdeep)))),]
non.comparable.mvm.parameters
#shifting?
non.comparable.mvm.parameters <- sum(comp.mvm.parameters[which(!(rownames(comp.mvm.parameters) %in% non.rdeep$Entry_Name) & (!(rownames(comp.mvm.parameters) %in% rownames(rdeep)))),])
non.comparable.mvm.parameters
non.comparable.parameters <- data.frame(mvm = c(non.comparable.mvm.parameters, length(non.comparable.mvm.parameters)),
shift?. = shifting.non.comparable.mvm.parameters,
non.comparable.parameters <- data.frame(mvm = c(non.comparable.mvm.parameters, length(non.comparable.mvm.parameters)),
"is shift? mvm" = shifting.non.comparable.mvm.parameters,
zt = c(non.comparable.zt.parameters, length(non.comparable.zt.parameters)),
"is shift? zt" = shifting.non.comparable.zt.parameters,
mms = c(non.comparable.mms.parameters,length(non.comparable.mms.parameters)),
"is shift? mms" = shifting.non.comparable.mms.parameters)
#shifting?
shifting.non.comparable.mvm.parameters <- comp.mvm.parameters[which(!(rownames(comp.mvm.parameters) %in% non.rdeep$Entry_Name) & (!(rownames(comp.mvm.parameters) %in% rownames(rdeep)))),]
shifting.non.comparable.mms.parameters <- comp.mms.parameters[which(!(rownames(comp.mms.parameters) %in% non.rdeep$Entry_Name) & (!(rownames(comp.mms.parameters) %in% rownames(rdeep))))]
#shifting?
shifting.non.comparable.mvm.parameters <- comp.mvm.parameters[which(!(rownames(comp.mvm.parameters) %in% non.rdeep$Entry_Name) & (!(rownames(comp.mvm.parameters) %in% rownames(rdeep)))),]
shifting.non.comparable.zt.parameters <- comp.zt.parameters[which(!(rownames(comp.zt.parameters) %in% non.rdeep$Entry_Name) & (!(rownames(comp.zt.parameters) %in% rownames(rdeep)))),]
shifting.non.comparable.mms.parameters <- comp.mms.parameters[which(!(rownames(comp.mms.parameters) %in% non.rdeep$Entry_Name) & (!(rownames(comp.mms.parameters) %in% rownames(rdeep)))),]
non.comparable.parameters <- data.frame(mvm = c(non.comparable.mvm.parameters, length(non.comparable.mvm.parameters)),
"is shift? mvm" = shifting.non.comparable.mvm.parameters,
zt = c(non.comparable.zt.parameters, length(non.comparable.zt.parameters)),
"is shift? zt" = shifting.non.comparable.zt.parameters,
mms = c(non.comparable.mms.parameters,length(non.comparable.mms.parameters)),
"is shift? mms" = shifting.non.comparable.mms.parameters)
non.comparable.parameters <- data.frame(mvm = c(non.comparable.mvm.parameters, length(non.comparable.mvm.parameters)),
"is shift? mvm" = c(shifting.non.comparable.mvm.parameters, "-"),
zt = c(non.comparable.zt.parameters, length(non.comparable.zt.parameters)),
"is shift? zt" = c(shifting.non.comparable.zt.parameters, "-"),
mms = c(non.comparable.mms.parameters,length(non.comparable.mms.parameters)),
"is shift? mms" = c(shifting.non.comparable.mms.parameters, "-"))
View(non.comparable.parameters)
non.comparable.mvm.parameters <- rownames(comp.mvm.parameters)[which(!(rownames(comp.mvm.parameters) %in% non.rdeep$Entry_Name) & (!(rownames(comp.mvm.parameters) %in% rownames(rdeep))))]
non.comparable.parameters <- data.frame(mvm = c(non.comparable.mvm.parameters, length(non.comparable.mvm.parameters)),
"is shift? mvm" = c(shifting.non.comparable.mvm.parameters, "-"),
zt = c(non.comparable.zt.parameters, length(non.comparable.zt.parameters)),
"is shift? zt" = c(shifting.non.comparable.zt.parameters, "-"),
mms = c(non.comparable.mms.parameters,length(non.comparable.mms.parameters)),
"is shift? mms" = c(shifting.non.comparable.mms.parameters, "-"))
View(non.comparable.parameters)
non.comparable.parameters <- data.frame(mvm = c(non.comparable.mvm.parameters, length(non.comparable.mvm.parameters)),
"is shift? mvm" = c(shifting.non.comparable.mvm.parameters, sum(shifting.non.comparable.mvm.parameters)),
zt = c(non.comparable.zt.parameters, length(non.comparable.zt.parameters)),
"is shift? zt" = c(shifting.non.comparable.zt.parameters, sum(shifting.non.comparable.zt.parameters)),
mms = c(non.comparable.mms.parameters,length(non.comparable.mms.parameters)),
"is shift? mms" = c(shifting.non.comparable.mms.parameters, sum(shifting.non.comparable.mms.parameters)))
View(non.comparable.parameters)
non.comparable.mvm.parameters <- rownames(comp.mvm.parameters)[which(!(rownames(comp.mvm.parameters) %in% non.rdeep$Entry_Name) & (!(rownames(comp.mvm.parameters) %in% rownames(rdeep))))]
non.comparable.zt.parameters <- rownames(comp.zt.parameters)[which(!(rownames(comp.zt.parameters) %in% non.rdeep$Entry_Name) & (!(rownames(comp.zt.parameters) %in% rownames(rdeep))))]
non.comparable.mms.parameters <- rownames(comp.mms.parameters)[which(!(rownames(comp.mms.parameters) %in% non.rdeep$Entry_Name) & (!(rownames(comp.mms.parameters) %in% rownames(rdeep))))]
non.comparable.mvm.kmeans <- rownames(comp.mvm.kmeans)[which(!(rownames(comp.mvm.kmeans) %in% non.rdeep$Entry_Name) & (!(rownames(comp.mvm.kmeans) %in% rownames(rdeep))))]
non.comparable.zt.kmeans <- rownames(comp.zt.kmeans)[which(!(rownames(comp.zt.kmeans) %in% non.rdeep$Entry_Name) & (!(rownames(comp.zt.kmeans) %in% rownames(rdeep))))]
non.comparable.mms.kmeans <- rownames(comp.mms.kmeans)[which(!(rownames(comp.mms.kmeans) %in% non.rdeep$Entry_Name) & (!(rownames(comp.mms.kmeans) %in% rownames(rdeep))))]
#shifting?
shifting.non.comparable.mvm.parameters <- comp.mvm.parameters[which(!(rownames(comp.mvm.parameters) %in% non.rdeep$Entry_Name) & (!(rownames(comp.mvm.parameters) %in% rownames(rdeep)))),]
shifting.non.comparable.zt.parameters <- comp.zt.parameters[which(!(rownames(comp.zt.parameters) %in% non.rdeep$Entry_Name) & (!(rownames(comp.zt.parameters) %in% rownames(rdeep)))),]
shifting.non.comparable.mms.parameters <- comp.mms.parameters[which(!(rownames(comp.mms.parameters) %in% non.rdeep$Entry_Name) & (!(rownames(comp.mms.parameters) %in% rownames(rdeep)))),]
non.comparable.parameters <- data.frame(mvm = c(non.comparable.mvm.parameters, length(non.comparable.mvm.parameters)),
"is shift? mvm" = c(shifting.non.comparable.mvm.parameters,
sum(shifting.non.comparable.mvm.parameters)),
zt = c(non.comparable.zt.parameters, length(non.comparable.zt.parameters)),
"is shift? zt" = c(shifting.non.comparable.zt.parameters,
sum(shifting.non.comparable.zt.parameters)),
mms = c(non.comparable.mms.parameters,length(non.comparable.mms.parameters)),
"is shift? mms" = c(shifting.non.comparable.mms.parameters,
sum(shifting.non.comparable.mms.parameters)))
non.comparable.kmeans <- data.frame(mvm = c(non.comparable.mvm.kmeans, length(non.comparable.mvm.kmeans)),
"is shift? mvm" = c(shifting.non.comparable.mvm.kmeans,
sum(shifting.non.comparable.mvm.kmeans)),
zt = c(non.comparable.zt.kmeans, length(non.comparable.zt.kmeans)),
"is shift? zt" = c(shifting.non.comparable.zt.kmeans,
sum(shifting.non.comparable.zt.kmeans)),
mms = c(non.comparable.mms.kmeans,length(non.comparable.mms.kmeans)),
"is shift? mms" = c(shifting.non.comparable.mms.kmeans,
sum(shifting.non.comparable.mms.kmeans)))
non.comparable.mvm.parameters <- rownames(comp.mvm.parameters)[which(!(rownames(comp.mvm.parameters) %in% non.rdeep$Entry_Name) & (!(rownames(comp.mvm.parameters) %in% rownames(rdeep))))]
non.comparable.zt.parameters <- rownames(comp.zt.parameters)[which(!(rownames(comp.zt.parameters) %in% non.rdeep$Entry_Name) & (!(rownames(comp.zt.parameters) %in% rownames(rdeep))))]
non.comparable.mms.parameters <- rownames(comp.mms.parameters)[which(!(rownames(comp.mms.parameters) %in% non.rdeep$Entry_Name) & (!(rownames(comp.mms.parameters) %in% rownames(rdeep))))]
non.comparable.mvm.kmeans <- rownames(comp.mvm.kmeans)[which(!(rownames(comp.mvm.kmeans) %in% non.rdeep$Entry_Name) & (!(rownames(comp.mvm.kmeans) %in% rownames(rdeep))))]
non.comparable.zt.kmeans <- rownames(comp.zt.kmeans)[which(!(rownames(comp.zt.kmeans) %in% non.rdeep$Entry_Name) & (!(rownames(comp.zt.kmeans) %in% rownames(rdeep))))]
non.comparable.mms.kmeans <- rownames(comp.mms.kmeans)[which(!(rownames(comp.mms.kmeans) %in% non.rdeep$Entry_Name) & (!(rownames(comp.mms.kmeans) %in% rownames(rdeep))))]
#shifting?
shifting.non.comparable.mvm.parameters <- comp.mvm.parameters[which(!(rownames(comp.mvm.parameters) %in% non.rdeep$Entry_Name) & (!(rownames(comp.mvm.parameters) %in% rownames(rdeep)))),]
shifting.non.comparable.zt.parameters <- comp.zt.parameters[which(!(rownames(comp.zt.parameters) %in% non.rdeep$Entry_Name) & (!(rownames(comp.zt.parameters) %in% rownames(rdeep)))),]
shifting.non.comparable.mms.parameters <- comp.mms.parameters[which(!(rownames(comp.mms.parameters) %in% non.rdeep$Entry_Name) & (!(rownames(comp.mms.parameters) %in% rownames(rdeep)))),]
shifting.non.comparable.mvm.kmeans <- comp.mvm.kmeans[which(!(rownames(comp.mvm.kmeans) %in% non.rdeep$Entry_Name) & (!(rownames(comp.mvm.kmeans) %in% rownames(rdeep)))),]
shifting.non.comparable.zt.kmeans <- comp.zt.kmeans[which(!(rownames(comp.zt.kmeans) %in% non.rdeep$Entry_Name) & (!(rownames(comp.zt.kmeans) %in% rownames(rdeep)))),]
shifting.non.comparable.mms.kmeans <- comp.mms.kmeans[which(!(rownames(comp.mms.kmeans) %in% non.rdeep$Entry_Name) & (!(rownames(comp.mms.kmeans) %in% rownames(rdeep)))),]
non.comparable.parameters <- data.frame(mvm = c(non.comparable.mvm.parameters, length(non.comparable.mvm.parameters)),
"is shift? mvm" = c(shifting.non.comparable.mvm.parameters,
sum(shifting.non.comparable.mvm.parameters)),
zt = c(non.comparable.zt.parameters, length(non.comparable.zt.parameters)),
"is shift? zt" = c(shifting.non.comparable.zt.parameters,
sum(shifting.non.comparable.zt.parameters)),
mms = c(non.comparable.mms.parameters,length(non.comparable.mms.parameters)),
"is shift? mms" = c(shifting.non.comparable.mms.parameters,
sum(shifting.non.comparable.mms.parameters)))
non.comparable.kmeans <- data.frame(mvm = c(non.comparable.mvm.kmeans, length(non.comparable.mvm.kmeans)),
"is shift? mvm" = c(shifting.non.comparable.mvm.kmeans,
sum(shifting.non.comparable.mvm.kmeans)),
zt = c(non.comparable.zt.kmeans, length(non.comparable.zt.kmeans)),
"is shift? zt" = c(shifting.non.comparable.zt.kmeans,
sum(shifting.non.comparable.zt.kmeans)),
mms = c(non.comparable.mms.kmeans,length(non.comparable.mms.kmeans)),
"is shift? mms" = c(shifting.non.comparable.mms.kmeans,
sum(shifting.non.comparable.mms.kmeans)))
number.non.comparable.parameters <- data.frame(mvm = length(non.comparable.mvm.parameters),
zt = length(non.comparable.zt.parameters),
mms = length(non.comparable.mms.parameters))
number.non.comparable.kmeans <- data.frame(mvm = length(non.comparable.mvm.kmeans),
zt = length(non.comparable.zt.kmeans),
mms = length(non.comparable.mms.kmeans))
View(non.comparable.parameters)
View(non.comparable.kmeans)
