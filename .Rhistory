for (x in 0:(d+3)){
df.loc.sum[x+1,2] <-
sum(as.numeric(df.loc[which(sum_parameters == x),]))}
df.shift <- as.data.frame(parameters[,d+2])
df.shift.sum <- as.data.frame(c)
for (x in 0:(d+3)){
df.shift.sum[x+1,2] <-
sum(as.numeric(df.shift[which(sum_parameters == x),]))}
df.shoulder <- as.data.frame(parameters[,d+3])
df.shoulder.sum <- as.data.frame(c)
for (x in 0:(d+3)){
df.shoulder.sum[x+1,2] <-
sum(df.shoulder[which(sum_parameters == x),])}
df.sum <- as.data.frame(sum_parameters)
df.sum.sum <- as.data.frame(c)
for (x in 0:(d+3)){
df.sum.sum[x+1,2] <- sum(sum_parameters == x)}
if (z != 3){
df2 <- data.frame(category = c(df.glob.sum[,1], df.loc.sum[,1],
df.shift.sum[,1], df.shoulder.sum[,1],
df.sum.sum[,1]),
value = c(df.glob.sum[,2], df.loc.sum[,2],
df.shift.sum[,2], df.shoulder.sum[,2],
df.sum.sum[,2]),
parameters = c(rep(c("glob", "loc", "shift",
"shoulder", "sum"),
each = 5)))
}else{
df2 <- data.frame(category = c(df.loc.sum[,1], df.shift.sum[,1],
df.shoulder.sum[,1],df.sum.sum[,1]),
value = c(df.loc.sum[,2], df.shift.sum[,2],
df.shoulder.sum[,2], df.sum.sum[,2]),
parameters = c(rep(c("loc", "shift", "shoulder",
"sum"), each = 4)))
}
if(z == 3){
colour <- c("cyan", "violetred", "springgreen", "grey" )
}else{colour <- c("cyan", "violetred", "springgreen","orange", "grey" )}
plot.parameters.detail[[z]] <-
ggplot(df2, aes(x = category, y = value, fill = parameters))+
geom_bar(stat = "identity", position = position_dodge(width = 0.9), fill = colour)+
theme_bw()+
geom_text(aes(label = value),
vjust = -0.5,
position = position_dodge(width = 0.9),
size = 2)+
labs(x = "number of parameters pro shift",
y = "number of proteins",
title = title[[z]])
print(plot.parameters.detail[[z]])
}
plot.parameters.detail[[z]] <-
ggplot(df2, aes(x = category, y = value, fill = parameters))+
geom_bar(stat = "identity", position = position_dodge(width = 0.9), col = colour)+
theme_bw()+
geom_text(aes(label = value),
vjust = -0.5,
position = position_dodge(width = 0.9),
size = 2)+
labs(x = "number of parameters pro shift",
y = "number of proteins",
title = title[[z]])
print(plot.parameters.detail[[z]])
library(ggplot2)
library(ggpubr)
parameters.all <- list(parameters.mvm, parameters.zt, parameters.mms)
plot.parameters.detail <- list()
for (z in 1:3){
parameters <- parameters.all[[z]]
if(z == 3){
g <- 2
}else{g <- 3}
for (y in 1:dim(parameters)[1]){
if (parameters[y,g] == "no shift"){
parameters[y,g] <- 0
} else{parameters[y,g] <- 1}
}
parameters.m <- as.matrix(parameters)
sum_parameters <- apply(parameters.m, 1, function(x){
sum(as.numeric(x))})
df <- as.data.frame(sum_parameters)
title <- c("How many parameters support the proteins? MVM",
"How many parameters support the proteins? z-Transformation",
"How many parameters support the proteins? MMS")
if(z == 3){
c <- c(0,1,2,3)
}else{c<- c(0,1,2,3,4)}
if(z == 3){
d <- 0
}
else {d <- 1}
if (z != 3){
df.glob <- as.data.frame(parameters[,d])
df.glob.sum <- as.data.frame(c)
for (x in 0:4){
df.glob.sum[x+1,2] <- sum(df.glob[which(sum_parameters == x),])}}
df.loc <- as.data.frame(parameters[,d+1])
df.loc.sum <- as.data.frame(c)
for (x in 0:(d+3)){
df.loc.sum[x+1,2] <-
sum(as.numeric(df.loc[which(sum_parameters == x),]))}
df.shift <- as.data.frame(parameters[,d+2])
df.shift.sum <- as.data.frame(c)
for (x in 0:(d+3)){
df.shift.sum[x+1,2] <-
sum(as.numeric(df.shift[which(sum_parameters == x),]))}
df.shoulder <- as.data.frame(parameters[,d+3])
df.shoulder.sum <- as.data.frame(c)
for (x in 0:(d+3)){
df.shoulder.sum[x+1,2] <-
sum(df.shoulder[which(sum_parameters == x),])}
df.sum <- as.data.frame(sum_parameters)
df.sum.sum <- as.data.frame(c)
for (x in 0:(d+3)){
df.sum.sum[x+1,2] <- sum(sum_parameters == x)}
if (z != 3){
df2 <- data.frame(category = c(df.glob.sum[,1], df.loc.sum[,1],
df.shift.sum[,1], df.shoulder.sum[,1],
df.sum.sum[,1]),
value = c(df.glob.sum[,2], df.loc.sum[,2],
df.shift.sum[,2], df.shoulder.sum[,2],
df.sum.sum[,2]),
parameters = c(rep(c("glob", "loc", "shift",
"shoulder", "sum"),
each = 5)))
}else{
df2 <- data.frame(category = c(df.loc.sum[,1], df.shift.sum[,1],
df.shoulder.sum[,1],df.sum.sum[,1]),
value = c(df.loc.sum[,2], df.shift.sum[,2],
df.shoulder.sum[,2], df.sum.sum[,2]),
parameters = c(rep(c("loc", "shift", "shoulder",
"sum"), each = 4)))
}
if(z == 3){
colour <- c("cyan", "violetred", "springgreen", "grey" )
}else{colour <- c("cyan", "violetred", "springgreen","orange", "grey" )}
plot.parameters.detail[[z]] <-
ggplot(df2, aes(x = category, y = value, fill = parameters))+
geom_bar(stat = "identity", position = position_dodge(width = 0.9))+
theme_bw()+
geom_text(aes(label = value),
vjust = -0.5,
position = position_dodge(width = 0.9),
size = 2)+
labs(x = "number of parameters pro shift",
y = "number of proteins",
title = title[[z]])+
scale_fill_manual(values = colour)
print(plot.parameters.detail[[z]])
}
library(ggplot2)
library(ggpubr)
parameters.all <- list(parameters.mvm, parameters.zt, parameters.mms)
plot.parameters.detail <- list()
for (z in 1:3){
parameters <- parameters.all[[z]]
if(z == 3){
g <- 2
}else{g <- 3}
for (y in 1:dim(parameters)[1]){
if (parameters[y,g] == "no shift"){
parameters[y,g] <- 0
} else{parameters[y,g] <- 1}
}
parameters.m <- as.matrix(parameters)
sum_parameters <- apply(parameters.m, 1, function(x){
sum(as.numeric(x))})
df <- as.data.frame(sum_parameters)
title <- c("How many parameters support the proteins? MVM",
"How many parameters support the proteins? z-Transformation",
"How many parameters support the proteins? MMS")
if(z == 3){
c <- c(0,1,2,3)
}else{c<- c(0,1,2,3,4)}
if(z == 3){
d <- 0
}
else {d <- 1}
if (z != 3){
df.glob <- as.data.frame(parameters[,d])
df.glob.sum <- as.data.frame(c)
for (x in 0:4){
df.glob.sum[x+1,2] <- sum(df.glob[which(sum_parameters == x),])}}
df.loc <- as.data.frame(parameters[,d+1])
df.loc.sum <- as.data.frame(c)
for (x in 0:(d+3)){
df.loc.sum[x+1,2] <-
sum(as.numeric(df.loc[which(sum_parameters == x),]))}
df.shift <- as.data.frame(parameters[,d+2])
df.shift.sum <- as.data.frame(c)
for (x in 0:(d+3)){
df.shift.sum[x+1,2] <-
sum(as.numeric(df.shift[which(sum_parameters == x),]))}
df.shoulder <- as.data.frame(parameters[,d+3])
df.shoulder.sum <- as.data.frame(c)
for (x in 0:(d+3)){
df.shoulder.sum[x+1,2] <-
sum(df.shoulder[which(sum_parameters == x),])}
df.sum <- as.data.frame(sum_parameters)
df.sum.sum <- as.data.frame(c)
for (x in 0:(d+3)){
df.sum.sum[x+1,2] <- sum(sum_parameters == x)}
if (z != 3){
df2 <- data.frame(category = c(df.glob.sum[,1], df.loc.sum[,1],
df.shift.sum[,1], df.shoulder.sum[,1],
df.sum.sum[,1]),
value = c(df.glob.sum[,2], df.loc.sum[,2],
df.shift.sum[,2], df.shoulder.sum[,2],
df.sum.sum[,2]),
parameters = c(rep(c("glob", "loc", "shift",
"shoulder", "sum"),
each = 5)))
}else{
df2 <- data.frame(category = c(df.loc.sum[,1], df.shift.sum[,1],
df.shoulder.sum[,1],df.sum.sum[,1]),
value = c(df.loc.sum[,2], df.shift.sum[,2],
df.shoulder.sum[,2], df.sum.sum[,2]),
parameters = c(rep(c("loc", "shift", "shoulder",
"sum"), each = 4)))
}
if(z == 3){
colour <- c("cyan", "orange","springgreen", "violetred" )
}else{colour <- c("cyan", "orange", "springgreen", "grey", "violetred" )}
plot.parameters.detail[[z]] <-
ggplot(df2, aes(x = category, y = value, fill = parameters))+
geom_bar(stat = "identity", position = position_dodge(width = 0.9))+
theme_bw()+
geom_text(aes(label = value),
vjust = -0.5,
position = position_dodge(width = 0.9),
size = 2)+
labs(x = "number of parameters pro shift",
y = "number of proteins",
title = title[[z]])+
scale_fill_manual(values = colour)
print(plot.parameters.detail[[z]])
}
library("ggpubr")
library("factoextra")
library("ggplot2")
df.peaks <- data.frame(cbind(globalpeak.ctrl.mvm, globalpeak.rnase.mvm, globalpeak.ctrl.zt, globalpeak.rnase.zt, globalpeak.ctrl.mms, globalpeak.rnase.mms))
plot.cluster.fractions <- list()
title <- c("Clusters of Peaks calculated after MVM","Clusters of Peaks calculated after z-Transformation", "Clusters of Peaks calculated after MMS")
for (x in 1:3){
df <- df.peaks[,(2*x -1):(2*x)]
set.seed(666)
res.km <- kmeans(scale(df[, -5]), 3, nstart = 25)
#for (y in 1:length(res.km$cluster)){
#if (res.km$cluster[y] == 1){
#res.km$cluster[y] <- "Light Proteins"
#}
#if (res.km$cluster[y] == 2){
#res.km$cluster[y] <- "Heavy Proteins"
#}
#if (res.km$cluster[y] == 3){
#res.km$cluster[y] <- "Medium Proteins"
#}}
g <- fviz_cluster(res.km, data = df,
geom = "point",
xlab = "Global Control Peaks",
ylab = "Global RNase Peaks",
main = title[x],
ggtheme = theme_bw())
plot.cluster.fractions[[x]] <- g + theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank())
print(plot.cluster.fractions[[x]])
}
library("ggpubr")
library("factoextra")
library("ggplot2")
df.peaks <- data.frame(cbind(globalpeak.ctrl.mvm, globalpeak.rnase.mvm, globalpeak.ctrl.zt, globalpeak.rnase.zt, globalpeak.ctrl.mms, globalpeak.rnase.mms))
plot.cluster.fractions <- list()
title <- c("Clusters of Peaks calculated after MVM","Clusters of Peaks calculated after z-Transformation", "Clusters of Peaks calculated after MMS")
for (x in 1:3){
df <- df.peaks[,(2*x -1):(2*x)]
set.seed(666)
res.km <- kmeans(scale(df[, -5]), 4, nstart = 25)
#for (y in 1:length(res.km$cluster)){
#if (res.km$cluster[y] == 1){
#res.km$cluster[y] <- "Light Proteins"
#}
#if (res.km$cluster[y] == 2){
#res.km$cluster[y] <- "Heavy Proteins"
#}
#if (res.km$cluster[y] == 3){
#res.km$cluster[y] <- "Medium Proteins"
#}}
g <- fviz_cluster(res.km, data = df,
geom = "point",
xlab = "Global Control Peaks",
ylab = "Global RNase Peaks",
main = title[x],
ggtheme = theme_bw())
plot.cluster.fractions[[x]] <- g + theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank())
print(plot.cluster.fractions[[x]])
}
library("ggpubr")
library("factoextra")
library("ggplot2")
df.peaks <- data.frame(cbind(globalpeak.ctrl.mvm, globalpeak.rnase.mvm, globalpeak.ctrl.zt, globalpeak.rnase.zt, globalpeak.ctrl.mms, globalpeak.rnase.mms))
plot.cluster.fractions <- list()
title <- c("Clusters of Peaks calculated after MVM","Clusters of Peaks calculated after z-Transformation", "Clusters of Peaks calculated after MMS")
for (x in 1:3){
df <- df.peaks[,(2*x -1):(2*x)]
set.seed(666)
res.km <- kmeans(scale(df[, -5]), 4, nstart = 25)
#for (y in 1:length(res.km$cluster)){
#if (res.km$cluster[y] == 1){
#res.km$cluster[y] <- "Light Proteins"
#}
#if (res.km$cluster[y] == 2){
#res.km$cluster[y] <- "Heavy Proteins"
#}
#if (res.km$cluster[y] == 3){
#res.km$cluster[y] <- "Medium Proteins"
#}}
g <- fviz_cluster(res.km, data = df,
geom = "point",
xlab = "Global Control Peaks",
ylab = "Global RNase Peaks",
main = title[x],
ggtheme = theme_bw())
plot.cluster.fractions[[x]] <- g + theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank())
print(plot.cluster.fractions[[x]])
}
shift_named <- cbind(shift_mvm_named, shift_zt_named, shift_mms_named)
plots_RBP <- list()
library("ggplot2")
for (x in 1:3){
col <- c("springgreen", "cyan", "violetred1", "orange")
vjust <- c(-0.5, 1, -0.5, -0.5)
labels <- c("left shift", "no shift", "precipitated", "right shift")
title <- c("Shifttypes Mean Value Method", "Shifttypes z-Transformation", "Shifttypes Min-Max-Scaling")
peaks <- data.frame(peak.ctrl, peak.rnase, shift_named[,x])
number.of.clusters <- data.frame(value = shift_named[,x])
peaks$cluster <- factor(shift_named[,x])
dot.plot <- ggplot(peaks, aes(peak.ctrl,peak.rnase)) +
geom_point(aes(colour = shift_named[,x]),
shape = 19,
alpha = 0.5, size = 1.5,
position = position_jitter(width = 0.1, height = 0.1))+
labs(x = "Fraction of Control Peak",
y = "Fraction of RNase Peak",
title = title[x])+
coord_equal()+
scale_colour_manual(values = col,labels = labels, name = "shifttypes")+
theme_light()
bar.plot <- ggplot(number.of.clusters, aes(factor(value)))+
geom_bar(fill = col, width = 0.5)+
theme_minimal()+
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid = element_blank(),
panel.border = element_rect(color = "grey", fill = NA),
panel.background = element_rect(fill = "white", colour = NA))+
geom_text(stat = 'count',
aes(label = after_stat(count)),
vjust = vjust,
size = 2.5)
plot_RBP[[x]] <- dot.plot + annotation_custom(grob = ggplotGrob(bar.plot),
xmin = 15,
xmax = 26.75,
ymin = -1,
ymax = 8)
print(plot_RBP[[x]])
}
#print(plot_RBP[[1]])
parameters.all <- list(parameters.mvm, parameters.zt, parameters.mms)
shift.vector.all <- list()
for (z in 1:3){
parameters <- parameters.all[[z]]
if(z == 3){
g <- 2
}else{g <- 3}
for (y in 1:dim(parameters)[1]){
if (parameters[y,g] == "no shift"){
parameters[y,g] <- 0
} else{parameters[y,g] <- 1}
}
parameters.m <- as.matrix(parameters)
sum_parameters <- apply(parameters.m, 1, function(x){
sum(as.numeric(x))})
if(z == 3){
c <- c(0,1,2,3)
}else{c<- c(0,1,2,3,4)}
if(z == 3){
d <- 0
}
else {d <- 1}
df.shift <- as.data.frame(parameters[,d+2])
df.shift.sum <- as.data.frame(c)
for (x in 0:(d+3)){
df.shift.sum[x+1,2] <-
sum(as.numeric(df.shift[which(sum_parameters == x),]))}
df.sum <- as.data.frame(sum_parameters)
df.sum.sum <- as.data.frame(c)
for (x in 0:(d+3)){
df.sum.sum[x+1,2] <- sum(sum_parameters == x)}
shift.vektor <- c()
for (x in 1:3074){
if(sum_parameters[x] == 2 || sum_parameters[x] == 3 ||
sum_parameters[x] == 4 || as.numeric(df.shift[x,1]) == 1){
shift.vektor[x] <- 1
}else{shift.vektor[x] <- 0}}
vector <- c()
for (x in 1:3074){
if(sum_parameters[x] == 2 || sum_parameters[x] == 3 ||
sum_parameters[x] == 4 || as.numeric(df.shift[x,1]) == 1){
vector[x] <- 1
}else{vector[x] <- 0}}
shift.vector.all[[z]] <- vector}
shift.vector.mvm <- shift.vector.all[[1]]
shift.vector.zt <- shift.vector.all[[2]]
shift.vector.mms <- shift.vector.all[[3]]
sum(shift.vector.mvm ==1)
sum(shift.vector.zt ==1)
sum(shift.vector.mms ==1)
parameters.all <- list(parameters.mvm, parameters.zt, parameters.mms)
shift.vector.all <- list()
for (z in 1:3){
parameters <- parameters.all[[z]]
if(z == 3){
g <- 2
}else{g <- 3}
for (y in 1:dim(parameters)[1]){
if (parameters[y,g] == "no shift"){
parameters[y,g] <- 0
} else{parameters[y,g] <- 1}
}
parameters.m <- as.matrix(parameters)
sum_parameters <- apply(parameters.m, 1, function(x){
sum(as.numeric(x))})
if(z == 3){
c <- c(0,1,2,3)
}else{c<- c(0,1,2,3,4)}
if(z == 3){
d <- 0
}
else {d <- 1}
df.shift <- as.data.frame(parameters[,d+2])
df.shift.sum <- as.data.frame(c)
for (x in 0:(d+3)){
df.shift.sum[x+1,2] <-
sum(as.numeric(df.shift[which(sum_parameters == x),]))}
df.sum <- as.data.frame(sum_parameters)
df.sum.sum <- as.data.frame(c)
for (x in 0:(d+3)){
df.sum.sum[x+1,2] <- sum(sum_parameters == x)}
vector <- c()
for (x in 1:3074){
if(sum_parameters[x] == 2 || sum_parameters[x] == 3 ||
sum_parameters[x] == 4 || as.numeric(df.shift[x,1]) == 1){
vector[x] <- 1
}else{vector[x] <- 0}}
shift.vector.all[[z]] <- vector
}
shift.vector.mvm <- shift.vector.all[[1]]
shift.vector.zt <- shift.vector.all[[2]]
shift.vector.mms <- shift.vector.all[[3]]
sum(shift.vector.mvm ==1)
sum(shift.vector.zt ==1)
sum(shift.vector.mms ==1)
View(df.sum.sum)
parameters.all <- list(parameters.mvm, parameters.zt, parameters.mms)
shift.vector.all <- list()
for (z in 1:3){
parameters <- parameters.all[[z]]
if(z == 3){
g <- 2
}else{g <- 3}
for (y in 1:dim(parameters)[1]){
if (parameters[y,g] == "no shift"){
parameters[y,g] <- 0
} else{parameters[y,g] <- 1}
}
parameters.m <- as.matrix(parameters)
sum_parameters <- apply(parameters.m, 1, function(x){
sum(as.numeric(x))})
if(z == 3){
c <- c(0,1,2,3)
}else{c<- c(0,1,2,3,4)}
if(z == 3){
d <- 0
}
else {d <- 1}
df.shift <- as.data.frame(parameters[,d+2])
df.shift.sum <- as.data.frame(c)
for (x in 0:(d+3)){
df.shift.sum[x+1,2] <-
sum(as.numeric(df.shift[which(sum_parameters == x),]))}
vector <- c()
for (x in 1:3074){
if(sum_parameters[x] == 2 || sum_parameters[x] == 3 ||
sum_parameters[x] == 4 || as.numeric(df.shift[x,1]) == 1){
vector[x] <- 1
}else{vector[x] <- 0}}
shift.vector.all[[z]] <- vector
}
View(df.sum.sum)
shift.vector.mvm <- shift.vector.all[[1]]
shift.vector.zt <- shift.vector.all[[2]]
shift.vector.mms <- shift.vector.all[[3]]
sum(shift.vector.mvm ==1)
sum(shift.vector.zt ==1)
sum(shift.vector.mms ==1)
