col <- c("black", "violetred1", "springgreen")
vjust <- c(1, -0.5, -0.5)
labels <- c("no shift", "left shift", "right shift")
}
if (n == 4){
col <- c("springgreen", "black", "cyan", "orange")
vjust <- c(-0.5, -0.5, -0.5, -0.5)
labels <- c("left shift", "right shift", "no shift", "precipitated")
}
library("ggplot2")
#hier wird ein Datframe mit allen für den dotplot relevanten daten erstellt
peaks <- data.frame(peak.ctrl, peak.rnase, cluster)
#für den barplot muss der auch die Ergebnisse des Clusterings als Dataframe dargestellt werden
number.of.clusters <- data.frame(value = cluster)
#das cluster muss als factor dargestellt sein, vector geht nicht
peaks$cluster <- factor(peaks$cluster)
#hier wird der dotplot erstellt der die peaks gegeneinander aufträgt. Die Punkte werden abhängig von ihrer shiftart eingefärbt
dot.plot <- ggplot(peaks, aes(peak.ctrl,peak.rnase)) +
geom_point(aes(colour = cluster), shape = 19, alpha = 0.5, size = 2)+
labs(x = "Fraction of Control Peak", y = "Fraction of RNase Peak", title = "Peak distribution")+
coord_equal()+
scale_colour_manual(values = col,labels = labels)+
theme_light()
# hier wird ein Barplot erstellt der anzeigt, wie oft die shifttypes jeweils vorkommen
bar.plot <- ggplot(number.of.clusters, aes(factor(value)))+
geom_bar(fill = col
, width = 0.5)+
theme_minimal()+
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid = element_blank(),
panel.border = element_rect(color = "grey", fill = NA),
panel.background = element_rect(fill = "white", colour = NA))+
geom_text(stat = 'count',
aes(label = after_stat(count)),
vjust = vjust,
size = 2.5)
#hier werden die beiden plots zusammengefügt. Der barplot wird unten rechts klein angezeigt
dot.plot +
annotation_custom(grob = ggplotGrob(bar.plot),
xmin = 15,
xmax = 27,
ymin = -1,
ymax = 8)
shift.for.kmeans <- shift_mvm_global*-1
library(factoextra)
library(Rtsne)
z_standardization <- function(x) {
(x - mean(x)) / sd(x)
}
shift.for.kmeans.norm <- z_standardization(shift.for.kmeans)
kmeans_result <- kmeans(shift.for.kmeans.norm, centers = 3)
View(cbind(shift_mvm_global, kmeans_result$cluster))
cluster <- kmeans_result$cluster
#abhängig davon ob es drei oder vier cluster gibt werden unterschiedliche Vektoren verwendet:
n = 3
if (n == 3){
col <- c("black", "violetred1", "springgreen")
vjust <- c(1, -0.5, -0.5)
labels <- c("no shift", "left shift", "right shift")
}
if (n == 4){
col <- c("springgreen", "black", "cyan", "orange")
vjust <- c(-0.5, -0.5, -0.5, -0.5)
labels <- c("left shift", "right shift", "no shift", "precipitated")
}
library("ggplot2")
#hier wird ein Datframe mit allen für den dotplot relevanten daten erstellt
peaks <- data.frame(peak.ctrl, peak.rnase, cluster)
#für den barplot muss der auch die Ergebnisse des Clusterings als Dataframe dargestellt werden
number.of.clusters <- data.frame(value = cluster)
#das cluster muss als factor dargestellt sein, vector geht nicht
peaks$cluster <- factor(peaks$cluster)
#hier wird der dotplot erstellt der die peaks gegeneinander aufträgt. Die Punkte werden abhängig von ihrer shiftart eingefärbt
dot.plot <- ggplot(peaks, aes(peak.ctrl,peak.rnase)) +
geom_point(aes(colour = cluster), shape = 19, alpha = 0.5, size = 2)+
labs(x = "Fraction of Control Peak", y = "Fraction of RNase Peak", title = "Peak distribution")+
coord_equal()+
scale_colour_manual(values = col,labels = labels)+
theme_light()
# hier wird ein Barplot erstellt der anzeigt, wie oft die shifttypes jeweils vorkommen
bar.plot <- ggplot(number.of.clusters, aes(factor(value)))+
geom_bar(fill = col
, width = 0.5)+
theme_minimal()+
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid = element_blank(),
panel.border = element_rect(color = "grey", fill = NA),
panel.background = element_rect(fill = "white", colour = NA))+
geom_text(stat = 'count',
aes(label = after_stat(count)),
vjust = vjust,
size = 2.5)
#hier werden die beiden plots zusammengefügt. Der barplot wird unten rechts klein angezeigt
dot.plot +
annotation_custom(grob = ggplotGrob(bar.plot),
xmin = 15,
xmax = 27,
ymin = -1,
ymax = 8)
shift.for.kmeans <- shift_mvm_global*-1
library(factoextra)
library(Rtsne)
z_standardization <- function(x) {
(x - mean(x)) / sd(x)
}
shift.for.kmeans.norm <- z_standardization(shift.for.kmeans)
kmeans_result <- kmeans(shift.for.kmeans.norm, centers = 3, nstart = 25)
View(cbind(shift_mvm_global, kmeans_result$cluster))
cluster <- kmeans_result$cluster
#abhängig davon ob es drei oder vier cluster gibt werden unterschiedliche Vektoren verwendet:
n = 3
if (n == 3){
col <- c("black", "violetred1", "springgreen")
vjust <- c(1, -0.5, -0.5)
labels <- c("no shift", "left shift", "right shift")
}
if (n == 4){
col <- c("springgreen", "black", "cyan", "orange")
vjust <- c(-0.5, -0.5, -0.5, -0.5)
labels <- c("left shift", "right shift", "no shift", "precipitated")
}
library("ggplot2")
#hier wird ein Datframe mit allen für den dotplot relevanten daten erstellt
peaks <- data.frame(peak.ctrl, peak.rnase, cluster)
#für den barplot muss der auch die Ergebnisse des Clusterings als Dataframe dargestellt werden
number.of.clusters <- data.frame(value = cluster)
#das cluster muss als factor dargestellt sein, vector geht nicht
peaks$cluster <- factor(peaks$cluster)
#hier wird der dotplot erstellt der die peaks gegeneinander aufträgt. Die Punkte werden abhängig von ihrer shiftart eingefärbt
dot.plot <- ggplot(peaks, aes(peak.ctrl,peak.rnase)) +
geom_point(aes(colour = cluster), shape = 19, alpha = 0.5, size = 2)+
labs(x = "Fraction of Control Peak", y = "Fraction of RNase Peak", title = "Peak distribution")+
coord_equal()+
scale_colour_manual(values = col,labels = labels)+
theme_light()
# hier wird ein Barplot erstellt der anzeigt, wie oft die shifttypes jeweils vorkommen
bar.plot <- ggplot(number.of.clusters, aes(factor(value)))+
geom_bar(fill = col
, width = 0.5)+
theme_minimal()+
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid = element_blank(),
panel.border = element_rect(color = "grey", fill = NA),
panel.background = element_rect(fill = "white", colour = NA))+
geom_text(stat = 'count',
aes(label = after_stat(count)),
vjust = vjust,
size = 2.5)
#hier werden die beiden plots zusammengefügt. Der barplot wird unten rechts klein angezeigt
dot.plot +
annotation_custom(grob = ggplotGrob(bar.plot),
xmin = 15,
xmax = 27,
ymin = -1,
ymax = 8)
shift.for.kmeans <- shift_mvm_global*-1
library(factoextra)
library(Rtsne)
z_standardization <- function(x) {
(x - mean(x)) / sd(x)
}
shift.for.kmeans.norm <- z_standardization(shift.for.kmeans)
kmeans_result <- kmeans(shift.for.kmeans.norm, centers = 3, nstart = 25, algorithm = "Hartigan-Wong")
View(cbind(shift_mvm_global, kmeans_result$cluster))
shift.for.kmeans <- shift_mvm_global
library(factoextra)
library(Rtsne)
z_standardization <- function(x) {
(x - mean(x)) / sd(x)
}
shift.for.kmeans.norm <- z_standardization(shift.for.kmeans)
kmeans_result <- kmeans(shift.for.kmeans.norm, centers = 3, nstart = 25, algorithm = "Hartigan-Wong")
View(cbind(shift_mvm_global, kmeans_result$cluster))
library("ggpubr")
library("factoextra")
library("ggplot2")
df <- data.frame(cbind(globalpeak.ctrl.mvm, globalpeak.rnase.mvm))
res.km <- kmeans(scale(df[, -5]), 3, nstart = 25)
for (x in 1:length(res.km$cluster)){
if (res.km$cluster[x] == 1){
res.km$cluster[x] <- "Light Proteins"
}
if (res.km$cluster[x] == 2){
res.km$cluster[x] <- "Medium Proteins"
}
if (res.km$cluster[x] == 3){
res.km$cluster[x] <- "Heavy Proteins"
}}
g <- fviz_cluster(res.km, data = df,
geom = "point",
xlab = "Global Control Peaks",
ylab = "Global RNase Peaks",
main = "Clusters of Peaks",
ggtheme = theme_bw())
g + theme(axis.x.text = element_blank())
library("ggpubr")
library("factoextra")
library("ggplot2")
df <- data.frame(cbind(globalpeak.ctrl.mvm, globalpeak.rnase.mvm))
res.km <- kmeans(scale(df[, -5]), 3, nstart = 25)
for (x in 1:length(res.km$cluster)){
if (res.km$cluster[x] == 1){
res.km$cluster[x] <- "Light Proteins"
}
if (res.km$cluster[x] == 2){
res.km$cluster[x] <- "Medium Proteins"
}
if (res.km$cluster[x] == 3){
res.km$cluster[x] <- "Heavy Proteins"
}}
g <- fviz_cluster(res.km, data = df,
geom = "point",
xlab = "Global Control Peaks",
ylab = "Global RNase Peaks",
main = "Clusters of Peaks",
ggtheme = theme_bw())
g + theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank())
library("ggpubr")
library("factoextra")
library("ggplot2")
df <- data.frame(cbind(globalpeak.ctrl.mvm, globalpeak.rnase.mvm))
res.km <- kmeans(scale(df[, -5]), 3, nstart = 25)
for (x in 1:length(res.km$cluster)){
if (res.km$cluster[x] == 1){
res.km$cluster[x] <- "Light Proteins"
}
if (res.km$cluster[x] == 2){
res.km$cluster[x] <- "Medium Proteins"
}
if (res.km$cluster[x] == 3){
res.km$cluster[x] <- "Heavy Proteins"
}}
g <- fviz_cluster(res.km, data = df,
geom = "point",
xlab = "Global Control Peaks",
ylab = "Global RNase Peaks",
main = "Clusters of Peaks",
ggtheme = theme_bw())
g + theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank()) +
geom_text(aes(label = label),
x = c(0, 1, 1, 0),
y = c(0, 0, 1, 1),
color = "red",
size = 4,
hjust = c(0, 1, 1, 0),
vjust = c(0, 0, 1, 1))
library("ggpubr")
library("factoextra")
library("ggplot2")
df <- data.frame(cbind(globalpeak.ctrl.mvm, globalpeak.rnase.mvm))
res.km <- kmeans(scale(df[, -5]), 3, nstart = 25)
for (x in 1:length(res.km$cluster)){
if (res.km$cluster[x] == 1){
res.km$cluster[x] <- "Light Proteins"
}
if (res.km$cluster[x] == 2){
res.km$cluster[x] <- "Medium Proteins"
}
if (res.km$cluster[x] == 3){
res.km$cluster[x] <- "Heavy Proteins"
}}
label = c(10, 20, 30, 40)
g <- fviz_cluster(res.km, data = df,
geom = "point",
xlab = "Global Control Peaks",
ylab = "Global RNase Peaks",
main = "Clusters of Peaks",
ggtheme = theme_bw())
g + theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank()) +
geom_text(aes(label = label),
x = c(0, 1, 1, 0),
y = c(0, 0, 1, 1),
color = "red",
size = 4,
hjust = c(0, 1, 1, 0),
vjust = c(0, 0, 1, 1))
library("ggpubr")
library("factoextra")
library("ggplot2")
df <- data.frame(cbind(globalpeak.ctrl.mvm, globalpeak.rnase.mvm))
res.km <- kmeans(scale(df[, -5]), 3, nstart = 25)
for (x in 1:length(res.km$cluster)){
if (res.km$cluster[x] == 1){
res.km$cluster[x] <- "Light Proteins"
}
if (res.km$cluster[x] == 2){
res.km$cluster[x] <- "Medium Proteins"
}
if (res.km$cluster[x] == 3){
res.km$cluster[x] <- "Heavy Proteins"
}}
g <- fviz_cluster(res.km, data = df,
geom = "point",
xlab = "Global Control Peaks",
ylab = "Global RNase Peaks",
main = "Clusters of Peaks",
ggtheme = theme_bw())
g + theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank())
shift_named <- cbind(shift_mvm_named, shift_zt_named, shift_mms_named)
plots_RBP <- list()
library("ggplot2")
for (x in 1:3){
if (x == 3){
col <- c("springgreen", "cyan", "violetred1")
vjust <- c(-0.5, 1, -0.5)
labels <- c("left shift", "no shift", "right shift")
} else {
col <- c("springgreen", "cyan", "violetred1", "orange")
vjust <- c(-0.5, 1, -0.5, -0.5)
labels <- c("left shift", "no shift", "precipitated", "right shift")
}
title <- c("Shifttypes Mean Value Method", "Shifttypes z-Transformation", "Shifttypes Min-Max-Scaling")
peaks <- data.frame(peak.ctrl, peak.rnase, shift_named[,x])
number.of.clusters <- data.frame(value = shift_named[,x])
peaks$cluster <- factor(shift_named[,x])
dot.plot <- ggplot(peaks, aes(peak.ctrl,peak.rnase)) +
geom_point(aes(colour = shift_named[,x]), shape = 19, alpha = 0.75, size = 2)+
labs(x = "Fraction of Control Peak", y = "Fraction of RNase Peak", title = title[x])+
coord_equal()+
scale_colour_manual(values = col,labels = labels, name = "shifttypes")+
theme_light()
bar.plot <- ggplot(number.of.clusters, aes(factor(value)))+
geom_bar(fill = col
, width = 0.5)+
theme_minimal()+
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid = element_blank(),
panel.border = element_rect(color = "grey", fill = NA),
panel.background = element_rect(fill = "white", colour = NA))+
geom_text(stat = 'count',
aes(label = after_stat(count)),
vjust = vjust,
size = 2.5)
plot_RBP[[x]] <- dot.plot + annotation_custom(grob = ggplotGrob(bar.plot),
xmin = 15,
xmax = 26.75,
ymin = -1,
ymax = 8)
print(plot_RBP[[x]])
}
#print(plot_RBP[[1]])
library("ggpubr")
library("factoextra")
library("ggplot2")
df <- data.frame(cbind(globalpeak.ctrl.mvm, globalpeak.rnase.mvm))
res.km <- kmeans(scale(df[, -5]), 3, nstart = 25)
for (x in 1:length(res.km$cluster)){
if (res.km$cluster[x] == 1){
res.km$cluster[x] <- "Light Proteins"
}
if (res.km$cluster[x] == 2){
res.km$cluster[x] <- "Medium Proteins"
}
if (res.km$cluster[x] == 3){
res.km$cluster[x] <- "Heavy Proteins"
}}
g <- fviz_cluster(res.km, data = df,
geom = "point",
xlab = "Global Control Peaks",
ylab = "Global RNase Peaks",
main = "Clusters of Peaks",
ggtheme = theme_bw())
g + theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank())
shift_named <- cbind(shift_mvm_named, shift_zt_named, shift_mms_named)
plots_RBP <- list()
library("ggplot2")
for (x in 1:3){
if (x == 3){
col <- c("springgreen", "cyan", "orange")
vjust <- c(-0.5, 1, -0.5)
labels <- c("left shift", "no shift", "right shift")
} else {
col <- c("springgreen", "cyan", "violetred1", "orange")
vjust <- c(-0.5, 1, -0.5, -0.5)
labels <- c("left shift", "no shift", "precipitated", "right shift")
}
title <- c("Shifttypes Mean Value Method", "Shifttypes z-Transformation", "Shifttypes Min-Max-Scaling")
peaks <- data.frame(peak.ctrl, peak.rnase, shift_named[,x])
number.of.clusters <- data.frame(value = shift_named[,x])
peaks$cluster <- factor(shift_named[,x])
dot.plot <- ggplot(peaks, aes(peak.ctrl,peak.rnase)) +
geom_point(aes(colour = shift_named[,x]), shape = 19, alpha = 0.75, size = 2)+
labs(x = "Fraction of Control Peak", y = "Fraction of RNase Peak", title = title[x])+
coord_equal()+
scale_colour_manual(values = col,labels = labels, name = "shifttypes")+
theme_light()
bar.plot <- ggplot(number.of.clusters, aes(factor(value)))+
geom_bar(fill = col
, width = 0.5)+
theme_minimal()+
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid = element_blank(),
panel.border = element_rect(color = "grey", fill = NA),
panel.background = element_rect(fill = "white", colour = NA))+
geom_text(stat = 'count',
aes(label = after_stat(count)),
vjust = vjust,
size = 2.5)
plot_RBP[[x]] <- dot.plot + annotation_custom(grob = ggplotGrob(bar.plot),
xmin = 15,
xmax = 26.75,
ymin = -1,
ymax = 8)
print(plot_RBP[[x]])
}
#print(plot_RBP[[1]])
knitr::opts_chunk$set(echo = TRUE)
n = 2
shift_mms_global <- globalpeak.rnase.mms - globalpeak.ctrl.mms
shift_mms_named <- shift_mms_global
for (i in 1:nrow(ctrl.mms)) {
if (i %in% precipitated.mms) {shift_mms_named[i] <- "precipitated"}
else if (shift_mms_global [i] < (-n)){shift_mms_named [i] <- "right shift"}
else if (shift_mms_global [i] > n){shift_mms_named [i] <- "left shift"}
else (shift_mms_named [i] <- "no shift")
}
# View(shift_mms_named)
n = 2
shift_zt_global <- globalpeak.rnase.zt - globalpeak.ctrl.zt
shift_zt_named <- shift_zt_global
for (i in 1:nrow(ctrl.zt)) {
if (i %in% precipitated.zt) {shift_zt_named[i] <- "precipitated"}
else if (shift_zt_global [i] < (-n)){shift_zt_named [i] <- "right shift"}
else if (shift_zt_global [i] > n){shift_zt_named [i] <- "left shift"}
else (shift_zt_named [i] <- "no shift")
}
# View(shift_zt_named)
n = 2
shift_mvm_global <- globalpeak.rnase.mvm - globalpeak.ctrl.mvm
shift_mvm_named <- shift_mvm_global
for (i in 1:nrow(rnase.mvm)) {
if (i %in% precipitated.mvm) {shift_mvm_named[i] <- "precipitated"}
else if (shift_mvm_global [i] < (-n)){shift_mvm_named [i] <- "right shift"}
else if (shift_mvm_global [i] > n){shift_mvm_named [i] <- "left shift"}
else (shift_mvm_named [i] <- "no shift")
}
# View(shift_mvm_named)
shift_named <- cbind(shift_mvm_named, shift_zt_named, shift_mms_named)
plots_RBP <- list()
library("ggplot2")
for (x in 1:3){
if (x == 3){
col <- c("springgreen", "cyan", "orange")
vjust <- c(-0.5, 1, -0.5)
labels <- c("left shift", "no shift", "right shift")
} else {
col <- c("springgreen", "cyan", "violetred1", "orange")
vjust <- c(-0.5, 1, -0.5, -0.5)
labels <- c("left shift", "no shift", "precipitated", "right shift")
}
title <- c("Shifttypes Mean Value Method", "Shifttypes z-Transformation", "Shifttypes Min-Max-Scaling")
peaks <- data.frame(peak.ctrl, peak.rnase, shift_named[,x])
number.of.clusters <- data.frame(value = shift_named[,x])
peaks$cluster <- factor(shift_named[,x])
dot.plot <- ggplot(peaks, aes(peak.ctrl,peak.rnase)) +
geom_point(aes(colour = shift_named[,x]),
shape = 19,
alpha = 0.5, size = 1.5,
position = position_jitter(width = 0.1, height = 0.1))+
labs(x = "Fraction of Control Peak",
y = "Fraction of RNase Peak",
title = title[x])+
coord_equal()+
scale_colour_manual(values = col,labels = labels, name = "shifttypes")+
theme_light()
bar.plot <- ggplot(number.of.clusters, aes(factor(value)))+
geom_bar(fill = col, width = 0.5)+
theme_minimal()+
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid = element_blank(),
panel.border = element_rect(color = "grey", fill = NA),
panel.background = element_rect(fill = "white", colour = NA))+
geom_text(stat = 'count',
aes(label = after_stat(count)),
vjust = vjust,
size = 2.5)
plot_RBP[[x]] <- dot.plot + annotation_custom(grob = ggplotGrob(bar.plot),
xmin = 15,
xmax = 26.75,
ymin = -1,
ymax = 8)
print(plot_RBP[[x]])
}
#print(plot_RBP[[1]])
