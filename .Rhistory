)
library(ggplot2)
library(ggpubr)
parameters <- parameters.zt
#parameters <- list(parameters.mvm, parameters.zt) #parameters.mms fehlt noch, ist aber noch nicht definiert
#für alles eine lapply
#set the third column (shifttype) to 1 and 0:
for (y in 1:dim(parameters)[1]){
if (parameters[y,3] == "no shift"){
parameters[y,3] <- 0
} else{parameters[y,3] <- 1}
}
parameters.m <- as.matrix(parameters)
sum_parameters <- apply(parameters.m, 1, function(x){
sum(as.numeric(x))})
df <- as.data.frame(sum_parameters)
ggplot(df, aes(factor(sum_parameters)))+
geom_bar(colour = "darkblue", fill="skyblue")+
geom_text(stat = 'count', aes(label = ..count..), vjust = -0.5)+
labs(x = "number of parameters pro shift", y = "number of proteins", title = "How many parameters support the proteins?")
library(ggplot2)
library(ggpubr)
parameters <- parameters.zt
#parameters <- list(parameters.mvm, parameters.zt) #parameters.mms fehlt noch, ist aber noch nicht definiert
#für alles eine lapply
#set the third column (shifttype) to 1 and 0:
for (y in 1:dim(parameters)[1]){
if (parameters[y,3] == "no shift"){
parameters[y,3] <- 0
} else{parameters[y,3] <- 1}
}
parameters.m <- as.matrix(parameters)
sum_parameters <- apply(parameters.m, 1, function(x){
sum(as.numeric(x))})
df <- as.data.frame(sum_parameters)
ggplot(df, aes(factor(sum_parameters)))+
geom_bar(colour = "darkblue", fill="skyblue")+
geom_text(stat = 'count', aes(label = label = after_stat(count)), vjust = -0.5)+
library(ggplot2)
library(ggpubr)
parameters <- parameters.zt
#parameters <- list(parameters.mvm, parameters.zt) #parameters.mms fehlt noch, ist aber noch nicht definiert
#für alles eine lapply
#set the third column (shifttype) to 1 and 0:
for (y in 1:dim(parameters)[1]){
if (parameters[y,3] == "no shift"){
parameters[y,3] <- 0
} else{parameters[y,3] <- 1}
}
parameters.m <- as.matrix(parameters)
sum_parameters <- apply(parameters.m, 1, function(x){
sum(as.numeric(x))})
df <- as.data.frame(sum_parameters)
ggplot(df, aes(factor(sum_parameters)))+
geom_bar(colour = "darkblue", fill="skyblue")+
geom_text(stat = 'count', aes(label = after_stat(count)), vjust = -0.5)+
labs(x = "number of parameters pro shift", y = "number of proteins", title = "How many parameters support the proteins?")
library(ggplot2)
# Daten für den ersten Barplot
df1 <- data.frame(Kategorie = c("A", "B", "C", "D", "E"),
Wert = c(10, 8, 6, 4, 2))
# Daten für den zweiten Barplot
df2 <- data.frame(Kategorie = c("A", "B", "C", "D", "E"),
Wert = c(15, 12, 9, 6, 3))
# Erster Barplot
p <- ggplot(df1, aes(x = Kategorie, y = Wert)) +
geom_bar(stat = "identity", fill = "blue") +
ylim(0, max(df1$Wert)) +
ylab("Wert") +
ggtitle("Barplot 1")
# Zweiter Barplot (neben dem ersten)
p <- p + geom_bar(data = df2, aes(x = Kategorie, y = Wert), stat = "identity", fill = "red")
# Ausgabe des Plots
print(p)
library(ggplot2)
# Daten für den ersten Barplot
df1 <- data.frame(Kategorie = c("A", "B", "C", "D", "E"),
Wert = c(10, 8, 6, 4, 2))
# Daten für den zweiten Barplot
df2 <- data.frame(Kategorie = c("A", "B", "C", "D", "E"),
Wert = c(15, 12, 9, 6, 3))
# Erster Barplot
p <- ggplot(df1, aes(x = Kategorie, y = Wert, fill = "Barplot 1")) +
geom_bar(stat = "identity") +
ylim(0, max(df1$Wert)) +
ylab("Wert") +
ggtitle("Barplot 1")
# Zweiter Barplot (neben dem ersten)
p <- p + geom_bar(data = df2, aes(x = Kategorie, y = Wert, fill = "Barplot 2"), stat = "identity")
# Farben festlegen
p <- p + scale_fill_manual(values = c("Barplot 1" = "blue", "Barplot 2" = "red"))
# Ausgabe des Plots
print(p)
library(ggplot2)
# Daten für den ersten Barplot
df1 <- data.frame(Kategorie = c("A", "B", "C", "D", "E"),
Wert = c(10, 8, 6, 4, 2),
Gruppe = "Barplot 1")
# Daten für den zweiten Barplot
df2 <- data.frame(Kategorie = c("F", "G", "H", "I", "J"),
Wert = c(15, 12, 9, 6, 3),
Gruppe = "Barplot 2")
# Kombinierte Daten
df_combined <- rbind(df1, df2)
# Barplot
p <- ggplot(df_combined, aes(x = Kategorie, y = Wert, fill = Gruppe)) +
geom_bar(stat = "identity") +
ylim(0, max(df_combined$Wert)) +
ylab("Wert") +
ggtitle("Combined Barplot") +
scale_fill_manual(values = c("Barplot 1" = "blue", "Barplot 2" = "red"))
# Ausgabe des Plots
print(p)
library(ggplot2)
# Daten für Wert A
df_a <- data.frame(Kategorie = c("A", "B", "C", "D", "E"),
Wert_A = c(10, 8, 6, 4, 2))
# Daten für Wert B
df_b <- data.frame(Kategorie = c("A", "B", "C", "D", "E"),
Wert_B = c(15, 12, 9, 6, 3))
# Kombinierter Dataframe
df_combined <- data.frame(Kategorie = rep(df_a$Kategorie, 2),
Wert = c(df_a$Wert_A, df_b$Wert_B),
Gruppe = rep(c("Wert A", "Wert B"), each = nrow(df_a)))
# Barplot
p <- ggplot(df_combined, aes(x = Kategorie, y = Wert, fill = Gruppe)) +
geom_bar(stat = "identity", position = "dodge") +
ylab("Wert") +
ggtitle("Kategorien mit Wert A und Wert B") +
scale_fill_manual(values = c("Wert A" = "blue", "Wert B" = "red"))
# Ausgabe des Plots
print(p)
View(df_b)
View(df_combined)
View(df_combined)
View(parameters)
View(parameters)
sum(parameters[,3])
df4.para <- parameters[which(sum_parameters == 4)]
which(sum_parameters == 4)
paramters[30]
parameters[30]
View(parameters)
df4.para <- parameters[which(sum_parameters == 4),]
View(df4.para)
df0.para <- parameters[which(sum_parameters == 0),]
View(df0.para)
View(df1.para)
df4.para <- parameters[which(sum_parameters == 4),]
df3.para <- parameters[which(sum_parameters == 3),]
df2.para <- parameters[which(sum_parameters == 2),]
df1.para <- parameters[which(sum_parameters == 1),]
df0.para <- parameters[which(sum_parameters == 0),]
View(df1.para)
df1.para.sums <- apply(df1.para, 2, function(x){
sum(as.numeric(x))})
View(df1.para.sums)
df1.para.sums <- as.data.frame(apply(df1.para, 2, function(x){
sum(as.numeric(x))}))
library(ggplot2)
library(ggpubr)
View(parameters)
parameters <- parameters.zt
#parameters <- list(parameters.mvm, parameters.zt) #parameters.mms fehlt noch, ist aber noch nicht definiert
#für alles eine lapply
#set the third column (shifttype) to 1 and 0:
for (y in 1:dim(parameters)[1]){
if (parameters[y,3] == "no shift"){
parameters[y,3] <- 0
} else{parameters[y,3] <- 1}
}
parameters.m <- as.matrix(parameters)
sum_parameters <- apply(parameters.m, 1, function(x){
sum(as.numeric(x))})
df <- as.data.frame(sum_parameters)
ggplot(df, aes(factor(sum_parameters)))+
geom_bar(colour = "darkblue", fill="skyblue")+
geom_text(stat = 'count', aes(label = after_stat(count)), vjust = -0.5)+
labs(x = "number of parameters pro shift", y = "number of proteins", title = "How many parameters support the proteins?")
df0.para.sums <- as.data.frame(apply(df0.para, 2, function(x){
sum(as.numeric(x))}))
df1.para.sums <- as.data.frame(apply(df1.para, 2, function(x){
sum(as.numeric(x))}))
df2.para.sums <- as.data.frame(apply(df2.para, 2, function(x){
sum(as.numeric(x))}))
df3.para.sums <- as.data.frame(apply(df3.para, 2, function(x){
sum(as.numeric(x))}))
df4.para.sums <- as.data.frame(apply(df4.para, 2, function(x){
sum(as.numeric(x))}))
View(df4.para.sums)
ggplot(df, aes(factor(sum_parameters)))+
geom_bar(colour = "darkblue", fill="skyblue")+
geom_text(stat = 'count', aes(label = after_stat(count)), vjust = -0.5)+
labs(x = "number of parameters pro shift", y = "number of proteins", title = "How many parameters support the proteins?")
View(df3.para.sums)
View(df)
View(df_combined)
df0.para.sums <- as.data.frame(c(0,1,2,3,4), apply(df0.para, 2, function(x){
sum(as.numeric(x))}))
df0.para.sums <- as.data.frame(t(c(0,1,2,3,4)), apply(df0.para, 2, function(x){
sum(as.numeric(x))}))
View(df0.para.sums)
df0.para.sums <- as.data.frame(t(c(0,1,2,3,4)), apply(df0.para, 2, function(x){
sum(as.numeric(x))}))
View(df0.para.sums)
df0.para.sums <- as.data.frame( apply(df0.para, 2, function(x){
sum(as.numeric(x))}))
View(df0.para.sums)
df0.para <- parameters[which(sum_parameters == 0),]
df0.para.sums <- as.data.frame(apply(df0.para, 2, function(x){
sum(as.numeric(x))}))
View(df0.para.sums)
View(df1.para.sums)
df1.para.sums <- as.data.frame(t(c(0,1,2,3,4),apply(df1.para, 2, function(x){
View(df1.para.sums)
df1.para.sums <- as.data.frame(t(c(0,1,2,3,4)),apply(df1.para, 2, function(x){
sum(as.numeric(x))}))
View(df1.para.sums)
df1.para.sums <- as.data.frame(t(c(0,1,2,3,4)),apply(df1.para, 2, function(x){
sum(as.numeric(x))}))
View(df1.para.sums)
View(df1.para.sums)
View(df2.para.sums)
df1.para.sums
library(ggplot2)
library(ggpubr)
View(parameters)
parameters <- parameters.zt
#parameters <- list(parameters.mvm, parameters.zt) #parameters.mms fehlt noch, ist aber noch nicht definiert
#für alles eine lapply
#set the third column (shifttype) to 1 and 0:
for (y in 1:dim(parameters)[1]){
if (parameters[y,3] == "no shift"){
parameters[y,3] <- 0
} else{parameters[y,3] <- 1}
}
parameters.m <- as.matrix(parameters)
sum_parameters <- apply(parameters.m, 1, function(x){
sum(as.numeric(x))})
df <- as.data.frame(sum_parameters)
df4.para <- parameters[which(sum_parameters == 4),]
df3.para <- parameters[which(sum_parameters == 3),]
df2.para <- parameters[which(sum_parameters == 2),]
df1.para <- parameters[which(sum_parameters == 1),]
df0.para <- parameters[which(sum_parameters == 0),]
df0.para.sums <- as.data.frame(apply(df0.para, 2, function(x){
sum(as.numeric(x))}))
df1.para.sums <- as.data.frame(t(c(0,1,2,3,4)),apply(df1.para, 2, function(x){
sum(as.numeric(x))}))
df2.para.sums <- as.data.frame(apply(df2.para, 2, function(x){
sum(as.numeric(x))}))
df3.para.sums <- as.data.frame(apply(df3.para, 2, function(x){
sum(as.numeric(x))}))
df4.para.sums <- as.data.frame(apply(df4.para, 2, function(x){
sum(as.numeric(x))}))
df1.para.sums
#library(ggplot2)
#library(ggpubr)
View(parameters)
parameters <- parameters.zt
#parameters <- list(parameters.mvm, parameters.zt) #parameters.mms fehlt noch, ist aber noch nicht definiert
#für alles eine lapply
#set the third column (shifttype) to 1 and 0:
for (y in 1:dim(parameters)[1]){
if (parameters[y,3] == "no shift"){
parameters[y,3] <- 0
} else{parameters[y,3] <- 1}
}
parameters.m <- as.matrix(parameters)
sum_parameters <- apply(parameters.m, 1, function(x){
sum(as.numeric(x))})
df <- as.data.frame(sum_parameters)
df4.para <- parameters[which(sum_parameters == 4),]
df3.para <- parameters[which(sum_parameters == 3),]
df2.para <- parameters[which(sum_parameters == 2),]
df1.para <- parameters[which(sum_parameters == 1),]
df0.para <- parameters[which(sum_parameters == 0),]
df0.para.sums <- as.data.frame(apply(df0.para, 2, function(x){
sum(as.numeric(x))}))
df1.para.sums <- as.data.frame(t(c(0,1,2,3,4)),apply(df1.para, 2, function(x){
sum(as.numeric(x))}))
df2.para.sums <- as.data.frame(apply(df2.para, 2, function(x){
sum(as.numeric(x))}))
df3.para.sums <- as.data.frame(apply(df3.para, 2, function(x){
sum(as.numeric(x))}))
df4.para.sums <- as.data.frame(apply(df4.para, 2, function(x){
sum(as.numeric(x))}))
df1.para.sums
df1.para.sums <- as.data.frame(category = t(c(0,1,2,3,4)),number = apply(df1.para, 2, function(x){
sum(as.numeric(x))}))
df1.para.sums <- as.data.frame(category = c(0,1,2,3,4),number = apply(df1.para, 2, function(x){
sum(as.numeric(x))}))
df1.para.sums <- cbind(c(0,1,2,3,4),as.data.frame(apply(df1.para, 2, function(x){
sum(as.numeric(x))})))
df4.para.sums <- as.data.frame(apply(df4.para, 2, function(x){
sum(as.numeric(x))}))
df4.para <- parameters[1,which(sum_parameters == 4),]
View(parameters)
df.1 <- parameters[,1]
View(df.1)
df.1.sum <- (apply(parameters[which(sum_parameters == 0),], 2, function(x){
sum(as.numeric(x))}))
View(df.1.sum)
df.1.sum <- sum(df.1[which(sum_parameters == 1),]
View(df.1.sum)
df.1.sum <- sum(df.1[which(sum_parameters == 1),])
df.1.sum <- sum(df.1[which(sum_parameters == 1),])
df.1[which(sum_parameters == 1),]
which(sum_parameters == 1)
df.1 <- as.data.frame(parameters[,1])
df.1.sum <- sum(df.1[which(sum_parameters == 1),])
View(df.1.sum)
for (x in 0:4){
df.1.sum[1,x] <- sum(df.1[which(sum_parameters == x),])}
df.1.sum <- df.1
for (x in 0:4){
df.1.sum[1,x] <- sum(df.1[which(sum_parameters == x),])}
View(df.1.sum)
df.1.sum <- df.1
View(df.1.sum)
df.1.sum <- as.data.frame(c(0,0,0,0,0))
View(df.1.sum)
df.1.sum <- as.data.frame(c(0,0,0,0,0))
View(df.1.sum)
for (x in 0:4){
df.1.sum[1,x] <- sum(df.1[which(sum_parameters == x),])}
for (x in 0:4){
df.1.sum[1,x+1] <- sum(df.1[which(sum_parameters == x),])}
View(df.1.sum)
for (x in 0:4){
df.1.sum[x+1,1] <- sum(df.1[which(sum_parameters == x),])}
View(df.1.sum)
df.1.sum <- as.data.frame(c(0,0,0,0,0))
for (x in 0:4){
df.1.sum[x+1,1] <- sum(df.1[which(sum_parameters == x),])}
View(df.1.sum)
df.1.sum <- as.data.frame(c(0,0,0,0,0))
for (x in 0:4){
df.1.sum[x+1,2] <- sum(df.1[which(sum_parameters == x),])}
View(df.1.sum)
df.1.sum <- as.data.frame(c(0,1,2,3,4))
for (x in 0:4){
df.1.sum[x+1,2] <- sum(df.1[which(sum_parameters == x),])}
View(df.1.sum)
df.glob <- as.data.frame(parameters[,1])
df.glob.sum <- as.data.frame(c(0,1,2,3,4))
for (x in 0:4){
df.glob.sum[x+1,2] <- sum(df.glob[which(sum_parameters == x),])}
df.loc <- as.data.frame(parameters[,2])
df.loc.sum <- as.data.frame(c(0,1,2,3,4))
for (x in 0:4){
df.loc.sum[x+1,2] <- sum(df.loc[which(sum_parameters == x),])}
df.shift <- as.data.frame(parameters[,3])
df.shift.sum <- as.data.frame(c(0,1,2,3,4))
for (x in 0:4){
df.shift.sum[x+1,2] <- sum(df.shift[which(sum_parameters == x),])}
df.shoulder <- as.data.frame(parameters[,4])
df.shift <- as.data.frame(parameters[,3])
df.shift.sum <- as.data.frame(c(0,1,2,3,4))
for (x in 0:4){
df.shift.sum[x+1,2] <- sum(df.shift[which(sum_parameters == x),])}
for (x in 0){
df.shift.sum[x+1,2] <- sum(df.shift[which(sum_parameters == x),])}
for (x in 1){
df.shift.sum[x+1,2] <- sum(df.shift[which(sum_parameters == x),])}
[which(sum_parameters == 1),]
which(sum_parameters == 1)
df.shift[which(sum_parameters == 1)]
df.shift[which(sum_parameters == 1),]
df.shift[which(sum_parameters == 0),]
df.shift[which(sum_parameters == 2),]
df.shift[which(sum_parameters == 3),]
df.shift[which(sum_parameters == 4),]
sum(df.shift[which(sum_parameters == 4),])
sum(as.numeric(df.shift[which(sum_parameters == 4),])
sum(as.numeric(df.shift[which(sum_parameters == 4),]))
as.numeric(df.shift[which(sum_parameters == 4),])
sum(as.numeric(df.shift[which(sum_parameters == 4),]))
for (x in 0:4){
df.shift.sum[x+1,2] <- sum(as.numeric(df.shift[which(sum_parameters == x),]))}
df.shoulder <- as.data.frame(parameters[,4])
df.shoulder.sum <- as.data.frame(c(0,1,2,3,4))
for (x in 0:4){
df.shoulder.sum[x+1,2] <- sum(df.shoulder[which(sum_parameters == x),])}
df.glob <- as.data.frame(parameters[,1])
df.glob.sum <- as.data.frame(c(0,1,2,3,4))
for (x in 0:4){
df.glob.sum[x+1,2] <- sum(df.glob[which(sum_parameters == x),])}
df.loc <- as.data.frame(parameters[,2])
df.loc.sum <- as.data.frame(c(0,1,2,3,4))
for (x in 0:4){
df.loc.sum[x+1,2] <- sum(df.loc[which(sum_parameters == x),])}
df.shift <- as.data.frame(parameters[,3])
df.shift.sum <- as.data.frame(c(0,1,2,3,4))
for (x in 0:4){
df.shift.sum[x+1,2] <- sum(as.numeric(df.shift[which(sum_parameters == x),]))}
df.shoulder <- as.data.frame(parameters[,4])
df.shoulder.sum <- as.data.frame(c(0,1,2,3,4))
for (x in 0:4){
df.shoulder.sum[x+1,2] <- sum(df.shoulder[which(sum_parameters == x),])}
View(df_b)
c <- c()
for (x in 0:4){
c[x] <- sum(df.glob[which(sum_parameters == x),])}
df2 <- rbind(df.glob.sum,df.loc.sum,df.shift.sum,df.shoulder.sum)
View(df2)
View(df_combined)
View(df2)
df2 <- data.frame(df.glob.sum,df.loc.sum,df.shift.sum,df.shoulder.sum)
View(df2)
df2 <- rbind(df.glob.sum,df.loc.sum,df.shift.sum,df.shoulder.sum)
View(df2)
df2 <- data.frame(category = c(df.glob.sum[,1], df.loc.sum[,1], df.shift.sum[,1], df.shoulder.sum[,1]),
Value = c(df.glob.sum[,2], df.loc.sum[,2], df.shift.sum[,2], df.shoulder.sum[,2])
)
View(df2)
df2 <- data.frame(category = c(df.glob.sum[,1], df.loc.sum[,1], df.shift.sum[,1], df.shoulder.sum[,1]),
Value = c(df.glob.sum[,2], df.loc.sum[,2], df.shift.sum[,2], df.shoulder.sum[,2]),
group = c(rep(c("glob", "loc", "shift", "shoulder"), each = 5))
)
View(df2)
df2 <- data.frame(category = c(df.glob.sum[,1], df.loc.sum[,1], df.shift.sum[,1], df.shoulder.sum[,1]),
value = c(df.glob.sum[,2], df.loc.sum[,2], df.shift.sum[,2], df.shoulder.sum[,2]),
group = c(rep(c("glob", "loc", "shift", "shoulder"), each = 5))
)
ggplot(df2, aes(x = category, y = value, fill = group)+
ggplot(df2, aes(x = category, y = value, fill = group))+
geom_bar()
ggplot(df2, aes(x = category, y = value, fill = group))+
ggplot(df2, aes(x = category, y = value, fill = group))+
geom_bar()
ggplot(df2, aes(x = category, y = value, fill = group))+
geom_bar(stat = "identity", position = "dodge")
df <- as.data.frame(sum_parameters)
View(df)
sum_parameters <- apply(parameters.m, 1, function(x){
sum(as.numeric(x))})
View(sum_parameters)
df.sum <- as.data.frame(sum_parameters)
df.sum.sum <- as.data.frame(c(0,1,2,3,4))
for (x in 0:4){
df.sum.sum[x+1,2] <- sum(df.sum[which(sum_parameters == x),])}
View(df.sum.sum)
library(ggplot2)
library(ggpubr)
View(parameters)
parameters <- parameters.zt
#parameters <- list(parameters.mvm, parameters.zt) #parameters.mms fehlt noch, ist aber noch nicht definiert
#für alles eine lapply
#set the third column (shifttype) to 1 and 0:
for (y in 1:dim(parameters)[1]){
if (parameters[y,3] == "no shift"){
parameters[y,3] <- 0
} else{parameters[y,3] <- 1}
}
parameters.m <- as.matrix(parameters)
sum_parameters <- apply(parameters.m, 1, function(x){
sum(as.numeric(x))})
df <- as.data.frame(sum_parameters)
ggplot(df, aes(factor(sum_parameters)))+
geom_bar(colour = "darkblue", fill="skyblue")+
geom_text(stat = 'count', aes(label = after_stat(count)), vjust = -0.5)+
labs(x = "number of parameters pro shift", y = "number of proteins", title = "How many parameters support the proteins?")
View(sum_parameters)
df.sum <- as.data.frame(sum_parameters)
df.sum.sum <- as.data.frame(c(0,1,2,3,4))
for (x in 0:4){
df.sum.sum[x+1,2] <- sum(df[which(sum_parameters == x),])}
View(df.sum.sum)
View(df)
sum(df[which(sum_parameters == 0),])
df[which(sum_parameters == 0),]
sum(df[which(sum_parameters == 0),])
sum(sum_parameters == 0))
sum(sum_parameters == 0)
df.sum <- as.data.frame(sum_parameters)
df.sum.sum <- as.data.frame(c(0,1,2,3,4))
for (x in 0:4){
df.sum.sum[x+1,2] <- sum(sum_parameters == x)}
View(df.sum.sum)
View(df.shoulder.sum)
df2 <- data.frame(category = c(df.glob.sum[,1], df.loc.sum[,1], df.shift.sum[,1], df.shoulder.sum[,1], df.sum.sum[,1]),
value = c(df.glob.sum[,2], df.loc.sum[,2], df.shift.sum[,2], df.shoulder.sum[,2], df.sum.sum[,2]),
group = c(rep(c("glob", "loc", "shift", "shoulder", "sum"), each = 5))
)
View(df)
View(df2)
ggplot(df2, aes(x = category, y = value, fill = group))+
geom_bar(stat = "identity", position = "dodge")
ggplot(df2, aes(x = category, y = value, fill = group))+
geom_bar(stat = "identity", position = "dodge")+
geom_text(stat = 'count', aes(label = after_stat(count)), vjust = -0.5)+
labs(x = "number of parameters pro shift", y = "number of proteins", title = "How many parameters support the proteins?")
ggplot(df2, aes(x = category, y = value, fill = group))+
geom_bar(stat = "identity", position = "dodge")+
geom_text(aes(label = value), vjust = -0.5)+
labs(x = "number of parameters pro shift", y = "number of proteins", title = "How many parameters support the proteins?")
ggplot(df2, aes(x = category, y = value, fill = group))+
geom_bar(stat = "identity", position = "dodge")+
geom_text(aes(label = value), vjust = -0.5, position = "dodge")+
labs(x = "number of parameters pro shift", y = "number of proteins", title = "How many parameters support the proteins?")
ggplot(df2, aes(x = category, y = value, fill = group))+
geom_bar(stat = "identity", position = "dodge")+
geom_text(aes(label = value), vjust = -0.5, position = position_dodge(width = 0.9))+
labs(x = "number of parameters pro shift", y = "number of proteins", title = "How many parameters support the proteins?")
ggplot(df2, aes(x = category, y = value, fill = group))+
geom_bar(stat = "identity", position = "dodge")+
geom_text(aes(label = value),
vjust = -0.5,
position = position_dodge(width = 0.9),
size = 2)+
labs(x = "number of parameters pro shift", y = "number of proteins", title = "How many parameters support the proteins?")
